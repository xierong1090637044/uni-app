(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 0:
/*!***************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createApp) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;__webpack_require__(/*! uni-pages */ 4);\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _vueI18n = _interopRequireDefault(__webpack_require__(/*! vue-i18n */ 5));\nvar _App = _interopRequireDefault(__webpack_require__(/*! ./App */ 7));\n\nvar _bmob = _interopRequireDefault(__webpack_require__(/*! @/utils/bmob.js */ 10));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {return Object.getOwnPropertyDescriptor(source, sym).enumerable;}));}ownKeys.forEach(function (key) {_defineProperty(target, key, source[key]);});}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var faIcon = function faIcon() {return __webpack_require__.e(/*! import() | components/kilvn-fa-icon/fa-icon */ \"components/kilvn-fa-icon/fa-icon\").then(__webpack_require__.bind(null, /*! @/components/kilvn-fa-icon/fa-icon.vue */ 409));};\n\n_bmob.default.initialize(\"afaa8342776ad99ff0d49bca224de9b2\", \"9eed865dc5914f2ecedcd63be31e33e9\", \"47f76baf4ee4d90630d7b2bc17f7505c\");\n_vue.default.config.productionTip = false;\n_App.default.mpType = 'app';\n\n_vue.default.use(_vueI18n.default);\nvar i18n = new _vueI18n.default({\n  locale: 'zh-CN',\n  messages: {\n    'en-US': {\n      operational_status: {\n        1: 'Invite',\n        2: 'Game' } },\n\n\n    'zh-CN': {\n      operational_status: {\n        a: '库存成本：',\n        b: '游戏' } } } });\n\n\n\n\n\n_vue.default.prototype._i18n = i18n;\n_vue.default.component('faIcon', faIcon);\n\nvar app = new _vue.default(_objectSpread({\n  i18n: i18n },\n_App.default));var _default =\n\n{\n  components: {\n    faIcon: faIcon } };exports.default = _default;\n\n\ncreateApp(app).$mount();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createApp\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbIkJtb2IiLCJpbml0aWFsaXplIiwiVnVlIiwiY29uZmlnIiwicHJvZHVjdGlvblRpcCIsIkFwcCIsIm1wVHlwZSIsInVzZSIsIlZ1ZUkxOG4iLCJpMThuIiwibG9jYWxlIiwibWVzc2FnZXMiLCJvcGVyYXRpb25hbF9zdGF0dXMiLCJhIiwiYiIsInByb3RvdHlwZSIsIl9pMThuIiwiY29tcG9uZW50IiwiZmFJY29uIiwiYXBwIiwiY29tcG9uZW50cyIsIiRtb3VudCJdLCJtYXBwaW5ncyI6IndJQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1GOztBQUVBQSxjQUFLQyxVQUFMLENBQWdCLGtDQUFoQixFQUFvRCxrQ0FBcEQsRUFBdUYsa0NBQXZGO0FBQ0FDLGFBQUlDLE1BQUosQ0FBV0MsYUFBWCxHQUEyQixLQUEzQjtBQUNBQyxhQUFJQyxNQUFKLEdBQWEsS0FBYjs7QUFFQUosYUFBSUssR0FBSixDQUFRQyxnQkFBUjtBQUNBLElBQU1DLElBQUksR0FBRyxJQUFJRCxnQkFBSixDQUFZO0FBQ3ZCRSxRQUFNLEVBQUUsT0FEZTtBQUV2QkMsVUFBUSxFQUFFO0FBQ1IsYUFBUztBQUNQQyx3QkFBa0IsRUFBRTtBQUNsQixXQUFHLFFBRGU7QUFFbEIsV0FBRyxNQUZlLEVBRGIsRUFERDs7O0FBT1IsYUFBUztBQUNQQSx3QkFBa0IsRUFBRTtBQUNsQkMsU0FBQyxFQUFFLE9BRGU7QUFFbEJDLFNBQUMsRUFBRSxJQUZlLEVBRGIsRUFQRCxFQUZhLEVBQVosQ0FBYjs7Ozs7O0FBa0JBWixhQUFJYSxTQUFKLENBQWNDLEtBQWQsR0FBc0JQLElBQXRCO0FBQ0FQLGFBQUllLFNBQUosQ0FBYyxRQUFkLEVBQXVCQyxNQUF2Qjs7QUFFQSxJQUFNQyxHQUFHLEdBQUcsSUFBSWpCLFlBQUo7QUFDWE8sTUFBSSxFQUFKQSxJQURXO0FBRUxKLFlBRkssRUFBWixDOztBQUllO0FBQ1hlLFlBQVUsRUFBRTtBQUNSRixVQUFNLEVBQU5BLE1BRFEsRUFERCxFOzs7QUFLZixVQUFBQyxHQUFHLEVBQUNFLE1BQUosRyIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICd1bmktcGFnZXMnO1xyXG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcclxuaW1wb3J0IFZ1ZUkxOG4gZnJvbSAndnVlLWkxOG4nIFxyXG5pbXBvcnQgQXBwIGZyb20gJy4vQXBwJ1xyXG5pbXBvcnQgZmFJY29uIGZyb20gXCJAL2NvbXBvbmVudHMva2lsdm4tZmEtaWNvbi9mYS1pY29uLnZ1ZVwiXHJcbmltcG9ydCBCbW9iIGZyb20gJ0AvdXRpbHMvYm1vYi5qcyc7XHJcblxyXG5CbW9iLmluaXRpYWxpemUoXCJhZmFhODM0Mjc3NmFkOTlmZjBkNDliY2EyMjRkZTliMlwiLCBcIjllZWQ4NjVkYzU5MTRmMmVjZWRjZDYzYmUzMWUzM2U5XCIsXCI0N2Y3NmJhZjRlZTRkOTA2MzBkN2IyYmMxN2Y3NTA1Y1wiKTtcclxuVnVlLmNvbmZpZy5wcm9kdWN0aW9uVGlwID0gZmFsc2VcclxuQXBwLm1wVHlwZSA9ICdhcHAnXHJcblxyXG5WdWUudXNlKFZ1ZUkxOG4pXHJcbmNvbnN0IGkxOG4gPSBuZXcgVnVlSTE4bih7ICBcclxuICBsb2NhbGU6ICd6aC1DTicsICBcclxuICBtZXNzYWdlczogeyAgXHJcbiAgICAnZW4tVVMnOiB7ICBcclxuICAgICAgb3BlcmF0aW9uYWxfc3RhdHVzOiB7ICBcclxuICAgICAgICAxOiAnSW52aXRlJywgIFxyXG4gICAgICAgIDI6ICdHYW1lJyAgXHJcbiAgICAgIH0gIFxyXG4gICAgfSwgIFxyXG4gICAgJ3poLUNOJzogeyAgXHJcbiAgICAgIG9wZXJhdGlvbmFsX3N0YXR1czogeyAgXHJcbiAgICAgICAgYTogJ+W6k+WtmOaIkOacrO+8micsICBcclxuICAgICAgICBiOiAn5ri45oiPJyAgXHJcbiAgICAgIH0gIFxyXG4gICAgfSAgXHJcbiAgfSAgXHJcbn0pICBcclxuXHJcblZ1ZS5wcm90b3R5cGUuX2kxOG4gPSBpMThuICBcclxuVnVlLmNvbXBvbmVudCgnZmFJY29uJyxmYUljb24pXHJcblxyXG5jb25zdCBhcHAgPSBuZXcgVnVlKHtcclxuXHRpMThuLCBcclxuICAgIC4uLkFwcFxyXG59KVxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBjb21wb25lbnRzOiB7XHJcbiAgICAgICAgZmFJY29uXHJcbiAgICB9XHJcbn1cclxuYXBwLiRtb3VudCgpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),

/***/ 1:
/*!***********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-app-plus/dist/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}function _iterableToArrayLimit(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i[\"return\"] != null) _i[\"return\"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}\n\nvar _toString = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isFn(fn) {\n  return typeof fn === 'function';\n}\n\nfunction isStr(str) {\n  return typeof str === 'string';\n}\n\nfunction isPlainObject(obj) {\n  return _toString.call(obj) === '[object Object]';\n}\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\nfunction noop() {}\n\n/**\r\n                    * Create a cached version of a pure function.\r\n                    */\nfunction cached(fn) {\n  var cache = Object.create(null);\n  return function cachedFn(str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n\n/**\r\n   * Camelize a hyphen-delimited string.\r\n   */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});\n});\n\nvar HOOKS = [\n'invoke',\n'success',\n'fail',\n'complete',\n'returnValue'];\n\n\nvar globalInterceptors = {};\nvar scopedInterceptors = {};\n\nfunction mergeHook(parentVal, childVal) {\n  var res = childVal ?\n  parentVal ?\n  parentVal.concat(childVal) :\n  Array.isArray(childVal) ?\n  childVal : [childVal] :\n  parentVal;\n  return res ?\n  dedupeHooks(res) :\n  res;\n}\n\nfunction dedupeHooks(hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res;\n}\n\nfunction removeHook(hooks, hook) {\n  var index = hooks.indexOf(hook);\n  if (index !== -1) {\n    hooks.splice(index, 1);\n  }\n}\n\nfunction mergeInterceptorHook(interceptor, option) {\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction removeInterceptorHook(interceptor, option) {\n  if (!interceptor || !option) {\n    return;\n  }\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      removeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction addInterceptor(method, option) {\n  if (typeof method === 'string' && isPlainObject(option)) {\n    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);\n  } else if (isPlainObject(method)) {\n    mergeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction removeInterceptor(method, option) {\n  if (typeof method === 'string') {\n    if (isPlainObject(option)) {\n      removeInterceptorHook(scopedInterceptors[method], option);\n    } else {\n      delete scopedInterceptors[method];\n    }\n  } else if (isPlainObject(method)) {\n    removeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction wrapperHook(hook) {\n  return function (data) {\n    return hook(data) || data;\n  };\n}\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n\nfunction queue(hooks, data) {\n  var promise = false;\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n    if (promise) {\n      promise = Promise.then(wrapperHook(hook));\n    } else {\n      var res = hook(data);\n      if (isPromise(res)) {\n        promise = Promise.resolve(res);\n      }\n      if (res === false) {\n        return {\n          then: function then() {} };\n\n      }\n    }\n  }\n  return promise || {\n    then: function then(callback) {\n      return callback(data);\n    } };\n\n}\n\nfunction wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  ['success', 'fail', 'complete'].forEach(function (name) {\n    if (Array.isArray(interceptor[name])) {\n      var oldCallback = options[name];\n      options[name] = function callbackInterceptor(res) {\n        queue(interceptor[name], res).then(function (res) {\n          /* eslint-disable no-mixed-operators */\n          return isFn(oldCallback) && oldCallback(res) || res;\n        });\n      };\n    }\n  });\n  return options;\n}\n\nfunction wrapperReturnValue(method, returnValue) {\n  var returnValueHooks = [];\n  if (Array.isArray(globalInterceptors.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));\n  }\n  var interceptor = scopedInterceptors[method];\n  if (interceptor && Array.isArray(interceptor.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));\n  }\n  returnValueHooks.forEach(function (hook) {\n    returnValue = hook(returnValue) || returnValue;\n  });\n  return returnValue;\n}\n\nfunction getApiInterceptorHooks(method) {\n  var interceptor = Object.create(null);\n  Object.keys(globalInterceptors).forEach(function (hook) {\n    if (hook !== 'returnValue') {\n      interceptor[hook] = globalInterceptors[hook].slice();\n    }\n  });\n  var scopedInterceptor = scopedInterceptors[method];\n  if (scopedInterceptor) {\n    Object.keys(scopedInterceptor).forEach(function (hook) {\n      if (hook !== 'returnValue') {\n        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);\n      }\n    });\n  }\n  return interceptor;\n}\n\nfunction invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}\n  var interceptor = getApiInterceptorHooks(method);\n  if (interceptor && Object.keys(interceptor).length) {\n    if (Array.isArray(interceptor.invoke)) {\n      var res = queue(interceptor.invoke, options);\n      return res.then(function (options) {\n        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n      });\n    } else {\n      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n    }\n  }\n  return api.apply(void 0, [options].concat(params));\n}\n\nvar promiseInterceptor = {\n  returnValue: function returnValue(res) {\n    if (!isPromise(res)) {\n      return res;\n    }\n    return res.then(function (res) {\n      return res[1];\n    }).catch(function (res) {\n      return res[0];\n    });\n  } };\n\n\nvar SYNC_API_RE =\n/^\\$|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;\n\nvar CONTEXT_API_RE = /^create|Manager$/;\n\nvar CALLBACK_API_RE = /^on/;\n\nfunction isContextApi(name) {\n  return CONTEXT_API_RE.test(name);\n}\nfunction isSyncApi(name) {\n  return SYNC_API_RE.test(name);\n}\n\nfunction isCallbackApi(name) {\n  return CALLBACK_API_RE.test(name);\n}\n\nfunction handlePromise(promise) {\n  return promise.then(function (data) {\n    return [null, data];\n  }).\n  catch(function (err) {return [err];});\n}\n\nfunction shouldPromise(name) {\n  if (\n  isContextApi(name) ||\n  isSyncApi(name) ||\n  isCallbackApi(name))\n  {\n    return false;\n  }\n  return true;\n}\n\nfunction promisify(name, api) {\n  if (!shouldPromise(name)) {\n    return api;\n  }\n  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}\n    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {\n      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));\n    }\n    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {\n      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {\n        success: resolve,\n        fail: reject })].concat(\n      params));\n      /* eslint-disable no-extend-native */\n      if (!Promise.prototype.finally) {\n        Promise.prototype.finally = function (callback) {\n          var promise = this.constructor;\n          return this.then(\n          function (value) {return promise.resolve(callback()).then(function () {return value;});},\n          function (reason) {return promise.resolve(callback()).then(function () {\n              throw reason;\n            });});\n\n        };\n      }\n    })));\n  };\n}\n\nvar EPS = 1e-4;\nvar BASE_DEVICE_WIDTH = 750;\nvar isIOS = false;\nvar deviceWidth = 0;\nvar deviceDPR = 0;\n\nfunction checkDeviceWidth() {var _wx$getSystemInfoSync =\n\n\n\n\n  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni\n\n  deviceWidth = windowWidth;\n  deviceDPR = pixelRatio;\n  isIOS = platform === 'ios';\n}\n\nfunction upx2px(number, newDeviceWidth) {\n  if (deviceWidth === 0) {\n    checkDeviceWidth();\n  }\n\n  number = Number(number);\n  if (number === 0) {\n    return 0;\n  }\n  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);\n  if (result < 0) {\n    result = -result;\n  }\n  result = Math.floor(result + EPS);\n  if (result === 0) {\n    if (deviceDPR === 1 || !isIOS) {\n      return 1;\n    } else {\n      return 0.5;\n    }\n  }\n  return number < 0 ? -result : result;\n}\n\nvar interceptors = {\n  promiseInterceptor: promiseInterceptor };\n\n\n\n\nvar baseApi = /*#__PURE__*/Object.freeze({\n  upx2px: upx2px,\n  interceptors: interceptors,\n  addInterceptor: addInterceptor,\n  removeInterceptor: removeInterceptor });\n\n\nvar protocols = {};\nvar todos = [];\nvar canIUses = [];\n\nvar CALLBACKS = ['success', 'fail', 'cancel', 'complete'];\n\nfunction processCallback(methodName, method, returnValue) {\n  return function (res) {\n    return method(processReturnValue(methodName, res, returnValue));\n  };\n}\n\nfunction processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析\n    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值\n    if (isFn(argsOption)) {\n      argsOption = argsOption(fromArgs, toArgs) || {};\n    }\n    for (var key in fromArgs) {\n      if (hasOwn(argsOption, key)) {\n        var keyOption = argsOption[key];\n        if (isFn(keyOption)) {\n          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);\n        }\n        if (!keyOption) {// 不支持的参数\n          console.warn(\"app-plus \".concat(methodName, \"\\u6682\\u4E0D\\u652F\\u6301\").concat(key));\n        } else if (isStr(keyOption)) {// 重写参数 key\n          toArgs[keyOption] = fromArgs[key];\n        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value\n          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;\n        }\n      } else if (CALLBACKS.indexOf(key) !== -1) {\n        toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);\n      } else {\n        if (!keepFromArgs) {\n          toArgs[key] = fromArgs[key];\n        }\n      }\n    }\n    return toArgs;\n  } else if (isFn(fromArgs)) {\n    fromArgs = processCallback(methodName, fromArgs, returnValue);\n  }\n  return fromArgs;\n}\n\nfunction processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (isFn(protocols.returnValue)) {// 处理通用 returnValue\n    res = protocols.returnValue(methodName, res);\n  }\n  return processArgs(methodName, res, returnValue, {}, keepReturnValue);\n}\n\nfunction wrapper(methodName, method) {\n  if (hasOwn(protocols, methodName)) {\n    var protocol = protocols[methodName];\n    if (!protocol) {// 暂不支持的 api\n      return function () {\n        console.error(\"app-plus \\u6682\\u4E0D\\u652F\\u6301\".concat(methodName));\n      };\n    }\n    return function (arg1, arg2) {// 目前 api 最多两个参数\n      var options = protocol;\n      if (isFn(protocol)) {\n        options = protocol(arg1);\n      }\n\n      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);\n\n      var args = [arg1];\n      if (typeof arg2 !== 'undefined') {\n        args.push(arg2);\n      }\n      var returnValue = wx[options.name || methodName].apply(wx, args);\n      if (isSyncApi(methodName)) {// 同步 api\n        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));\n      }\n      return returnValue;\n    };\n  }\n  return method;\n}\n\nvar todoApis = Object.create(null);\n\nvar TODOS = [\n'subscribePush',\n'unsubscribePush',\n'onPush',\n'offPush',\n'share'];\n\n\nfunction createTodoApi(name) {\n  return function todoApi(_ref)\n\n\n  {var fail = _ref.fail,complete = _ref.complete;\n    var res = {\n      errMsg: \"\".concat(name, \":fail:\\u6682\\u4E0D\\u652F\\u6301 \").concat(name, \" \\u65B9\\u6CD5\") };\n\n    isFn(fail) && fail(res);\n    isFn(complete) && complete(res);\n  };\n}\n\nTODOS.forEach(function (name) {\n  todoApis[name] = createTodoApi(name);\n});\n\nvar getEmitter = function () {\n  if (typeof getUniEmitter === 'function') {\n    /* eslint-disable no-undef */\n    return getUniEmitter;\n  }\n  var Emitter;\n  return function getUniEmitter() {\n    if (!Emitter) {\n      Emitter = new _vue.default();\n    }\n    return Emitter;\n  };\n}();\n\nfunction apply(ctx, method, args) {\n  return ctx[method].apply(ctx, args);\n}\n\nfunction $on() {\n  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));\n}\nfunction $off() {\n  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));\n}\nfunction $once() {\n  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));\n}\nfunction $emit() {\n  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));\n}\n\nvar eventApi = /*#__PURE__*/Object.freeze({\n  $on: $on,\n  $off: $off,\n  $once: $once,\n  $emit: $emit });\n\n\nfunction wrapper$1(webview) {\n  webview.$processed = true;\n\n  webview.postMessage = function (data) {\n    plus.webview.postMessageToUniNView({\n      type: 'UniAppSubNVue',\n      data: data },\n    webview.id);\n  };\n  var callbacks = [];\n  webview.onMessage = function (callback) {\n    callbacks.push(callback);\n  };\n  webview.$consumeMessage = function (e) {\n    callbacks.forEach(function (callback) {return callback(e);});\n  };\n\n  if (!webview.__uniapp_mask_id) {\n    return;\n  }\n  var maskColor = webview.__uniapp_mask;\n  var maskWebview = plus.webview.getWebviewById(webview.__uniapp_mask_id);\n  maskWebview = maskWebview.parent() || maskWebview; // 再次检测父\n  var oldShow = webview.show;\n  var oldHide = webview.hide;\n  var oldClose = webview.close;\n\n  var showMask = function showMask() {\n    maskWebview.setStyle({\n      mask: maskColor });\n\n  };\n  var closeMask = function closeMask() {\n    maskWebview.setStyle({\n      mask: 'none' });\n\n  };\n  webview.show = function () {\n    showMask();for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {args[_key3] = arguments[_key3];}\n    return oldShow.apply(webview, args);\n  };\n  webview.hide = function () {\n    closeMask();for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}\n    return oldHide.apply(webview, args);\n  };\n  webview.close = function () {\n    closeMask();\n    callbacks = [];for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}\n    return oldClose.apply(webview, args);\n  };\n}\n\nfunction getSubNVueById(id) {\n  var webview = plus.webview.getWebviewById(id);\n  if (webview && !webview.$processed) {\n    wrapper$1(webview);\n  }\n  return webview;\n}\n\nfunction requireNativePlugin(pluginName) {\n  /* eslint-disable no-undef */\n  if (typeof weex !== 'undefined') {\n    return weex.requireModule(pluginName);\n  }\n  /* eslint-disable no-undef */\n  return __requireNativePlugin__(pluginName);\n}\n\nvar api = /*#__PURE__*/Object.freeze({\n  requireNativePlugin: requireNativePlugin,\n  getSubNVueById: getSubNVueById });\n\n\nvar MPPage = Page;\nvar MPComponent = Component;\n\nvar customizeRE = /:/g;\n\nvar customize = cached(function (str) {\n  return camelize(str.replace(customizeRE, '-'));\n});\n\nfunction initTriggerEvent(mpInstance) {\n  {\n    if (!wx.canIUse('nextTick')) {\n      return;\n    }\n  }\n  var oldTriggerEvent = mpInstance.triggerEvent;\n  mpInstance.triggerEvent = function (event) {for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {args[_key6 - 1] = arguments[_key6];}\n    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));\n  };\n}\n\nfunction initHook(name, options) {\n  var oldHook = options[name];\n  if (!oldHook) {\n    options[name] = function () {\n      initTriggerEvent(this);\n    };\n  } else {\n    options[name] = function () {\n      initTriggerEvent(this);for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {args[_key7] = arguments[_key7];}\n      return oldHook.apply(this, args);\n    };\n  }\n}\n\nPage = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('onLoad', options);\n  return MPPage(options);\n};\n\nComponent = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('created', options);\n  return MPComponent(options);\n};\n\nvar PAGE_EVENT_HOOKS = [\n'onPullDownRefresh',\n'onReachBottom',\n'onShareAppMessage',\n'onPageScroll',\n'onResize',\n'onTabItemTap'];\n\n\nfunction initMocks(vm, mocks) {\n  var mpInstance = vm.$mp[vm.mpType];\n  mocks.forEach(function (mock) {\n    if (hasOwn(mpInstance, mock)) {\n      vm[mock] = mpInstance[mock];\n    }\n  });\n}\n\nfunction hasHook(hook, vueOptions) {\n  if (!vueOptions) {\n    return true;\n  }\n\n  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {\n    return true;\n  }\n\n  vueOptions = vueOptions.default || vueOptions;\n\n  if (isFn(vueOptions)) {\n    if (isFn(vueOptions.extendOptions[hook])) {\n      return true;\n    }\n    if (vueOptions.super &&\n    vueOptions.super.options &&\n    Array.isArray(vueOptions.super.options[hook])) {\n      return true;\n    }\n    return false;\n  }\n\n  if (isFn(vueOptions[hook])) {\n    return true;\n  }\n  var mixins = vueOptions.mixins;\n  if (Array.isArray(mixins)) {\n    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});\n  }\n}\n\nfunction initHooks(mpOptions, hooks, vueOptions) {\n  hooks.forEach(function (hook) {\n    if (hasHook(hook, vueOptions)) {\n      mpOptions[hook] = function (args) {\n        return this.$vm && this.$vm.__call_hook(hook, args);\n      };\n    }\n  });\n}\n\nfunction initVueComponent(Vue, vueOptions) {\n  vueOptions = vueOptions.default || vueOptions;\n  var VueComponent;\n  if (isFn(vueOptions)) {\n    VueComponent = vueOptions;\n    vueOptions = VueComponent.extendOptions;\n  } else {\n    VueComponent = Vue.extend(vueOptions);\n  }\n  return [VueComponent, vueOptions];\n}\n\nfunction initSlots(vm, vueSlots) {\n  if (Array.isArray(vueSlots) && vueSlots.length) {\n    var $slots = Object.create(null);\n    vueSlots.forEach(function (slotName) {\n      $slots[slotName] = true;\n    });\n    vm.$scopedSlots = vm.$slots = $slots;\n  }\n}\n\nfunction initVueIds(vueIds, mpInstance) {\n  vueIds = (vueIds || '').split(',');\n  var len = vueIds.length;\n\n  if (len === 1) {\n    mpInstance._$vueId = vueIds[0];\n  } else if (len === 2) {\n    mpInstance._$vueId = vueIds[0];\n    mpInstance._$vuePid = vueIds[1];\n  }\n}\n\nfunction initData(vueOptions, context) {\n  var data = vueOptions.data || {};\n  var methods = vueOptions.methods || {};\n\n  if (typeof data === 'function') {\n    try {\n      data = data.call(context); // 支持 Vue.prototype 上挂的数据\n    } catch (e) {\n      if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\n        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);\n      }\n    }\n  } else {\n    try {\n      // 对 data 格式化\n      data = JSON.parse(JSON.stringify(data));\n    } catch (e) {}\n  }\n\n  if (!isPlainObject(data)) {\n    data = {};\n  }\n\n  Object.keys(methods).forEach(function (methodName) {\n    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {\n      data[methodName] = methods[methodName];\n    }\n  });\n\n  return data;\n}\n\nvar PROP_TYPES = [String, Number, Boolean, Object, Array, null];\n\nfunction createObserver(name) {\n  return function observer(newVal, oldVal) {\n    if (this.$vm) {\n      this.$vm[name] = newVal; // 为了触发其他非 render watcher\n    }\n  };\n}\n\nfunction initBehaviors(vueOptions, initBehavior) {\n  var vueBehaviors = vueOptions['behaviors'];\n  var vueExtends = vueOptions['extends'];\n  var vueMixins = vueOptions['mixins'];\n\n  var vueProps = vueOptions['props'];\n\n  if (!vueProps) {\n    vueOptions['props'] = vueProps = [];\n  }\n\n  var behaviors = [];\n  if (Array.isArray(vueBehaviors)) {\n    vueBehaviors.forEach(function (behavior) {\n      behaviors.push(behavior.replace('uni://', \"wx\".concat(\"://\")));\n      if (behavior === 'uni://form-field') {\n        if (Array.isArray(vueProps)) {\n          vueProps.push('name');\n          vueProps.push('value');\n        } else {\n          vueProps['name'] = {\n            type: String,\n            default: '' };\n\n          vueProps['value'] = {\n            type: [String, Number, Boolean, Array, Object, Date],\n            default: '' };\n\n        }\n      }\n    });\n  }\n  if (isPlainObject(vueExtends) && vueExtends.props) {\n    behaviors.push(\n    initBehavior({\n      properties: initProperties(vueExtends.props, true) }));\n\n\n  }\n  if (Array.isArray(vueMixins)) {\n    vueMixins.forEach(function (vueMixin) {\n      if (isPlainObject(vueMixin) && vueMixin.props) {\n        behaviors.push(\n        initBehavior({\n          properties: initProperties(vueMixin.props, true) }));\n\n\n      }\n    });\n  }\n  return behaviors;\n}\n\nfunction parsePropType(key, type, defaultValue, file) {\n  // [String]=>String\n  if (Array.isArray(type) && type.length === 1) {\n    return type[0];\n  }\n  return type;\n}\n\nfunction initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var properties = {};\n  if (!isBehavior) {\n    properties.vueId = {\n      type: String,\n      value: '' };\n\n    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots\n      type: null,\n      value: [],\n      observer: function observer(newVal, oldVal) {\n        var $slots = Object.create(null);\n        newVal.forEach(function (slotName) {\n          $slots[slotName] = true;\n        });\n        this.setData({\n          $slots: $slots });\n\n      } };\n\n  }\n  if (Array.isArray(props)) {// ['title']\n    props.forEach(function (key) {\n      properties[key] = {\n        type: null,\n        observer: createObserver(key) };\n\n    });\n  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}\n    Object.keys(props).forEach(function (key) {\n      var opts = props[key];\n      if (isPlainObject(opts)) {// title:{type:String,default:''}\n        var value = opts['default'];\n        if (isFn(value)) {\n          value = value();\n        }\n\n        opts.type = parsePropType(key, opts.type);\n\n        properties[key] = {\n          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,\n          value: value,\n          observer: createObserver(key) };\n\n      } else {// content:String\n        var type = parsePropType(key, opts);\n        properties[key] = {\n          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,\n          observer: createObserver(key) };\n\n      }\n    });\n  }\n  return properties;\n}\n\nfunction wrapper$2(event) {\n  // TODO 又得兼容 mpvue 的 mp 对象\n  try {\n    event.mp = JSON.parse(JSON.stringify(event));\n  } catch (e) {}\n\n  event.stopPropagation = noop;\n  event.preventDefault = noop;\n\n  event.target = event.target || {};\n\n  if (!hasOwn(event, 'detail')) {\n    event.detail = {};\n  }\n\n  if (isPlainObject(event.detail)) {\n    event.target = Object.assign({}, event.target, event.detail);\n  }\n\n  return event;\n}\n\nfunction getExtraValue(vm, dataPathsArray) {\n  var context = vm;\n  dataPathsArray.forEach(function (dataPathArray) {\n    var dataPath = dataPathArray[0];\n    var value = dataPathArray[2];\n    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']\n      var propPath = dataPathArray[1];\n      var valuePath = dataPathArray[3];\n\n      var vFor = dataPath ? vm.__get_value(dataPath, context) : context;\n\n      if (Number.isInteger(vFor)) {\n        context = value;\n      } else if (!propPath) {\n        context = vFor[value];\n      } else {\n        if (Array.isArray(vFor)) {\n          context = vFor.find(function (vForItem) {\n            return vm.__get_value(propPath, vForItem) === value;\n          });\n        } else if (isPlainObject(vFor)) {\n          context = Object.keys(vFor).find(function (vForKey) {\n            return vm.__get_value(propPath, vFor[vForKey]) === value;\n          });\n        } else {\n          console.error('v-for 暂不支持循环数据：', vFor);\n        }\n      }\n\n      if (valuePath) {\n        context = vm.__get_value(valuePath, context);\n      }\n    }\n  });\n  return context;\n}\n\nfunction processEventExtra(vm, extra, event) {\n  var extraObj = {};\n\n  if (Array.isArray(extra) && extra.length) {\n    /**\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *'test'\r\n                                              */\n    extra.forEach(function (dataPath, index) {\n      if (typeof dataPath === 'string') {\n        if (!dataPath) {// model,prop.sync\n          extraObj['$' + index] = vm;\n        } else {\n          if (dataPath === '$event') {// $event\n            extraObj['$' + index] = event;\n          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value\n            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);\n          } else {\n            extraObj['$' + index] = vm.__get_value(dataPath);\n          }\n        }\n      } else {\n        extraObj['$' + index] = getExtraValue(vm, dataPath);\n      }\n    });\n  }\n\n  return extraObj;\n}\n\nfunction getObjByArray(arr) {\n  var obj = {};\n  for (var i = 1; i < arr.length; i++) {\n    var element = arr[i];\n    obj[element[0]] = element[1];\n  }\n  return obj;\n}\n\nfunction processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;\n  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象\n  if (isCustom) {// 自定义事件\n    isCustomMPEvent = event.currentTarget &&\n    event.currentTarget.dataset &&\n    event.currentTarget.dataset.comType === 'wx';\n    if (!args.length) {// 无参数，直接传入 event 或 detail 数组\n      if (isCustomMPEvent) {\n        return [event];\n      }\n      return event.detail.__args__ || event.detail;\n    }\n  }\n\n  var extraObj = processEventExtra(vm, extra, event);\n\n  var ret = [];\n  args.forEach(function (arg) {\n    if (arg === '$event') {\n      if (methodName === '__set_model' && !isCustom) {// input v-model value\n        ret.push(event.target.value);\n      } else {\n        if (isCustom && !isCustomMPEvent) {\n          ret.push(event.detail.__args__[0]);\n        } else {// wxcomponent 组件或内置组件\n          ret.push(event);\n        }\n      }\n    } else {\n      if (Array.isArray(arg) && arg[0] === 'o') {\n        ret.push(getObjByArray(arg));\n      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {\n        ret.push(extraObj[arg]);\n      } else {\n        ret.push(arg);\n      }\n    }\n  });\n\n  return ret;\n}\n\nvar ONCE = '~';\nvar CUSTOM = '^';\n\nfunction isMatchEventType(eventType, optType) {\n  return eventType === optType ||\n\n  optType === 'regionchange' && (\n\n  eventType === 'begin' ||\n  eventType === 'end');\n\n\n}\n\nfunction handleEvent(event) {var _this = this;\n  event = wrapper$2(event);\n\n  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]\n  var dataset = (event.currentTarget || event.target).dataset;\n  if (!dataset) {\n    return console.warn(\"\\u4E8B\\u4EF6\\u4FE1\\u606F\\u4E0D\\u5B58\\u5728\");\n  }\n  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰\n  if (!eventOpts) {\n    return console.warn(\"\\u4E8B\\u4EF6\\u4FE1\\u606F\\u4E0D\\u5B58\\u5728\");\n  }\n\n  // [['handle',[1,2,a]],['handle1',[1,2,a]]]\n  var eventType = event.type;\n\n  var ret = [];\n\n  eventOpts.forEach(function (eventOpt) {\n    var type = eventOpt[0];\n    var eventsArray = eventOpt[1];\n\n    var isCustom = type.charAt(0) === CUSTOM;\n    type = isCustom ? type.slice(1) : type;\n    var isOnce = type.charAt(0) === ONCE;\n    type = isOnce ? type.slice(1) : type;\n\n    if (eventsArray && isMatchEventType(eventType, type)) {\n      eventsArray.forEach(function (eventArray) {\n        var methodName = eventArray[0];\n        if (methodName) {\n          var handlerCtx = _this.$vm;\n          if (\n          handlerCtx.$options.generic &&\n          handlerCtx.$parent &&\n          handlerCtx.$parent.$parent)\n          {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots\n            handlerCtx = handlerCtx.$parent.$parent;\n          }\n          var handler = handlerCtx[methodName];\n          if (!isFn(handler)) {\n            throw new Error(\" _vm.\".concat(methodName, \" is not a function\"));\n          }\n          if (isOnce) {\n            if (handler.once) {\n              return;\n            }\n            handler.once = true;\n          }\n          ret.push(handler.apply(handlerCtx, processEventArgs(\n          _this.$vm,\n          event,\n          eventArray[1],\n          eventArray[2],\n          isCustom,\n          methodName)));\n\n        }\n      });\n    }\n  });\n\n  if (\n  eventType === 'input' &&\n  ret.length === 1 &&\n  typeof ret[0] !== 'undefined')\n  {\n    return ret[0];\n  }\n}\n\nvar hooks = [\n'onShow',\n'onHide',\n'onError',\n'onPageNotFound'];\n\n\nfunction parseBaseApp(vm, _ref2)\n\n\n{var mocks = _ref2.mocks,initRefs = _ref2.initRefs;\n  _vue.default.prototype.mpHost = \"app-plus\";\n\n  _vue.default.mixin({\n    beforeCreate: function beforeCreate() {\n      if (!this.$options.mpType) {\n        return;\n      }\n\n      this.mpType = this.$options.mpType;\n\n      this.$mp = _defineProperty({\n        data: {} },\n      this.mpType, this.$options.mpInstance);\n\n\n      this.$scope = this.$options.mpInstance;\n\n      delete this.$options.mpType;\n      delete this.$options.mpInstance;\n\n      if (this.mpType !== 'app') {\n        initRefs(this);\n        initMocks(this, mocks);\n      }\n    } });\n\n\n  var appOptions = {\n    onLaunch: function onLaunch(args) {\n      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前\n        return;\n      }\n\n      this.$vm = vm;\n\n      this.$vm.$mp = {\n        app: this };\n\n\n      this.$vm.$scope = this;\n\n      this.$vm._isMounted = true;\n      this.$vm.__call_hook('mounted', args);\n\n      this.$vm.__call_hook('onLaunch', args);\n    } };\n\n\n  // 兼容旧版本 globalData\n  appOptions.globalData = vm.$options.globalData || {};\n\n  initHooks(appOptions, hooks);\n\n  return appOptions;\n}\n\nvar mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];\n\nfunction findVmByVueId(vm, vuePid) {\n  var $children = vm.$children;\n  // 优先查找直属\n  var parentVm = $children.find(function (childVm) {return childVm.$scope._$vueId === vuePid;});\n  if (parentVm) {\n    return parentVm;\n  }\n  // 反向递归查找\n  for (var i = $children.length - 1; i >= 0; i--) {\n    parentVm = findVmByVueId($children[i], vuePid);\n    if (parentVm) {\n      return parentVm;\n    }\n  }\n}\n\nfunction initBehavior(options) {\n  return Behavior(options);\n}\n\nfunction isPage() {\n  return !!this.route;\n}\n\nfunction initRelation(detail) {\n  this.triggerEvent('__l', detail);\n}\n\nfunction initRefs(vm) {\n  var mpInstance = vm.$scope;\n  Object.defineProperty(vm, '$refs', {\n    get: function get() {\n      var $refs = {};\n      var components = mpInstance.selectAllComponents('.vue-ref');\n      components.forEach(function (component) {\n        var ref = component.dataset.ref;\n        $refs[ref] = component.$vm || component;\n      });\n      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');\n      forComponents.forEach(function (component) {\n        var ref = component.dataset.ref;\n        if (!$refs[ref]) {\n          $refs[ref] = [];\n        }\n        $refs[ref].push(component.$vm || component);\n      });\n      return $refs;\n    } });\n\n}\n\nfunction handleLink(event) {var _ref3 =\n\n\n\n  event.detail || event.value,vuePid = _ref3.vuePid,vueOptions = _ref3.vueOptions; // detail 是微信,value 是百度(dipatch)\n\n  var parentVm;\n\n  if (vuePid) {\n    parentVm = findVmByVueId(this.$vm, vuePid);\n  }\n\n  if (!parentVm) {\n    parentVm = this.$vm;\n  }\n\n  vueOptions.parent = parentVm;\n}\n\nfunction parseApp(vm) {\n  return parseBaseApp(vm, {\n    mocks: mocks,\n    initRefs: initRefs });\n\n}\n\nvar hooks$1 = [\n'onUniNViewMessage'];\n\n\nfunction parseApp$1(vm) {\n  var appOptions = parseApp(vm);\n\n  initHooks(appOptions, hooks$1);\n\n  return appOptions;\n}\n\nfunction createApp(vm) {\n  App(parseApp$1(vm));\n  return vm;\n}\n\nfunction parseBaseComponent(vueComponentOptions)\n\n\n{var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref4.isPage,initRelation = _ref4.initRelation;var _initVueComponent =\n  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];\n\n  var componentOptions = {\n    options: {\n      multipleSlots: true,\n      addGlobalClass: true },\n\n    data: initData(vueOptions, _vue.default.prototype),\n    behaviors: initBehaviors(vueOptions, initBehavior),\n    properties: initProperties(vueOptions.props, false, vueOptions.__file),\n    lifetimes: {\n      attached: function attached() {\n        var properties = this.properties;\n\n        var options = {\n          mpType: isPage.call(this) ? 'page' : 'component',\n          mpInstance: this,\n          propsData: properties };\n\n\n        initVueIds(properties.vueId, this);\n\n        // 处理父子关系\n        initRelation.call(this, {\n          vuePid: this._$vuePid,\n          vueOptions: options });\n\n\n        // 初始化 vue 实例\n        this.$vm = new VueComponent(options);\n\n        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）\n        initSlots(this.$vm, properties.vueSlots);\n\n        // 触发首次 setData\n        this.$vm.$mount();\n      },\n      ready: function ready() {\n        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发\n        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800\n        if (this.$vm) {\n          this.$vm._isMounted = true;\n          this.$vm.__call_hook('mounted');\n          this.$vm.__call_hook('onReady');\n        }\n      },\n      detached: function detached() {\n        this.$vm.$destroy();\n      } },\n\n    pageLifetimes: {\n      show: function show(args) {\n        this.$vm && this.$vm.__call_hook('onPageShow', args);\n      },\n      hide: function hide() {\n        this.$vm && this.$vm.__call_hook('onPageHide');\n      },\n      resize: function resize(size) {\n        this.$vm && this.$vm.__call_hook('onPageResize', size);\n      } },\n\n    methods: {\n      __l: handleLink,\n      __e: handleEvent } };\n\n\n\n  if (isPage) {\n    return componentOptions;\n  }\n  return [componentOptions, VueComponent];\n}\n\nfunction parseComponent(vueComponentOptions) {\n  return parseBaseComponent(vueComponentOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nfunction parseComponent$1(vueComponentOptions) {\n  var componentOptions = parseComponent(vueComponentOptions);\n\n  componentOptions.methods.$getAppWebview = function () {\n    return plus.webview.getWebviewById(\"\".concat(this.__wxWebviewId__));\n  };\n  return componentOptions;\n}\n\nvar hooks$2 = [\n'onShow',\n'onHide',\n'onUnload'];\n\n\nhooks$2.push.apply(hooks$2, PAGE_EVENT_HOOKS);\n\nfunction parseBasePage(vuePageOptions, _ref5)\n\n\n{var isPage = _ref5.isPage,initRelation = _ref5.initRelation;\n  var pageOptions = parseComponent$1(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$2, vuePageOptions);\n\n  pageOptions.methods.onLoad = function (args) {\n    this.$vm.$mp.query = args; // 兼容 mpvue\n    this.$vm.__call_hook('onLoad', args);\n  };\n\n  return pageOptions;\n}\n\nfunction parsePage(vuePageOptions) {\n  return parseBasePage(vuePageOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nvar hooks$3 = [\n'onBackPress',\n'onNavigationBarButtonTap',\n'onNavigationBarSearchInputChanged',\n'onNavigationBarSearchInputConfirmed',\n'onNavigationBarSearchInputClicked'];\n\n\nfunction parsePage$1(vuePageOptions) {\n  var pageOptions = parsePage(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$3);\n\n  return pageOptions;\n}\n\nfunction createPage(vuePageOptions) {\n  {\n    return Component(parsePage$1(vuePageOptions));\n  }\n}\n\nfunction createComponent(vueOptions) {\n  {\n    return Component(parseComponent$1(vueOptions));\n  }\n}\n\ntodos.forEach(function (todoApi) {\n  protocols[todoApi] = false;\n});\n\ncanIUses.forEach(function (canIUseApi) {\n  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :\n  canIUseApi;\n  if (!wx.canIUse(apiName)) {\n    protocols[canIUseApi] = false;\n  }\n});\n\nvar uni = {};\n\nif (typeof Proxy !== 'undefined' && \"app-plus\" !== 'app-plus') {\n  uni = new Proxy({}, {\n    get: function get(target, name) {\n      if (baseApi[name]) {\n        return baseApi[name];\n      }\n      if (api[name]) {\n        return promisify(name, api[name]);\n      }\n      if (eventApi[name]) {\n        return eventApi[name];\n      }\n      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {\n        return;\n      }\n      return promisify(name, wrapper(name, wx[name]));\n    } });\n\n} else {\n  Object.keys(baseApi).forEach(function (name) {\n    uni[name] = baseApi[name];\n  });\n\n  Object.keys(eventApi).forEach(function (name) {\n    uni[name] = eventApi[name];\n  });\n\n  Object.keys(api).forEach(function (name) {\n    uni[name] = promisify(name, api[name]);\n  });\n\n  Object.keys(wx).forEach(function (name) {\n    if (hasOwn(wx, name) || hasOwn(protocols, name)) {\n      uni[name] = promisify(name, wrapper(name, wx[name]));\n    }\n  });\n}\n\n{\n  if (typeof global !== 'undefined') {\n    global.uni = uni;\n    global.UniEmitter = eventApi;\n  }\n}\n\nwx.createApp = createApp;\nwx.createPage = createPage;\nwx.createComponent = createComponent;\n\nvar uni$1 = uni;var _default =\n\nuni$1;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),

/***/ 10:
/*!*********************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/utils/bmob.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}function _iterableToArrayLimit(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i[\"return\"] != null) _i[\"return\"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === \"object\" || typeof call === \"function\")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}!function (e, t) { true ? module.exports = t() : undefined;}(\"undefined\" != typeof self ? self : void 0, function () {\n  return function (e) {var t = {};function n(r) {if (t[r]) return t[r].exports;var o = t[r] = { i: r, l: !1, exports: {} };return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;}return n.m = e, n.c = t, n.d = function (e, t, r) {n.o(e, t) || Object.defineProperty(e, t, { configurable: !1, enumerable: !0, get: r });}, n.n = function (e) {var t = e && e.__esModule ? function () {return e.default;} : function () {return e;};return n.d(t, \"a\", t), t;}, n.o = function (e, t) {return Object.prototype.hasOwnProperty.call(e, t);}, n.p = \"\", n(n.s = 17);}([function (e, t, n) {(function (t) {var r = n(5),o = t.Bmob || {};o.utils = r, o._config = r.getConfig(), o.initialize = function (e, t, n) {o._config.applicationId = e, o._config.applicationKey = t, o._config.applicationMasterKey = n;}, e.exports = o;}).call(t, n(6));}, function (e, t, n) {\"use strict\";var r = n(11),o = n(25),s = Object.prototype.toString;function i(e) {return \"[object Array]\" === s.call(e);}function a(e) {return null !== e && \"object\" == typeof e;}function c(e) {return \"[object Function]\" === s.call(e);}function u(e, t) {if (null !== e && void 0 !== e) if (\"object\" != typeof e && (e = [e]), i(e)) for (var n = 0, r = e.length; n < r; n++) {t.call(null, e[n], n, e);} else for (var o in e) {Object.prototype.hasOwnProperty.call(e, o) && t.call(null, e[o], o, e);}}e.exports = { isArray: i, isArrayBuffer: function isArrayBuffer(e) {return \"[object ArrayBuffer]\" === s.call(e);}, isBuffer: o, isFormData: function isFormData(e) {return \"undefined\" != typeof FormData && e instanceof FormData;}, isArrayBufferView: function isArrayBufferView(e) {return \"undefined\" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && e.buffer instanceof ArrayBuffer;}, isString: function isString(e) {return \"string\" == typeof e;}, isNumber: function isNumber(e) {return \"number\" == typeof e;}, isObject: a, isUndefined: function isUndefined(e) {return void 0 === e;}, isDate: function isDate(e) {return \"[object Date]\" === s.call(e);}, isFile: function isFile(e) {return \"[object File]\" === s.call(e);}, isBlob: function isBlob(e) {return \"[object Blob]\" === s.call(e);}, isFunction: c, isStream: function isStream(e) {return a(e) && c(e.pipe);}, isURLSearchParams: function isURLSearchParams(e) {return \"undefined\" != typeof URLSearchParams && e instanceof URLSearchParams;}, isStandardBrowserEnv: function isStandardBrowserEnv() {return (\"undefined\" == typeof navigator || \"ReactNative\" !== navigator.product) && \"undefined\" != typeof window && \"undefined\" != typeof document;}, forEach: u, merge: function e() {var t = {};function n(n, r) {\"object\" == typeof t[r] && \"object\" == typeof n ? t[r] = e(t[r], n) : t[r] = n;}for (var r = 0, o = arguments.length; r < o; r++) {u(arguments[r], n);}return t;}, extend: function extend(e, t, n) {return u(t, function (t, o) {e[o] = n && \"function\" == typeof t ? r(t, n) : t;}), e;}, trim: function trim(e) {return e.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");} };}, function (e, t) {e.exports = { isObject: function isObject(e) {return \"[object Object]\" === Object.prototype.toString.call(e);}, isNumber: function isNumber(e) {return \"[object Number]\" === Object.prototype.toString.call(e);}, isString: function isString(e) {return \"[object String]\" === Object.prototype.toString.call(e);}, isUndefined: function isUndefined(e) {return \"[object Undefined]\" === Object.prototype.toString.call(e);}, isBoolean: function isBoolean(e) {return \"[object Boolean]\" === Object.prototype.toString.call(e);}, isArray: function isArray(e) {return \"[object Array]\" === Object.prototype.toString.call(e);}, isFunction: function isFunction(e) {return \"[object Function]\" === Object.prototype.toString.call(e);} };}, function (e, t) {e.exports = /*#__PURE__*/function () {function _class(e, t) {_classCallCheck(this, _class);var n = new Error();return n.code = e, n.message = t ? \"Bmob.Error:{code:\".concat(e, \", message:\").concat(t, \"}\") : \"Bmob.Error:{code:\".concat(e, \", message:\").concat(this.errorMsg(e), \"}\"), n;}_createClass(_class, [{ key: \"errorMsg\", value: function errorMsg(e) {switch (e) {case 415:return \"incorrect parameter type.\";case 416:return \"Parameter is null.\";case 417:return \"There is no upload content.\";case 418:return \"Log in failure.\";case 419:return \"Bmob.GeoPoint location error.\";default:return \"unknown error\";}} }]);return _class;}();}, function (e, t, n) {var r;var o = n(5).getAppType();\"h5\" === o ? r = n(10) : \"wx\" === o ? r = n(42) : \"hap\" === o ? r = n(43) : \"nodejs\" === o && (r = n(10)), e.exports = r;}, function (e, t, n) {(function (t, r) {var o;try {o = n(18);} catch (e) {o = n(20);}var s = function s() {return o;};e.exports = { getConfig: s, getAppType: function getAppType() {var e = s();var n;return n = \"undefined\" != typeof wx ? \"wx\" : \"undefined\" != typeof window ? \"h5\" : 3 === e.type ? \"hap\" : t === r.process ? \"nodejs\" : \"h5\";} };}).call(t, n(7), n(6));}, function (e, t) {var n;n = function () {return this;}();try {n = n || Function(\"return this\")() || (0, eval)(\"this\");} catch (e) {\"object\" == typeof window && (n = window);}e.exports = n;}, function (e, t) {var n,r,o = e.exports = {};function s() {throw new Error(\"setTimeout has not been defined\");}function i() {throw new Error(\"clearTimeout has not been defined\");}function a(e) {if (n === setTimeout) return setTimeout(e, 0);if ((n === s || !n) && setTimeout) return n = setTimeout, setTimeout(e, 0);try {return n(e, 0);} catch (t) {try {return n.call(null, e, 0);} catch (t) {return n.call(this, e, 0);}}}!function () {try {n = \"function\" == typeof setTimeout ? setTimeout : s;} catch (e) {n = s;}try {r = \"function\" == typeof clearTimeout ? clearTimeout : i;} catch (e) {r = i;}}();var c,u = [],l = !1,p = -1;function f() {l && c && (l = !1, c.length ? u = c.concat(u) : p = -1, u.length && h());}function h() {if (!l) {var e = a(f);l = !0;for (var t = u.length; t;) {for (c = u, u = []; ++p < t;) {c && c[p].run();}p = -1, t = u.length;}c = null, l = !1, function (e) {if (r === clearTimeout) return clearTimeout(e);if ((r === i || !r) && clearTimeout) return r = clearTimeout, clearTimeout(e);try {r(e);} catch (t) {try {return r.call(null, e);} catch (t) {return r.call(this, e);}}}(e);}}function d(e, t) {this.fun = e, this.array = t;}function m() {}o.nextTick = function (e) {var t = new Array(arguments.length - 1);if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) {t[n - 1] = arguments[n];}u.push(new d(e, t)), 1 !== u.length || l || a(h);}, d.prototype.run = function () {this.fun.apply(null, this.array);}, o.title = \"browser\", o.browser = !0, o.env = {}, o.argv = [], o.version = \"\", o.versions = {}, o.on = m, o.addListener = m, o.once = m, o.off = m, o.removeListener = m, o.removeAllListeners = m, o.emit = m, o.prependListener = m, o.prependOnceListener = m, o.listeners = function (e) {return [];}, o.binding = function (e) {throw new Error(\"process.binding is not supported\");}, o.cwd = function () {return \"/\";}, o.chdir = function (e) {throw new Error(\"process.chdir is not supported\");}, o.umask = function () {return 0;};}, function (e, t, n) {\"use strict\";(function (t) {var r = n(1),o = n(27),s = { \"Content-Type\": \"application/x-www-form-urlencoded\" };function i(e, t) {!r.isUndefined(e) && r.isUndefined(e[\"Content-Type\"]) && (e[\"Content-Type\"] = t);}var a = { adapter: function () {var e;return \"undefined\" != typeof XMLHttpRequest ? e = n(12) : void 0 !== t && (e = n(12)), e;}(), transformRequest: [function (e, t) {return o(t, \"Content-Type\"), r.isFormData(e) || r.isArrayBuffer(e) || r.isBuffer(e) || r.isStream(e) || r.isFile(e) || r.isBlob(e) ? e : r.isArrayBufferView(e) ? e.buffer : r.isURLSearchParams(e) ? (i(t, \"application/x-www-form-urlencoded;charset=utf-8\"), e.toString()) : r.isObject(e) ? (i(t, \"application/json;charset=utf-8\"), JSON.stringify(e)) : e;}], transformResponse: [function (e) {if (\"string\" == typeof e) try {e = JSON.parse(e);} catch (e) {}return e;}], timeout: 0, xsrfCookieName: \"XSRF-TOKEN\", xsrfHeaderName: \"X-XSRF-TOKEN\", maxContentLength: -1, validateStatus: function validateStatus(e) {return e >= 200 && e < 300;}, headers: { common: { Accept: \"application/json, text/plain, */*\" } } };r.forEach([\"delete\", \"get\", \"head\"], function (e) {a.headers[e] = {};}), r.forEach([\"post\", \"put\", \"patch\"], function (e) {a.headers[e] = r.merge(s);}), e.exports = a;}).call(t, n(7));}, function (e, t, n) {var r = n(0);var o = n(4),_n = n(2),s = _n.isObject,i = _n.isString,a = _n.isNumber,c = _n.isUndefined,u = _n.isArray,l = n(3),p = n(16);function f(e, t, n) {var r = {},o = {};o[t] = n, r[e] = o;var s = r;return Object.keys(this.queryData).length ? c(this.queryData.$and) ? this.queryData = { $and: [this.queryData, s] } : this.queryData.$and.push(s) : this.queryData = s, s;}e.exports = /*#__PURE__*/function () {function _class2(e) {_classCallCheck(this, _class2);this.tableName = \"\".concat(r._config.parameters.QUERY, \"/\").concat(e), this.className = e, this.init(), this.addArray = {}, this.setData = {};}_createClass(_class2, [{ key: \"init\", value: function init() {this.queryData = {}, this.location = {}, this.andData = {}, this.orData = {}, this.stat = {}, this.limitNum = 100, this.skipNum = 0, this.includes = \"\", this.queryReilation = {}, this.orders = null, this.keys = null;} }, { key: \"get\", value: function get(e) {var _this = this;if (!i(e)) throw new l(415);var t = {};var n = {},r = {},s = {},f = function f(e, t) {if (!i(e) || !u(t)) throw new l(415);s[e] = { __op: \"Add\", objects: t };},h = function h(e, t) {if (!i(e) || !u(t)) throw new l(415);s[e] = { __op: \"AddUnique\", objects: t };},d = function d(e, t) {if (!i(e) || !u(t)) throw new l(415);s[e] = { __op: \"Remove\", objects: t };},m = function m(e) {var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;if (!i(e) || !a(t)) throw new l(415);n[e] = { __op: \"Increment\", amount: t };},w = function w(t) {if (!i(e)) throw new l(415);r[t] = { __op: \"Delete\" };},g = function g(e, n) {if (!i(e) || c(n)) throw new l(415);var r = n.filename,o = n.cdn,s = n.url;c(r) || c(o) || c(s) ? t[e] = n : t[e] = { __type: \"File\", group: o, filename: r, url: s };},y = function y() {var i = Object.assign(r, t, n, s);return \"_User\" === _this.className ? new Promise(function (t, n) {o(\"\".concat(_this.tableName, \"/\").concat(e), \"put\", i).then(function (e) {var n = _this.current();var r = Object.assign(n, i);p.save(\"bmob\", r), t(e);}).catch(function (e) {n(e);});}) : o(\"\".concat(_this.tableName, \"/\").concat(e), \"put\", i);},b = {};return \"\" !== this.includes && (b.include = this.includes), new Promise(function (t, n) {o(\"\".concat(_this.tableName, \"/\").concat(e), \"get\", b).then(function (n) {Object.defineProperty(n, \"set\", { value: g }), Object.defineProperty(n, \"unset\", { value: w }), Object.defineProperty(n, \"save\", { value: y }), Object.defineProperty(n, \"increment\", { value: m }), Object.defineProperty(n, \"add\", { value: f }), Object.defineProperty(n, \"remove\", { value: d }), Object.defineProperty(n, \"addUnique\", { value: h }), Object.defineProperty(n, \"destroy\", { value: function value() {return _this.destroy(e);} }), t(n);}).catch(function (e) {n(e);});});} }, { key: \"destroy\", value: function destroy(e) {if (!i(e)) throw new l(415);return o(\"\".concat(this.tableName, \"/\").concat(e), \"delete\");} }, { key: \"set\", value: function set(e, t) {if (!i(e) || c(t)) throw new l(415);var n = t.filename,r = t.cdn,o = t.url;c(n) || c(r) || c(o) ? this.setData[e] = t : this.setData[e] = { __type: \"File\", group: r, filename: n, url: o };} }, { key: \"add\", value: function add(e, t) {if (!i(e) || !u(t)) throw new l(415);this.addArray[e] = { __op: \"Add\", objects: t };} }, { key: \"addUnique\", value: function addUnique(e, t) {if (!i(e) || !u(t)) throw new l(415);this.addArray[e] = { __op: \"AddUnique\", objects: t };} }, { key: \"current\", value: function current() {if (\"hap\" !== r.type) {var _e = p.fetch(\"bmob\");return \"object\" == typeof _e ? _e : JSON.parse(_e);}return new Promise(function (e, t) {return p.fetch(\"bmob\").then(function (t) {e(t);}).catch(function (e) {t(e);});});} }, { key: \"updateStorage\", value: function updateStorage(e) {var _this2 = this;if (!i(e)) throw new l(415);return new Promise(function (t, n) {var r = _this2.current();if (!r) throw new l(415);_this2.get(e).then(function (e) {var n = Object.assign(r, e);p.save(\"bmob\", n), t(e);}).catch(function (e) {console.log(__f__(e, \" at utils\\\\bmob.js:2\")), n(e);});});} }, { key: \"save\", value: function save() {var _this3 = this;var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};if (!s(e)) throw new l(415);var t = this.setData.id ? \"PUT\" : \"POST\",n = this.setData.id ? this.setData.id : \"\";delete this.setData.id;var r = Object.assign(e, this.setData, this.addArray);return new Promise(function (e, s) {o(\"\".concat(_this3.tableName, \"/\").concat(n), t, r).then(function (t) {if (_this3.addArray = {}, _this3.setData = {}, \"_User\" === _this3.className) {var _e2 = _this3.current();var _t = Object.assign(_e2, r);p.save(\"bmob\", _t);}e(t);}).catch(function (e) {s(e);});});} }, { key: \"saveAll\", value: function saveAll(e) {var _this4 = this;if (!u(e)) throw new l(415);if (e.length < 1) throw new l(416);var t,n,s = \"put\",i = [];e.map(function (e) {return \"/undefined\" === (t = \"/\".concat(e.objectId)) && (t = \"\", s = \"post\"), n = { method: s, path: \"\".concat(_this4.tableName).concat(t), body: e.setData }, i.push(n), e;});var a = { requests: i },c = r._config.parameters.BATCH;return o(c, \"POST\", a);} }, { key: \"withinKilometers\", value: function withinKilometers(e, _ref) {var t = _ref.latitude,n = _ref.longitude;var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;var o = {};return o[e] = { $nearSphere: { __type: \"GeoPoint\", latitude: t, longitude: n }, $maxDistanceInKilometers: r }, this.location = o, o;} }, { key: \"withinGeoBox\", value: function withinGeoBox(e, _ref2, r) {var t = _ref2.latitude,n = _ref2.longitude;var o = {};return o[e] = { $within: { $box: [{ __type: \"GeoPoint\", latitude: t, longitude: n }, { __type: \"GeoPoint\", latitude: r.latitude, longitude: r.longitude }] } }, this.location = o, o;} }, { key: \"statTo\", value: function statTo(e, t) {if (!i(e)) throw new l(415);return this.stat[e] = t, this.stat;} }, { key: \"equalTo\", value: function equalTo(e, t, n) {if (!i(e)) throw new l(415);var r = function (e, t, n) {var r = {},o = null;switch (o = \"createdAt\" === e || \"updateAt\" === e ? { __type: \"Date\", iso: n } : n, t) {case \"==\":case \"===\":r[e] = o;break;case \"!=\":r[e] = { $ne: o };break;case \"<\":r[e] = { $lt: o };break;case \"<=\":r[e] = { $lte: o };break;case \">\":r[e] = { $gt: o };break;case \">=\":r[e] = { $gte: o };break;default:throw new l(415);}return r;}(e, t, n);return Object.keys(this.queryData).length ? c(this.queryData.$and) ? this.queryData = { $and: [this.queryData, r] } : this.queryData.$and.push(r) : this.queryData = r, r;} }, { key: \"containedIn\", value: function containedIn(e, t) {if (!i(e) || !u(t)) throw new l(415);return f.call(this, e, \"$in\", t);} }, { key: \"notContainedIn\", value: function notContainedIn(e, t) {if (!i(e) || !u(t)) throw new l(415);return f.call(this, e, \"$nin\", t);} }, { key: \"exists\", value: function exists(e) {if (!i(e)) throw new l(415);return f.call(this, e, \"$exists\", !0);} }, { key: \"doesNotExist\", value: function doesNotExist(e) {if (!i(e)) throw new l(415);return f.call(this, e, \"$exists\", !1);} }, { key: \"or\", value: function or() {for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {e[_key] = arguments[_key];}e.map(function (e, t) {if (!s(e)) throw new l(415);});var t = this.queryData.$and;if (console.log(__f__(t.length, \" at utils\\\\bmob.js:2\")), !c(t)) {for (var _n2 = 0; _n2 < t.length; _n2++) {for (var _r = 0; _r < e.length; _r++) {JSON.stringify(t[_n2]) === JSON.stringify(e[_r]) && this.queryData.$and.splice(_n2, 1);}}t.length || delete this.queryData.$and;}this.orData = { $or: e };} }, { key: \"and\", value: function and() {for (var _len2 = arguments.length, e = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {e[_key2] = arguments[_key2];}e.map(function (e, t) {if (!s(e)) throw new l(415);}), this.andData = { $and: e };} }, { key: \"limit\", value: function limit(e) {if (!a(e)) throw new l(415);e > 1e3 && (e = 1e3), this.limitNum = e;} }, { key: \"skip\", value: function skip(e) {if (!a(e)) throw new l(415);this.skipNum = e;} }, { key: \"order\", value: function order() {for (var _len3 = arguments.length, e = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {e[_key3] = arguments[_key3];}e.map(function (e) {if (!i(e)) throw new l(415);}), this.orders = e.join(\",\");} }, { key: \"include\", value: function include() {for (var _len4 = arguments.length, e = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {e[_key4] = arguments[_key4];}e.map(function (e) {if (!i(e)) throw new l(415);}), this.includes = e.join(\",\");} }, { key: \"select\", value: function select() {for (var _len5 = arguments.length, e = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {e[_key5] = arguments[_key5];}e.map(function (e) {if (!i(e)) throw new l(415);}), this.keys = e.join(\",\");} }, { key: \"field\", value: function field(e, t) {if (!i(e) || !i(t)) throw new l(415);this.queryReilation.where = { $relatedTo: { object: { __type: \"Pointer\", className: this.className, objectId: t }, key: e } };} }, { key: \"relation\", value: function relation(e) {if (!i(e)) throw new l(415);e = \"_User\" === e ? \"users\" : \"classes/\".concat(e), this.queryReilation.count = 1;var t = Object.assign(this.getParams(), this.queryReilation);return new Promise(function (n, r) {o(\"/1/\".concat(e), \"get\", t).then(function (e) {n(e);}).catch(function (e) {r(e);});});} }, { key: \"getParams\", value: function getParams() {var e = {};Object.keys(this.queryData).length && (e.where = this.queryData), Object.keys(this.location).length && (e.where = Object.assign(this.location, this.queryData)), Object.keys(this.andData).length && (e.where = Object.assign(this.andData, this.queryData)), Object.keys(this.orData).length && (e.where = Object.assign(this.orData, this.queryData)), e.limit = this.limitNum, e.skip = this.skipNum, e.include = this.includes, e.order = this.orders, e.keys = this.keys, Object.keys(this.stat).length && (e = this.stat);for (var _t2 in e) {(e.hasOwnProperty(_t2) && null === e[_t2] || 0 === e[_t2] || \"\" === e[_t2]) && delete e[_t2];}return e;} }, { key: \"find\", value: function find() {var _this5 = this;var e = {},t = {};var n = this.getParams(),s = function s(t, n) {if (!t || c(n)) throw new l(415);e[t] = n;},i = function i() {var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"updata\";if (console.log(__f__(n, \" at utils\\\\bmob.js:2\")), t.length < 1) throw new l(416);var s,i,a = \"put\",c = [];t.map(function (t) {return \"/undefined\" === (s = \"/\".concat(t.objectId)) && (s = \"\", a = \"post\"), i = { method: a, path: \"\".concat(_this5.tableName).concat(s), body: e }, \"delete\" === n && (i = { method: \"DELETE\", path: \"\".concat(_this5.tableName).concat(s) }), c.push(i), t;});var u = { requests: c },p = r._config.parameters.BATCH;return o(p, \"POST\", u);};return new Promise(function (e, r) {o(\"\".concat(_this5.tableName), \"get\", n).then(function (_ref3) {var n = _ref3.results;_this5.init(), Object.defineProperty(n, \"set\", { value: s }), Object.defineProperty(n, \"saveAll\", { value: function value() {return i();} }), Object.defineProperty(n, \"destroyAll\", { value: function value() {return i(\"delete\");} }), t = n, e(n);}).catch(function (e) {r(e);});});} }, { key: \"count\", value: function count() {var _this6 = this;var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;var t = {};return Object.keys(this.queryData).length && (t.where = this.queryData), Object.keys(this.andData).length && (t.where = Object.assign(this.andData, this.queryData)), Object.keys(this.orData).length && (t.where = Object.assign(this.orData, this.queryData)), t.count = 1, t.limit = e, new Promise(function (e, n) {o(\"\".concat(_this6.tableName), \"get\", t).then(function (_ref4) {var t = _ref4.count;e(t);}).catch(function (e) {n(e);});});} }]);return _class2;}();}, function (e, t, n) {var r = n(23);var o = n(0);e.exports = function (e) {var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"get\";var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};return new Promise(function (i, a) {void 0 === o.User && (o = n(0));var c = function (e) {var t = { \"content-type\": \"application/json\", \"X-Bmob-SDK-Type\": \"wechatApp\", \"X-Bmob-Application-Id\": e.applicationId, \"X-Bmob-REST-API-Key\": e.applicationKey };return e.applicationMasterKey && (t[\"X-Bmob-Master-Key\"] = e.applicationMasterKey), t;}(o._config);var u = o.User.current();u && (c[\"X-Bmob-Session-Token\"] = u.sessionToken);var l = r.create({ baseURL: o._config.host, headers: c, validateStatus: function validateStatus(e) {return e < 500;} }),p = { url: e, method: t };\"get\" === p.method ? p.params = s : p.data = s, l(p).then(function (_ref5) {var e = _ref5.data;(e.code && e.error || e.error) && a(e), i(e);}).catch(function (e) {a(e);});});};}, function (e, t, n) {\"use strict\";e.exports = function (e, t) {return function () {for (var n = new Array(arguments.length), r = 0; r < n.length; r++) {n[r] = arguments[r];}return e.apply(t, n);};};}, function (e, t, n) {\"use strict\";(function (t) {var r = n(1),o = n(28),s = n(30),i = n(31),a = n(32),c = n(13),u = \"undefined\" != typeof window && window.btoa && window.btoa.bind(window) || n(33);e.exports = function (e) {return new Promise(function (l, p) {var f = e.data,h = e.headers;r.isFormData(f) && delete h[\"Content-Type\"];var d = new XMLHttpRequest(),m = \"onreadystatechange\",w = !1;if (\"test\" === t.env.NODE_ENV || \"undefined\" == typeof window || !window.XDomainRequest || \"withCredentials\" in d || a(e.url) || (d = new window.XDomainRequest(), m = \"onload\", w = !0, d.onprogress = function () {}, d.ontimeout = function () {}), e.auth) {var g = e.auth.username || \"\",y = e.auth.password || \"\";h.Authorization = \"Basic \" + u(g + \":\" + y);}if (d.open(e.method.toUpperCase(), s(e.url, e.params, e.paramsSerializer), !0), d.timeout = e.timeout, d[m] = function () {if (d && (4 === d.readyState || w) && (0 !== d.status || d.responseURL && 0 === d.responseURL.indexOf(\"file:\"))) {var t = \"getAllResponseHeaders\" in d ? i(d.getAllResponseHeaders()) : null,n = { data: e.responseType && \"text\" !== e.responseType ? d.response : d.responseText, status: 1223 === d.status ? 204 : d.status, statusText: 1223 === d.status ? \"No Content\" : d.statusText, headers: t, config: e, request: d };o(l, p, n), d = null;}}, d.onerror = function () {p(c(\"Network Error\", e, null, d)), d = null;}, d.ontimeout = function () {p(c(\"timeout of \" + e.timeout + \"ms exceeded\", e, \"ECONNABORTED\", d)), d = null;}, r.isStandardBrowserEnv()) {var b = n(34),S = (e.withCredentials || a(e.url)) && e.xsrfCookieName ? b.read(e.xsrfCookieName) : void 0;S && (h[e.xsrfHeaderName] = S);}if (\"setRequestHeader\" in d && r.forEach(h, function (e, t) {void 0 === f && \"content-type\" === t.toLowerCase() ? delete h[t] : d.setRequestHeader(t, e);}), e.withCredentials && (d.withCredentials = !0), e.responseType) try {d.responseType = e.responseType;} catch (t) {if (\"json\" !== e.responseType) throw t;}\"function\" == typeof e.onDownloadProgress && d.addEventListener(\"progress\", e.onDownloadProgress), \"function\" == typeof e.onUploadProgress && d.upload && d.upload.addEventListener(\"progress\", e.onUploadProgress), e.cancelToken && e.cancelToken.promise.then(function (e) {d && (d.abort(), p(e), d = null);}), void 0 === f && (f = null), d.send(f);});};}).call(t, n(7));}, function (e, t, n) {\"use strict\";var r = n(29);e.exports = function (e, t, n, o, s) {var i = new Error(e);return r(i, t, n, o, s);};}, function (e, t, n) {\"use strict\";e.exports = function (e) {return !(!e || !e.__CANCEL__);};}, function (e, t, n) {\"use strict\";function r(e) {this.message = e;}r.prototype.toString = function () {return \"Cancel\" + (this.message ? \": \" + this.message : \"\");}, r.prototype.__CANCEL__ = !0, e.exports = r;}, function (e, t, n) {var r;var o = n(5).getAppType();\"h5\" === o ? r = n(44) : \"wx\" === o ? r = n(45) : \"hap\" === o ? r = n(46) : \"nodejs\" === o && (r = n(47)), e.exports = r;}, function (e, t, n) {(function (t) {var r = n(0),o = n(21),s = n(22),i = n(9),a = n(48),c = n(49),u = n(50),l = n(51),_n3 = n(52),p = _n3.generateCode,f = _n3.sendMessage,h = _n3.getAccessToken,d = _n3.sendWeAppMessage,m = _n3.refund,w = _n3.notifyMsg,g = _n3.functions,y = _n3.timestamp,b = _n3.requestPasswordReset,S = _n3.resetPasswordBySmsCode,E = _n3.updateUserPassword,v = _n3.geoPoint,T = _n3.checkMsg,_ = _n3.push,_n4 = n(53),x = _n4.requestSmsCode,j = _n4.verifySmsCode;r.GeoPoint = v, r.generateCode = p, r.sendMessage = f, r.getAccessToken = h, r.sendWeAppMessage = d, r.refund = m, r.checkMsg = T, r.notifyMsg = w, r.requestSmsCode = x, r.verifySmsCode = j, r.functions = g, r.timestamp = y, r.requestPasswordReset = b, r.resetPasswordBySmsCode = S, r.updateUserPassword = E, r.push = _, r.Pay = new u(), r.User = new a(), r.Socket = l, r.Query = function (e) {return new i(e);}, r.File = function (e, t) {return new c(e, t);}, r.request = n(4), r.type = r.utils.getAppType(), r.Pointer = function (e) {return new o(e);}, r.Relation = function (e) {return new s(e);}, \"wx\" === r.type ? wx.Bmob = r : \"h5\" === r.type ? window.Bmob = r : \"hap\" === r.type ? t.Bmob = r : \"nodejs\" === r.type && (t.Bmob = r), e.exports = r;}).call(t, n(6));}, function (e, t, n) {var r = \"v\".concat(n(19).version);e.exports = { host: \"https://api.bmobcloud.com\", applicationId: \"\", applicationKey: \"\", applicationMasterKey: \"\", parameters: { GENERATECODE: \"/1/wechatApp/qr/generatecode\", GETACCESSTOKEN: \"/1/wechatApp/getAccessToken\", SENDWEAPPMESSAGE: \"/1/wechatApp/SendWeAppMessage\", NOTIFYMSG: \"/1/wechatApp/notifyMsg\", REFUND: \"/1/pay/refund\", REQUESTSMSCODE: \"/1/requestSmsCode\", VERIFYSMSCODE: \"/1/verifySmsCode\", FUNCTIONS: \"/1/functions\", REQUESTPASSWORDRESET: \"/1/requestPasswordReset\", RESETPASSWORDBYSMSCODE: \"/1/resetPasswordBySmsCode\", UPDATEUSERPASSWORD: \"/1/updateUserPassword\", PUSH: \"/1/push\", FILES: \"/2/files\", DELFILES: \"/2/cdnBatchDelete\", TIMESTAMP: \"/1/timestamp\", LOGIN: \"/1/login\", REGISTER: \"/1/users\", REQUEST_EMAIL_VERIFY: \"/1/requestEmailVerify\", USERS: \"/1/users\", PAY: \"/1/pay\", WECHAT_APP: \"/1/wechatApp/\", BATCH: \"/1/batch\", CHECK_MSG: \"/1/wechatApp/checkMsg\", QUERY: \"/1/classes\" }, version: r, type: 3 };}, function (e, t) {e.exports = { name: \"hydrogen-js-sdk\", version: \"1.6.2\", description: \"Bmob SDK\", main: \"./src/lib/app.js\", scripts: { test: 'echo \"Error: no test specified\" && exit 1', build: \"webpack --config config/prod.env.js\", watch: \"webpack --watch --config config/prod.env.js\", dev: \"webpack-dev-server --config config/dev.env.js\" }, repository: { type: \"git\", url: \"git+https://github.com/bmob/hydrogen-js-sdk.git\" }, author: \"Bmob\", license: \"ISC\", bugs: { url: \"https://github.com/bmob/hydrogen-js-sdk/issues\" }, homepage: \"https://github.com/bmob/hydrogen-js-sdk#readme\", dependencies: { axios: \"^0.18.0\", \"node.extend\": \"^2.0.0\", webpack: \"^3.12.0\" }, devDependencies: { \"clean-webpack-plugin\": \"^0.1.19\", eslint: \"^4.19.1\", \"eslint-config-standard\": \"^11.0.0\", \"eslint-friendly-formatter\": \"^4.0.1\", \"eslint-loader\": \"^2.0.0\", \"eslint-plugin-import\": \"^2.12.0\", \"eslint-plugin-node\": \"^6.0.1\", \"eslint-plugin-promise\": \"^3.7.0\", \"eslint-plugin-standard\": \"^3.1.0\", \"html-webpack-plugin\": \"^2.30.1\", \"uglifyjs-webpack-plugin\": \"^1.2.5\", \"webpack-dev-server\": \"^2.11.2\" }, directories: { doc: \"docs\" }, keywords: [\"Bmob\"] };}, function (e, t) {e.exports = { host: \"https://api.bmobcloud.com\", applicationId: \"\", applicationKey: \"\", parameters: { GENERATECODE: \"/1/wechatApp/qr/generatecode\", GETACCESSTOKEN: \"/1/wechatApp/getAccessToken\", SENDWEAPPMESSAGE: \"/1/wechatApp/SendWeAppMessage\", NOTIFYMSG: \"/1/wechatApp/notifyMsg\", REFUND: \"/1/pay/refund\", REQUESTSMSCODE: \"/1/requestSmsCode\", VERIFYSMSCODE: \"/1/verifySmsCode\", FUNCTIONS: \"/1/functions\", REQUESTPASSWORDRESET: \"/1/requestPasswordReset\", RESETPASSWORDBYSMSCODE: \"/1/resetPasswordBySmsCode\", UPDATEUSERPASSWORD: \"/1/updateUserPassword\", PUSH: \"/1/push\", FILES: \"/2/files\", DELFILES: \"/2/cdnBatchDelete\", TIMESTAMP: \"/1/timestamp\", LOGIN: \"/1/login\", REGISTER: \"/1/users\", REQUEST_EMAIL_VERIFY: \"/1/requestEmailVerify\", USERS: \"/1/users\", PAY: \"/1/pay\", WECHAT_APP: \"/1/wechatApp/\", BATCH: \"/1/batch\", CHECK_MSG: \"/1/wechatApp/checkMsg\", QUERY: \"/1/classes\" }, version: 1, type: 1 };}, function (e, t, n) {var _n5 = n(2),r = _n5.isString,o = n(3);e.exports = /*#__PURE__*/function () {function _class3(e) {_classCallCheck(this, _class3);if (!r(e)) throw new o(415);this.tableName = e;}_createClass(_class3, [{ key: \"set\", value: function set(e) {if (!r(e)) throw new o(415);return { __type: \"Pointer\", className: this.tableName, objectId: e };} }]);return _class3;}();}, function (e, t, n) {var _n6 = n(2),r = _n6.isString,o = _n6.isArray,s = n(3);function i(e, t) {var _this7 = this;if (r(e)) return { __op: t, objects: [{ __type: \"Pointer\", className: this.tableName, objectId: e }] };if (o(e)) {var _n7 = [];return e.map(function (e) {if (!r(e)) throw new s(415);_n7.push({ __type: \"Pointer\", className: _this7.tableName, objectId: e });}), { __op: t, objects: _n7 };}throw new s(415);}e.exports = /*#__PURE__*/function () {function _class4(e) {_classCallCheck(this, _class4);if (!r(e)) throw new s(415);this.tableName = e;}_createClass(_class4, [{ key: \"add\", value: function add(e) {return i.call(this, e, \"AddRelation\");} }, { key: \"remove\", value: function remove(e) {return i.call(this, e, \"RemoveRelation\");} }]);return _class4;}();}, function (e, t, n) {e.exports = n(24);}, function (e, t, n) {\"use strict\";var r = n(1),o = n(11),s = n(26),i = n(8);function a(e) {var t = new s(e),n = o(s.prototype.request, t);return r.extend(n, s.prototype, t), r.extend(n, t), n;}var c = a(i);c.Axios = s, c.create = function (e) {return a(r.merge(i, e));}, c.Cancel = n(15), c.CancelToken = n(40), c.isCancel = n(14), c.all = function (e) {return Promise.all(e);}, c.spread = n(41), e.exports = c, e.exports.default = c;}, function (e, t) {\n    function n(e) {return !!e.constructor && \"function\" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e);}\n    /*!\r\n                                                                                                                         * Determine if an object is a Buffer\r\n                                                                                                                         *\r\n                                                                                                                         * @author   Feross Aboukhadijeh <https://feross.org>\r\n                                                                                                                         * @license  MIT\r\n                                                                                                                         */\n    e.exports = function (e) {return null != e && (n(e) || function (e) {return \"function\" == typeof e.readFloatLE && \"function\" == typeof e.slice && n(e.slice(0, 0));}(e) || !!e._isBuffer);};\n  }, function (e, t, n) {\"use strict\";var r = n(8),o = n(1),s = n(35),i = n(36);function a(e) {this.defaults = e, this.interceptors = { request: new s(), response: new s() };}a.prototype.request = function (e) {\"string\" == typeof e && (e = o.merge({ url: arguments[0] }, arguments[1])), (e = o.merge(r, { method: \"get\" }, this.defaults, e)).method = e.method.toLowerCase();var t = [i, void 0],n = Promise.resolve(e);for (this.interceptors.request.forEach(function (e) {t.unshift(e.fulfilled, e.rejected);}), this.interceptors.response.forEach(function (e) {t.push(e.fulfilled, e.rejected);}); t.length;) {n = n.then(t.shift(), t.shift());}return n;}, o.forEach([\"delete\", \"get\", \"head\", \"options\"], function (e) {a.prototype[e] = function (t, n) {return this.request(o.merge(n || {}, { method: e, url: t }));};}), o.forEach([\"post\", \"put\", \"patch\"], function (e) {a.prototype[e] = function (t, n, r) {return this.request(o.merge(r || {}, { method: e, url: t, data: n }));};}), e.exports = a;}, function (e, t, n) {\"use strict\";var r = n(1);e.exports = function (e, t) {r.forEach(e, function (n, r) {r !== t && r.toUpperCase() === t.toUpperCase() && (e[t] = n, delete e[r]);});};}, function (e, t, n) {\"use strict\";var r = n(13);e.exports = function (e, t, n) {var o = n.config.validateStatus;n.status && o && !o(n.status) ? t(r(\"Request failed with status code \" + n.status, n.config, null, n.request, n)) : e(n);};}, function (e, t, n) {\"use strict\";e.exports = function (e, t, n, r, o) {return e.config = t, n && (e.code = n), e.request = r, e.response = o, e;};}, function (e, t, n) {\"use strict\";var r = n(1);function o(e) {return encodeURIComponent(e).replace(/%40/gi, \"@\").replace(/%3A/gi, \":\").replace(/%24/g, \"$\").replace(/%2C/gi, \",\").replace(/%20/g, \"+\").replace(/%5B/gi, \"[\").replace(/%5D/gi, \"]\");}e.exports = function (e, t, n) {if (!t) return e;var s;if (n) s = n(t);else if (r.isURLSearchParams(t)) s = t.toString();else {var i = [];r.forEach(t, function (e, t) {null !== e && void 0 !== e && (r.isArray(e) ? t += \"[]\" : e = [e], r.forEach(e, function (e) {r.isDate(e) ? e = e.toISOString() : r.isObject(e) && (e = JSON.stringify(e)), i.push(o(t) + \"=\" + o(e));}));}), s = i.join(\"&\");}return s && (e += (-1 === e.indexOf(\"?\") ? \"?\" : \"&\") + s), e;};}, function (e, t, n) {\"use strict\";var r = n(1),o = [\"age\", \"authorization\", \"content-length\", \"content-type\", \"etag\", \"expires\", \"from\", \"host\", \"if-modified-since\", \"if-unmodified-since\", \"last-modified\", \"location\", \"max-forwards\", \"proxy-authorization\", \"referer\", \"retry-after\", \"user-agent\"];e.exports = function (e) {var t,n,s,i = {};return e ? (r.forEach(e.split(\"\\n\"), function (e) {if (s = e.indexOf(\":\"), t = r.trim(e.substr(0, s)).toLowerCase(), n = r.trim(e.substr(s + 1)), t) {if (i[t] && o.indexOf(t) >= 0) return;i[t] = \"set-cookie\" === t ? (i[t] ? i[t] : []).concat([n]) : i[t] ? i[t] + \", \" + n : n;}}), i) : i;};}, function (e, t, n) {\"use strict\";var r = n(1);e.exports = r.isStandardBrowserEnv() ? function () {var e,t = /(msie|trident)/i.test(navigator.userAgent),n = document.createElement(\"a\");function o(e) {var r = e;return t && (n.setAttribute(\"href\", r), r = n.href), n.setAttribute(\"href\", r), { href: n.href, protocol: n.protocol ? n.protocol.replace(/:$/, \"\") : \"\", host: n.host, search: n.search ? n.search.replace(/^\\?/, \"\") : \"\", hash: n.hash ? n.hash.replace(/^#/, \"\") : \"\", hostname: n.hostname, port: n.port, pathname: \"/\" === n.pathname.charAt(0) ? n.pathname : \"/\" + n.pathname };}return e = o(window.location.href), function (t) {var n = r.isString(t) ? o(t) : t;return n.protocol === e.protocol && n.host === e.host;};}() : function () {return !0;};}, function (e, t, n) {\"use strict\";var r = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";function o() {this.message = \"String contains an invalid character\";}o.prototype = new Error(), o.prototype.code = 5, o.prototype.name = \"InvalidCharacterError\", e.exports = function (e) {for (var t, n, s = String(e), i = \"\", a = 0, c = r; s.charAt(0 | a) || (c = \"=\", a % 1); i += c.charAt(63 & t >> 8 - a % 1 * 8)) {if ((n = s.charCodeAt(a += .75)) > 255) throw new o();t = t << 8 | n;}return i;};}, function (e, t, n) {\"use strict\";var r = n(1);e.exports = r.isStandardBrowserEnv() ? { write: function write(e, t, n, o, s, i) {var a = [];a.push(e + \"=\" + encodeURIComponent(t)), r.isNumber(n) && a.push(\"expires=\" + new Date(n).toGMTString()), r.isString(o) && a.push(\"path=\" + o), r.isString(s) && a.push(\"domain=\" + s), !0 === i && a.push(\"secure\"), document.cookie = a.join(\"; \");}, read: function read(e) {var t = document.cookie.match(new RegExp(\"(^|;\\\\s*)(\" + e + \")=([^;]*)\"));return t ? decodeURIComponent(t[3]) : null;}, remove: function remove(e) {this.write(e, \"\", Date.now() - 864e5);} } : { write: function write() {}, read: function read() {return null;}, remove: function remove() {} };}, function (e, t, n) {\"use strict\";var r = n(1);function o() {this.handlers = [];}o.prototype.use = function (e, t) {return this.handlers.push({ fulfilled: e, rejected: t }), this.handlers.length - 1;}, o.prototype.eject = function (e) {this.handlers[e] && (this.handlers[e] = null);}, o.prototype.forEach = function (e) {r.forEach(this.handlers, function (t) {null !== t && e(t);});}, e.exports = o;}, function (e, t, n) {\"use strict\";var r = n(1),o = n(37),s = n(14),i = n(8),a = n(38),c = n(39);function u(e) {e.cancelToken && e.cancelToken.throwIfRequested();}e.exports = function (e) {return u(e), e.baseURL && !a(e.url) && (e.url = c(e.baseURL, e.url)), e.headers = e.headers || {}, e.data = o(e.data, e.headers, e.transformRequest), e.headers = r.merge(e.headers.common || {}, e.headers[e.method] || {}, e.headers || {}), r.forEach([\"delete\", \"get\", \"head\", \"post\", \"put\", \"patch\", \"common\"], function (t) {delete e.headers[t];}), (e.adapter || i.adapter)(e).then(function (t) {return u(e), t.data = o(t.data, t.headers, e.transformResponse), t;}, function (t) {return s(t) || (u(e), t && t.response && (t.response.data = o(t.response.data, t.response.headers, e.transformResponse))), Promise.reject(t);});};}, function (e, t, n) {\"use strict\";var r = n(1);e.exports = function (e, t, n) {return r.forEach(n, function (n) {e = n(e, t);}), e;};}, function (e, t, n) {\"use strict\";e.exports = function (e) {return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(e);};}, function (e, t, n) {\"use strict\";e.exports = function (e, t) {return t ? e.replace(/\\/+$/, \"\") + \"/\" + t.replace(/^\\/+/, \"\") : e;};}, function (e, t, n) {\"use strict\";var r = n(15);function o(e) {if (\"function\" != typeof e) throw new TypeError(\"executor must be a function.\");var t;this.promise = new Promise(function (e) {t = e;});var n = this;e(function (e) {n.reason || (n.reason = new r(e), t(n.reason));});}o.prototype.throwIfRequested = function () {if (this.reason) throw this.reason;}, o.source = function () {var e;return { token: new o(function (t) {e = t;}), cancel: e };}, e.exports = o;}, function (e, t, n) {\"use strict\";e.exports = function (e) {return function (t) {return e.apply(null, t);};};}, function (e, t, n) {var r = n(0);e.exports = function (e) {var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"get\";var o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};return new Promise(function (s, i) {var a = function (e) {var t = { \"content-type\": \"application/json\", \"X-Bmob-SDK-Type\": \"wechatApp\", \"X-Bmob-Application-Id\": e.applicationId, \"X-Bmob-REST-API-Key\": e.applicationKey };return e.applicationMasterKey && (t[\"X-Bmob-Master-Key\"] = e.applicationMasterKey), t;}(r._config);void 0 === r.User && (r = n(0));var c = r.User.current();c && (a[\"X-Bmob-Session-Token\"] = c.sessionToken), wx.request({ url: r._config.host + e, method: t, data: o, header: a, success: function success(e) {(e.data.code && e.data.error || e.data.error) && i(e.data), s(e.data);}, fail: function fail(e) {console.log(__f__(e, \" at utils\\\\bmob.js:11\")), i(e);} });});};}, function (e, t, n) {var r = n(0);e.exports = function (e) {var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"get\";var o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};return new Promise(function (s, i) {var a = function (e) {var t = { \"content-type\": \"application/json\", \"X-Bmob-SDK-Type\": \"wechatApp\", \"X-Bmob-Application-Id\": e.applicationId, \"X-Bmob-REST-API-Key\": e.applicationKey };return e.applicationMasterKey && (t[\"X-Bmob-Master-Key\"] = e.applicationMasterKey), t;}(r._config);void 0 === r.User && (r = n(0));var c = r.User.current();c && (a[\"X-Bmob-Session-Token\"] = c.sessionToken), \"xxrequire('@system.fetch')xx\".fetch({ url: r._config.host + e, header: a, method: t, data: o, success: function success(e) {var t = JSON.parse(e.data);t.code && i(t), s(t);}, fail: function fail(e, t) {console.log(__f__(\"handling fail, code = \".concat(t), \" at utils\\\\bmob.js:11\")), i(e);} });});};}, function (e, t, n) {var _n8 = n(2),r = _n8.isString;var o;o = \"undefined\" != typeof cc ? cc.sys.localStorage : localStorage, console.log(__f__(o, \" at utils\\\\bmob.js:11\"));var s = { save: function save(e, t) {if (!r(e) || !t) throw new Error(415);o.setItem(e, JSON.stringify(t));}, fetch: function fetch(e) {if (!r(e)) throw new Error(415);return JSON.parse(o.getItem(e)) || null;}, remove: function remove(e) {if (!r(e)) throw new Error(415);o.removeItem(e);}, clear: function clear() {o.clear();} };e.exports = s;}, function (e, t, n) {var _n9 = n(2),r = _n9.isString,o = _n9.isObject,s = { save: function save(e, t) {if (!r(e) || !t) throw new Error(415);return t = o(t) ? JSON.stringify(t) : t, wx.setStorageSync(e, t);}, fetch: function fetch(e) {if (!r(e)) throw new Error(415);return wx.getStorageSync(e) || null;}, remove: function remove(e) {if (!r(e)) throw new Error(415);return wx.removeStorageSync(e);}, clear: function clear() {return wx.clearStorageSync();} };e.exports = s;}, function (e, t, n) {var _n10 = n(2),r = _n10.isString,o = \"xxrequire('@system.storage')xx\",s = { save: function save(e, t) {if (!r(e) || !t) throw new Error(415);o.set({ key: e, value: JSON.stringify(t), success: function success(e) {return console.log(__f__(\"handling success\", \" at utils\\\\bmob.js:11\")), e;}, fail: function fail(e, t) {console.log(__f__(\"handling fail, code = \".concat(t), \" at utils\\\\bmob.js:11\"));} });}, fetch: function fetch(e) {if (!r(e)) throw new Error(415);return new Promise(function (t, n) {return o.get({ key: e, success: function success(e) {t(e || null);}, fail: function fail(e, t) {console.log(__f__(\"handling fail, code = \".concat(t), \" at utils\\\\bmob.js:11\")), n(e);} });});}, remove: function remove(e) {if (!r(e)) throw new Error(415);o.delete({ key: e, success: function success(e) {console.log(__f__(\"handling success\", \" at utils\\\\bmob.js:11\"));}, fail: function fail(e, t) {console.log(__f__(\"handling fail, code = \".concat(t), \" at utils\\\\bmob.js:11\"));} });}, clear: function clear() {o.clear({ success: function success(e) {console.log(__f__(\"handling success\", \" at utils\\\\bmob.js:11\"));}, fail: function fail(e, t) {console.log(__f__(\"handling fail, code = \".concat(t), \" at utils\\\\bmob.js:11\"));} });} };e.exports = s;}, function (e, t) {var n = { save: function save(e, t) {}, fetch: function fetch(e) {return null;}, remove: function remove(e) {}, clear: function clear() {} };e.exports = n;}, function (e, t, n) {var r = n(4),o = n(16),s = n(9),i = n(0),a = n(3),_n11 = n(2),c = _n11.isObject,u = _n11.isString,l = _n11.isNumber;e.exports = /*#__PURE__*/function (_s) {_inherits(_class5, _s);function _class5() {_classCallCheck(this, _class5);return _possibleConstructorReturn(this, _getPrototypeOf(_class5).call(this, \"_User\"));}_createClass(_class5, [{ key: \"set\", value: function set(e) {var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";u(e) && (this.setData[e] = t);} }, { key: \"requestEmailVerify\", value: function requestEmailVerify(e) {if (!u(e)) throw new a(415);this.setData = Object.assign({}, { email: e }), console.log(__f__(this.setData, \" at utils\\\\bmob.js:11\"));var t = i._config.parameters.REQUEST_EMAIL_VERIFY;return r(t, \"post\", this.setData);} }, { key: \"register\", value: function register(e) {if (!c(e)) throw new a(415);this.setData = Object.assign(this.setData, e), console.log(__f__(this.setData, \" at utils\\\\bmob.js:11\"));var t = i._config.parameters.REGISTER;return r(t, \"post\", this.setData);} }, { key: \"login\", value: function login(e, t) {var _this8 = this;if (!u(e) || !u(t)) throw new a(415);this.setData = Object.assign({}, { username: e, password: t });var n = i._config.parameters.LOGIN;return new Promise(function (e, t) {r(n, \"get\", _this8.setData).then(function (t) {o.save(\"bmob\", t), e(t);}).catch(function (e) {console.log(__f__(\"登陆失败\", \" at utils\\\\bmob.js:11\")), t(e);});});} }, { key: \"users\", value: function users() {var e = i._config.parameters.USERS;return r(e, \"get\");} }, { key: \"signOrLoginByMobilePhone\", value: function signOrLoginByMobilePhone(e, t) {if (!l(e) || !l(t)) throw new a(415);this.setData = Object.assign({}, { mobilePhoneNumber: e, smsCode: t });var n = i._config.parameters.LOGIN;return r(n, \"get\", this.setData);} }, { key: \"requestOpenId\", value: function requestOpenId(e) {var t = i._config.parameters.WECHAT_APP;return r(t + e, \"POST\", {});} }, { key: \"linkWith\", value: function linkWith(e) {var t = { authData: e },n = i._config.parameters.USERS;return r(n, \"POST\", t);} }, { key: \"loginWithWeapp\", value: function loginWithWeapp(e) {var _this9 = this;return new Promise(function (t, n) {_this9.requestOpenId(e).then(function (e) {var n = { weapp: e },r = _this9.linkWith(n);t(r);}).catch(function (e) {n(e);});});} }, { key: \"upInfo\", value: function upInfo(e) {var _this10 = this;return new Promise(function (t, n) {var r = e.nickName,s = e.avatarUrl,i = _this10.current();if (!i) throw new a(415);var c = o.fetch(\"openid\");_this10.get(i.objectId).then(function (e) {e.set(\"nickName\", r), e.set(\"userPic\", s), e.set(\"openid\", c), e.save().then(function (e) {t(e);}).catch(function (e) {console.log(__f__(e, \" at utils\\\\bmob.js:11\")), n(e);});}).catch(function (e) {console.log(__f__(e, \" at utils\\\\bmob.js:11\")), n(e);});});} }, { key: \"auth\", value: function auth() {var e = this;return new Promise(function (t, n) {var r = function r() {wx.login({ success: function success(r) {e.loginWithWeapp(r.code).then(function (e) {if (e.error) throw new a(415);var n = e.authData.weapp.openid;o.save(\"openid\", n), o.save(\"bmob\", e), t(e);}, function (e) {n(e);});} });};wx.checkSession({ success: function success() {var o = e.current();null === o && n(\"登陆错误，请在Bmob后台填写小程序AppSecret。\"), t(o), r();}, fail: function fail() {r();} });});} }]);return _class5;}(s);}, function (e, t, n) {var r = n(4);var o = n(0);var s = n(3),i = n(5),a = \"xxrequire('@system.request')xx\",_n12 = n(2),c = _n12.isString,u = _n12.isArray;var l = [];e.exports = /*#__PURE__*/function () {function _class6(e, t) {_classCallCheck(this, _class6);if (e && t) {if (!c(e)) throw new s(415);l.push({ name: e, route: \"\".concat(o._config.parameters.FILES, \"/\").concat(e), data: t });}}_createClass(_class6, [{ key: \"save\", value: function save() {if (!l.length) throw new s(417);var e;var t = i.getAppType();return \"h5\" === t || \"nodejs\" === t ? e = new Promise(function (e, t) {var n = [];for (var _i = 0; _i < l.length; _i++) {var _o = l[_i];r(_o.route, \"post\", _o.data).then(function (r) {n.push(r), n.length === l.length && (l = [], e(n), t(n));}).catch(function (e) {n.push(e);});}}) : \"wx\" === t ? e = new Promise(function (e, t) {void 0 === o.User && (o = n(0));var r = \"bmob\";var s = o.User.current();s && (r = s.sessionToken);var i = [],a = { _ApplicationId: o._config.applicationId, _RestKey: o._config.applicationKey, _SessionToken: r },c = Object.assign({ _ContentType: \"text/plain\", mime_type: \"text/plain\", category: \"wechatApp\", _ClientVersion: \"js3.6.1\", _InstallationId: \"bmob\" }, a);for (var _i2 = 0; _i2 < l.length; _i2++) {var _n13 = l[_i2];wx.uploadFile({ url: o._config.host + _n13.route, filePath: _n13.data, name: \"file\", header: { \"X-Bmob-SDK-Type\": \"wechatApp\" }, formData: c, success: function success(n) {var r = n.data;i.push(r), i.length === l.length && (l = [], e(i), t(i));}, fail: function fail(e) {i.push(e);} });}}) : \"hap\" === t && (e = new Promise(function (e, t) {void 0 === o.User && (o = n(0));var r = o.User.current();var s = [],i = { _ApplicationId: o._config.applicationId, _RestKey: o._config.applicationKey, _SessionToken: r.sessionToken },c = Object.assign({ _ContentType: \"text/plain\", mime_type: \"text/plain\", category: \"wechatApp\", _ClientVersion: \"js3.6.1\", _InstallationId: \"bmob\" }, i);for (var _i3 = 0; _i3 < l.length; _i3++) {var _n14 = l[_i3];a.upload({ url: o._config.host + _n14.route, files: [{ uri: _n14.data, name: \"file\", filename: _n14.name }], header: { \"X-Bmob-SDK-Type\": \"wechatApp\" }, data: c, success: function success(n) {console.log(__f__(\"handling success\" + s, \" at utils\\\\bmob.js:11\"));var r = n.data;s.push(r), s.length === l.length && (l = [], e(s), t(s));}, fail: function fail(e, t) {console.log(__f__(\"handling fail, code = \".concat(t), \" at utils\\\\bmob.js:11\"));} });}})), e;} }, { key: \"destroy\", value: function destroy(e) {if (c(e)) return r(\"\".concat(o._config.parameters.FILES, \"/upyun/\").concat(e.split(\".com/\")[1]), \"delete\");if (u(e)) {var _t3 = [];return e.map(function (e) {_t3.push(e.split(\".com/\")[1]);}), r(o._config.parameters.DELFILES, \"post\", { upyun: _t3 });}throw new s(415);} }]);return _class6;}();}, function (e, t, n) {var r = n(4),o = n(0),s = n(3);e.exports = /*#__PURE__*/function () {function _class7() {_classCallCheck(this, _class7);}_createClass(_class7, [{ key: \"weApp\", value: function weApp(e, t, n) {var i = wx.getStorageSync(\"openid\");if (!(e && t && n && i)) throw new s(416);var a = { order_price: e, product_name: t, body: n, open_id: i, pay_type: 4 };var c = o._config.parameters.PAY;return r(c, \"post\", a);} }]);return _class7;}();}, function (t, n, r) {var o = r(0),s = r(3),i = { setup: function setup(e) {var t = [];Object.assign(e, { on: function on(e, n) {\"function\" == typeof n && t.push([e, n]);}, emit: function emit(e) {for (var _len6 = arguments.length, n = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {n[_key6 - 1] = arguments[_key6];}t.forEach(function (_ref6) {var _ref7 = _slicedToArray(_ref6, 2),t = _ref7[0],r = _ref7[1];return e === t && r.apply(void 0, n);});}, removeAllListeners: function removeAllListeners() {t = [];} });} };t.exports = /*#__PURE__*/function () {function _class8() {_classCallCheck(this, _class8);if (!o._config.applicationId) throw new s(415);this.config = { host: \"wss.bmobcloud.com\" }, i.setup(this.emitter = {}), this.applicationId = o._config.applicationId, this.initialize();}_createClass(_class8, [{ key: \"handshake\", value: function handshake() {var t = \"https://\" + this.config.host + \"/socket.io/1/?t=\" + new Date().getTime(),n = JSON.stringify({});return new Promise(function (r, o) {wx.request({ method: \"GET\", url: t, data: n, header: { \"content-type\": \"text/plain\" }, success: function success(t) {return t.data && t.data.statusCode ? r(\"request error\", e) : 200 !== t.statusCode ? r(\"request error\", e) : r(function (e) {if (!(e instanceof s)) return e.split(\":\")[0];self.connecting = !1, self.onError(e.message);}(t.data));}, fail: function fail(e) {return r(\"request error\", e);} });});} }, { key: \"initialize\", value: function initialize() {var _this11 = this;return this.handshake().then(function (e) {try {_this11.connect(\"wss://\".concat(_this11.config.host, \"/socket.io/1/websocket/\") + e, {});} catch (e) {throw console.error(__f__({ connectError: e }, \" at utils\\\\bmob.js:11\")), e;}}), this.on(\"close\", function () {console.log(__f__(\"连接已中断\", \" at utils\\\\bmob.js:11\"));}), new Promise(function (e, t) {_this11.on(\"server_pub\", function (e) {switch (e.action) {case \"updateTable\":_this11.onUpdateTable(e.tableName, e.data);break;case \"updateRow\":_this11.onUpdateRow(e.tableName, e.objectId, e.data);break;case \"deleteTable\":_this11.onDeleteTable(e.tableName, e.data);break;case \"deleteRow\":_this11.onDeleteRow(e.tableName, e.objectId, e.data);}}), _this11.on(\"client_send_data\", function (e) {_this11.onInitListen();});});} }, { key: \"onInitListen\", value: function onInitListen() {} }, { key: \"connect\", value: function connect(e, t) {var _this12 = this;var n = Object.keys(t).map(function (e) {return \"\".concat(e, \"=\").concat(encodeURIComponent(t[e]));}).join(\"&\"),r = e.indexOf(\"?\") > -1 ? \"&\" : \"?\";return e = [e, n].join(r), new Promise(function (n, r) {wx.onSocketOpen(n), wx.onSocketError(r), wx.onSocketMessage(function (e) {try {var _t4 = function _t4(e) {var _JSON$parse = JSON.parse(e),t = _JSON$parse.name,n = _JSON$parse.args;return { name: t, args: n };},_n15 = e.data;if (\"2:::\" === _n15.slice(0, 4) && _this12.emit(!1, !0), null === (_n15 = _n15.slice(4)) || \"\" === _n15) return;var _t5 = _t4(_n15),_r2 = _t5.name,_o2 = _t5.args;var _s2 = null == _o2 ? \"\" : JSON.parse(_o2[0]);_this12.emitter.emit(_r2, _s2);} catch (t) {console.log(__f__(\"Handle packet failed: \" + e.data, t, \" at utils\\\\bmob.js:11\"));}}), wx.onSocketClose(function () {return _this12.emitter.emit(\"close\");}), wx.connectSocket({ url: e, header: t });});} }, { key: \"on\", value: function on(e, t) {this.emitter.on(e, t);} }, { key: \"emit\", value: function emit(e, t) {t = void 0 === t ? \"5:::\" : \"2:::\", e = e ? JSON.stringify(e) : \"\", wx.sendSocketMessage({ data: t + e });} }, { key: \"emitData\", value: function emitData(e, t) {return { name: e, args: [t = JSON.stringify(t)] };} }, { key: \"updateTable\", value: function updateTable(e) {var t = { appKey: this.applicationId, tableName: e, objectId: \"\", action: \"updateTable\" };t = this.emitData(\"client_sub\", t), this.emit(t);} }, { key: \"unsubUpdateTable\", value: function unsubUpdateTable(e) {var t = { appKey: this.applicationId, tableName: e, objectId: \"\", action: \"unsub_updateTable\" };t = this.emitData(\"client_sub\", t), this.emit(t);} }, { key: \"updateRow\", value: function updateRow(e, t) {var n = { appKey: this.applicationId, tableName: e, objectId: t, action: \"updateRow\" };n = this.emitData(\"client_sub\", n), this.emit(n);} }, { key: \"unsubUpdateRow\", value: function unsubUpdateRow(e, t) {var n = { appKey: this.applicationId, tableName: e, objectId: t, action: \"unsub_updateRow\" };n = this.emitData(\"client_sub\", n), this.emit(n);} }, { key: \"deleteTable\", value: function deleteTable(e) {var t = { appKey: this.applicationId, tableName: e, objectId: \"\", action: \"deleteTable\" };t = this.emitData(\"client_sub\", t), this.emit(t);} }, { key: \"unsubDeleteTable\", value: function unsubDeleteTable(e) {var t = { appKey: this.applicationId, tableName: e, objectId: \"\", action: \"unsub_deleteTable\" };t = this.emitData(\"client_sub\", t), this.emit(t);} }, { key: \"deleteRow\", value: function deleteRow(e, t) {var n = { appKey: this.applicationId, tableName: e, objectId: t, action: \"deleteRow\" };n = this.emitData(\"client_sub\", n), this.emit(n);} }, { key: \"unsubDeleteRow\", value: function unsubDeleteRow(e, t) {var n = { appKey: this.applicationId, tableName: e, objectId: t, action: \"unsub_deleteRow\" };n = this.emitData(\"client_sub\", n), this.emit(n);} }, { key: \"onUpdateTable\", value: function onUpdateTable(e, t) {} }, { key: \"onUpdateRow\", value: function onUpdateRow(e, t, n) {} }, { key: \"onDeleteTable\", value: function onDeleteTable(e, t) {} }, { key: \"onDeleteRow\", value: function onDeleteRow(e, t, n) {} }]);return _class8;}();}, function (e, t, n) {var r = n(4),o = n(0),s = n(3),_n16 = n(2),i = _n16.isObject,a = _n16.isString;e.exports = { generateCode: function generateCode(e) {if (!i(e)) throw new s(415);var t = o._config.parameters.GENERATECODE;return r(t, \"post\", e);}, sendMessage: function sendMessage(e) {return 1;}, getAccessToken: function getAccessToken(e) {var t = o._config.parameters.GETACCESSTOKEN;return r(t, \"get\");}, sendWeAppMessage: function sendWeAppMessage(e) {if (!i(e)) throw new s(415);var t = o._config.parameters.SENDWEAPPMESSAGE;return r(t, \"post\", e);}, refund: function refund(e) {if (!i(e)) throw new s(415);var t = o._config.parameters.REFUND;return r(t, \"post\", e);}, notifyMsg: function notifyMsg(e) {if (!i(e)) throw new s(415);var t = o._config.parameters.NOTIFYMSG;return r(t, \"post\", e);}, functions: function functions(e, t) {if (t || (t = {}), !a(e)) throw new s(415);var n = \"\".concat(o._config.parameters.FUNCTIONS, \"/\").concat(e);return r(n, \"post\", t);}, timestamp: function timestamp() {var e = o._config.parameters.TIMESTAMP;return r(e, \"get\");}, requestPasswordReset: function requestPasswordReset(e) {if (!i(e)) throw new s(415);var t = o._config.parameters.REQUESTPASSWORDRESET;return r(t, \"post\", e);}, resetPasswordBySmsCode: function resetPasswordBySmsCode(e, t) {if (!a(e)) throw new s(415);var n = \"\".concat(o._config.parameters.RESETPASSWORDBYSMSCODE, \"/\").concat(e);return r(n, \"put\", t);}, updateUserPassword: function updateUserPassword(e, t) {if (!i(t) || !a(e)) throw new s(415);var n = \"\".concat(o._config.parameters.UPDATEUSERPASSWORD, \"/\").concat(e);return r(n, \"put\", t);}, geoPoint: function geoPoint(_ref8) {var e = _ref8.latitude,t = _ref8.longitude;return function (e, t) {if (e < -90) throw new s(419);if (e > 90) throw new s(419);if (t < -180) throw new s(419);if (t > 180) throw new s(419);}(e, t), { __type: \"GeoPoint\", latitude: e, longitude: t };}, checkMsg: function checkMsg(e) {if (!a(e)) throw new s(415);var t = \"\".concat(o._config.parameters.CHECK_MSG);return r(t, \"post\", { content: e });}, push: function push(e) {if (!i(e)) throw new s(415);var t = o._config.parameters.PUSH;return r(t, \"post\", e);} };}, function (e, t, n) {var r = n(4),o = n(0),s = n(3),_n17 = n(2),i = _n17.isObject,a = _n17.isString;e.exports = { requestSmsCode: function requestSmsCode(e, t) {if (!i(e)) throw new s(415);var n = o._config.parameters.REQUESTSMSCODE;return r(n, \"post\", e);}, verifySmsCode: function verifySmsCode(e, t, n) {if (!a(e)) throw new s(415);if (!i(t)) throw new s(415);var c = \"\".concat(o._config.parameters.VERIFYSMSCODE, \"/\").concat(e);return r(c, \"post\", t);} };}]);\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 6)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10\n");

/***/ }),

/***/ 105:
/*!**********************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmine%2Fmine"} ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _mine = _interopRequireDefault(__webpack_require__(/*! ./pages/mine/mine.vue */ 106));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_mine.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSwwRjtBQUNBQSxVQUFVLENBQUNDLGFBQUQsQ0FBVixDIiwiZmlsZSI6IjEwNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21pbmUvbWluZS52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///105\n");

/***/ }),

/***/ 113:
/*!***********************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fwarehouse%2Fdetail%2Fdetail"} ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _detail = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/warehouse/detail/detail.vue */ 114));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_detail.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxpSDtBQUNBQSxVQUFVLENBQUNDLGVBQUQsQ0FBVixDIiwiZmlsZSI6IjExMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS93YXJlaG91c2UvZGV0YWlsL2RldGFpbC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///113\n");

/***/ }),

/***/ 121:
/*!***********************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Freport%2Foperational_status%2Foperational_status"} ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _operational_status = _interopRequireDefault(__webpack_require__(/*! ./pages/report/operational_status/operational_status.vue */ 122));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_operational_status.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSwySTtBQUNBQSxVQUFVLENBQUNDLDJCQUFELENBQVYsQyIsImZpbGUiOiIxMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9yZXBvcnQvb3BlcmF0aW9uYWxfc3RhdHVzL29wZXJhdGlvbmFsX3N0YXR1cy52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///121\n");

/***/ }),

/***/ 129:
/*!*****************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmine%2Flogs%2Flogs"} ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _logs = _interopRequireDefault(__webpack_require__(/*! ./pages/mine/logs/logs.vue */ 130));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_logs.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSwrRjtBQUNBQSxVQUFVLENBQUNDLGFBQUQsQ0FBVixDIiwiZmlsZSI6IjEyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21pbmUvbG9ncy9sb2dzLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///129\n");

/***/ }),

/***/ 13:
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHNjcmlwdEV4cG9ydHMsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciwgLyogc2VydmVyIG9ubHkgKi9cbiAgc2hhZG93TW9kZSAvKiB2dWUtY2xpIG9ubHkgKi9cbikge1xuICAvLyBWdWUuZXh0ZW5kIGNvbnN0cnVjdG9yIGV4cG9ydCBpbnRlcm9wXG4gIHZhciBvcHRpb25zID0gdHlwZW9mIHNjcmlwdEV4cG9ydHMgPT09ICdmdW5jdGlvbidcbiAgICA/IHNjcmlwdEV4cG9ydHMub3B0aW9uc1xuICAgIDogc2NyaXB0RXhwb3J0c1xuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKHJlbmRlcikge1xuICAgIG9wdGlvbnMucmVuZGVyID0gcmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBzdGF0aWNSZW5kZXJGbnNcbiAgICBvcHRpb25zLl9jb21waWxlZCA9IHRydWVcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGZ1bmN0aW9uYWxUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWVcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9ICdkYXRhLXYtJyArIHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gc2hhZG93TW9kZVxuICAgICAgPyBmdW5jdGlvbiAoKSB7IGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIHRoaXMuJHJvb3QuJG9wdGlvbnMuc2hhZG93Um9vdCkgfVxuICAgICAgOiBpbmplY3RTdHlsZXNcbiAgfVxuXG4gIGlmIChob29rKSB7XG4gICAgaWYgKG9wdGlvbnMuZnVuY3Rpb25hbCkge1xuICAgICAgLy8gZm9yIHRlbXBsYXRlLW9ubHkgaG90LXJlbG9hZCBiZWNhdXNlIGluIHRoYXQgY2FzZSB0aGUgcmVuZGVyIGZuIGRvZXNuJ3RcbiAgICAgIC8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXJcbiAgICAgIG9wdGlvbnMuX2luamVjdFN0eWxlcyA9IGhvb2tcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n");

/***/ }),

/***/ 137:
/*!*****************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Freport%2FEnteringHistory%2FEnteringHistory"} ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _EnteringHistory = _interopRequireDefault(__webpack_require__(/*! ./pages/report/EnteringHistory/EnteringHistory.vue */ 138));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_EnteringHistory.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxrSTtBQUNBQSxVQUFVLENBQUNDLHdCQUFELENBQVYsQyIsImZpbGUiOiIxMzcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9yZXBvcnQvRW50ZXJpbmdIaXN0b3J5L0VudGVyaW5nSGlzdG9yeS52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///137\n");

/***/ }),

/***/ 14:
/*!************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Findex%2Findex"} ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _index = _interopRequireDefault(__webpack_require__(/*! ./pages/index/index.vue */ 15));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_index.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw0RjtBQUNBQSxVQUFVLENBQUNDLGNBQUQsQ0FBVixDIiwiZmlsZSI6IjE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICd1bmktcGFnZXMnO1xuXG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZScgICAgICAgICAgICBcbmltcG9ydCBQYWdlIGZyb20gJy4vcGFnZXMvaW5kZXgvaW5kZXgudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///14\n");

/***/ }),

/***/ 145:
/*!***********************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fcommon%2Fgoods-select%2Fgoods-select"} ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _goodsSelect = _interopRequireDefault(__webpack_require__(/*! ./pages/common/goods-select/goods-select.vue */ 146));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_goodsSelect.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSx3SDtBQUNBQSxVQUFVLENBQUNDLG9CQUFELENBQVYsQyIsImZpbGUiOiIxNDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9jb21tb24vZ29vZHMtc2VsZWN0L2dvb2RzLXNlbGVjdC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///145\n");

/***/ }),

/***/ 153:
/*!***************************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fcommon%2Fgood_return%2Freturn_detail%2Freturn_detail"} ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _return_detail = _interopRequireDefault(__webpack_require__(/*! ./pages/common/good_return/return_detail/return_detail.vue */ 154));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_return_detail.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSx3STtBQUNBQSxVQUFVLENBQUNDLHNCQUFELENBQVYsQyIsImZpbGUiOiIxNTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9jb21tb24vZ29vZF9yZXR1cm4vcmV0dXJuX2RldGFpbC9yZXR1cm5fZGV0YWlsLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///153\n");

/***/ }),

/***/ 161:
/*!*******************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fcommon%2Fgoods_out%2Fout_detail%2Fout_detail"} ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _out_detail = _interopRequireDefault(__webpack_require__(/*! ./pages/common/goods_out/out_detail/out_detail.vue */ 162));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_out_detail.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw2SDtBQUNBQSxVQUFVLENBQUNDLG1CQUFELENBQVYsQyIsImZpbGUiOiIxNjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9jb21tb24vZ29vZHNfb3V0L291dF9kZXRhaWwvb3V0X2RldGFpbC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///161\n");

/***/ }),

/***/ 169:
/*!**********************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fcommon%2Fgood_confrim%2Fgood_enter%2Fgood_enter"} ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _good_enter = _interopRequireDefault(__webpack_require__(/*! ./pages/common/good_confrim/good_enter/good_enter.vue */ 170));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_good_enter.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxnSTtBQUNBQSxVQUFVLENBQUNDLG1CQUFELENBQVYsQyIsImZpbGUiOiIxNjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9jb21tb24vZ29vZF9jb25mcmltL2dvb2RfZW50ZXIvZ29vZF9lbnRlci52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///169\n");

/***/ }),

/***/ 177:
/*!*********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fstaff%2Fstaff"} ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _staff = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/staff/staff.vue */ 178));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_staff.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxvRztBQUNBQSxVQUFVLENBQUNDLGNBQUQsQ0FBVixDIiwiZmlsZSI6IjE3Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9zdGFmZi9zdGFmZi52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///177\n");

/***/ }),

/***/ 185:
/*!*********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fshops%2Fshops"} ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _shops = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/shops/shops.vue */ 186));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_shops.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxvRztBQUNBQSxVQUFVLENBQUNDLGNBQUQsQ0FBVixDIiwiZmlsZSI6IjE4NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9zaG9wcy9zaG9wcy52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///185\n");

/***/ }),

/***/ 193:
/*!*****************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fwarehouse%2Fwarehouse"} ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _warehouse = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/warehouse/warehouse.vue */ 194));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_warehouse.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxnSDtBQUNBQSxVQUFVLENBQUNDLGtCQUFELENBQVYsQyIsImZpbGUiOiIxOTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9tYW5hZ2Uvd2FyZWhvdXNlL3dhcmVob3VzZS52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///193\n");

/***/ }),

/***/ 2:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDOztBQUU1QyIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),

/***/ 20:
/*!***********************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/utils/common.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni, __f__) {var _bmob = _interopRequireDefault(__webpack_require__(/*! @/utils/bmob.js */ 10));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nmodule.exports = {\n  //清除缓存\n  handleData: function handleData() {\n    uni.removeStorageSync(\"warehouse\");\n    uni.removeStorageSync(\"stock\");\n    uni.removeStorageSync(\"custom\");\n    uni.removeStorageSync(\"now_product\");\n    uni.removeStorageSync(\"category\");\n    uni.removeStorageSync(\"class_user\");\n    uni.removeStorageSync(\"second_class\");\n  },\n\n  //日志功能\n  log: function log(_log, type, id) {\n    var pointer = _bmob.default.Pointer('_User');\n    var userid = pointer.set(uni.getStorageSync(\"uid\"));\n\n    var query = _bmob.default.Query('logs');\n    query.set(\"parent\", userid);\n    query.set(\"log\", _log);\n    query.set(\"detail_id\", id);\n    query.set(\"type\", type);\n    query.save().then(function (res) {\n      console.log(__f__(res, \" at utils\\\\common.js:26\"));\n    }).catch(function (err) {\n      console.log(__f__(err, \" at utils\\\\common.js:28\"));\n    });\n  },\n\n  //记录门店的出库数量\n  record_shopOut: function record_shopOut(id, have_out) {\n    console.log(__f__(id, have_out, \" at utils\\\\common.js:34\"));\n    var query = _bmob.default.Query('shops');\n    query.set('id', id); //需要修改的objectId\n    query.set('have_out', have_out);\n    query.save().then(function (res) {\n      console.log(__f__(res, \" at utils\\\\common.js:39\"));\n    }).catch(function (err) {\n      console.log(__f__(err, \" at utils\\\\common.js:41\"));\n    });\n  },\n\n  //记录员工的出库数量\n  record_staffOut: function record_staffOut(have_out) {\n    console.log(__f__(have_out, uni.getStorageSync(\"user\").have_out, \" at utils\\\\common.js:47\"));\n    if (uni.getStorageSync(\"identity\") == 1) {} else {\n      var query = _bmob.default.Query('staffs');\n      query.set('id', uni.getStorageSync(\"user\").objectId); //需要修改的objectId\n      query.set('have_out', have_out + uni.getStorageSync(\"user\").have_out);\n      query.save().then(function (res) {\n        console.log(__f__(res, \" at utils\\\\common.js:53\"));\n      }).catch(function (err) {\n        console.log(__f__(err, \" at utils\\\\common.js:55\"));\n      });\n    }\n\n  },\n\n  //获得库存成本和总库存\n  get_allCost: function get_allCost() {\n    var userid = uni.getStorageSync(\"uid\");\n    console.log(__f__(userid, \" at utils\\\\common.js:64\"));\n    var query = _bmob.default.Query(\"Goods\");\n    query.equalTo(\"userId\", \"==\", userid);\n    query.find().then(function (res) {\n      console.log(__f__(res, \" at utils\\\\common.js:68\"));\n      var reserve_money = 0;\n      var all_reserve = 0;var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {\n        for (var _iterator = res[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var item = _step.value;\n          console.log(__f__(item, \" at utils\\\\common.js:72\"));\n          reserve_money += Number(item.costPrice) * item.reserve;\n          all_reserve += item.reserve;\n        }} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return != null) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}\n    });\n  },\n\n  //获取时间\n  getDay: function getDay(day, is_full) {\n    var that = this;\n    var today = new Date();\n    var targetday_milliseconds = today.getTime() + 1000 * 60 * 60 * 24 * day;\n    today.setTime(targetday_milliseconds);\n    var tYear = today.getFullYear();\n    var tMonth = today.getMonth();\n    var tDate = today.getDate();\n    tMonth = that.handleMonth(tMonth + 1);\n    tDate = that.handleMonth(tDate);\n    if (is_full) {\n      return tYear + \"-\" + tMonth + \"-\" + tDate + \" 00:00:00\";\n    } else {\n      return tYear + \"-\" + tMonth + \"-\" + tDate;\n    }\n\n  },\n\n  handleMonth: function handleMonth(month) {\n    var m = month;\n    if (month.toString().length == 1) {\n      m = \"0\" + month;\n    }\n    return m;\n  } };\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 6)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///20\n");

/***/ }),

/***/ 201:
/*!*****************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fwarehouse%2Fadd%2Fadd"} ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _add = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/warehouse/add/add.vue */ 202));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_add.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSx3RztBQUNBQSxVQUFVLENBQUNDLFlBQUQsQ0FBVixDIiwiZmlsZSI6IjIwMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS93YXJlaG91c2UvYWRkL2FkZC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///201\n");

/***/ }),

/***/ 209:
/*!*************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fshops%2Fadd%2Fadd"} ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _add = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/shops/add/add.vue */ 210));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_add.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxvRztBQUNBQSxVQUFVLENBQUNDLFlBQUQsQ0FBVixDIiwiZmlsZSI6IjIwOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9zaG9wcy9hZGQvYWRkLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///209\n");

/***/ }),

/***/ 217:
/*!*************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fstaff%2Fadd%2Fadd"} ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _add = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/staff/add/add.vue */ 218));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_add.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxvRztBQUNBQSxVQUFVLENBQUNDLFlBQUQsQ0FBVixDIiwiZmlsZSI6IjIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9zdGFmZi9hZGQvYWRkLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///217\n");

/***/ }),

/***/ 225:
/*!***********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmine%2Fsetting%2Fsetting"} ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _setting = _interopRequireDefault(__webpack_require__(/*! ./pages/mine/setting/setting.vue */ 226));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_setting.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSx3RztBQUNBQSxVQUFVLENBQUNDLGdCQUFELENBQVYsQyIsImZpbGUiOiIyMjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9taW5lL3NldHRpbmcvc2V0dGluZy52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///225\n");

/***/ }),

/***/ 23:
/*!***************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fgood_add%2Fgood_add"} ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _good_add = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/good_add/good_add.vue */ 24));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_good_add.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw0RztBQUNBQSxVQUFVLENBQUNDLGlCQUFELENBQVYsQyIsImZpbGUiOiIyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9nb29kX2FkZC9nb29kX2FkZC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n");

/***/ }),

/***/ 233:
/*!***********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fcustom%2Fcustom"} ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _custom = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/custom/custom.vue */ 234));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_custom.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSx1RztBQUNBQSxVQUFVLENBQUNDLGVBQUQsQ0FBVixDIiwiZmlsZSI6IjIzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9jdXN0b20vY3VzdG9tLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///233\n");

/***/ }),

/***/ 241:
/*!**************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fcustom%2Fadd%2Fadd"} ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _add = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/custom/add/add.vue */ 242));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_add.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxxRztBQUNBQSxVQUFVLENBQUNDLFlBQUQsQ0FBVixDIiwiZmlsZSI6IjI0MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9jdXN0b20vYWRkL2FkZC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///241\n");

/***/ }),

/***/ 249:
/*!*******************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Foperations%2Foperations"} ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _operations = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/operations/operations.vue */ 250));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_operations.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxtSDtBQUNBQSxVQUFVLENBQUNDLG1CQUFELENBQVYsQyIsImZpbGUiOiIyNDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9tYW5hZ2Uvb3BlcmF0aW9ucy9vcGVyYXRpb25zLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///249\n");

/***/ }),

/***/ 257:
/*!**************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fmanage"} ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _manage = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/manage.vue */ 258));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_manage.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxnRztBQUNBQSxVQUFVLENBQUNDLGVBQUQsQ0FBVixDIiwiZmlsZSI6IjI1Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9tYW5hZ2UudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///257\n");

/***/ }),

/***/ 265:
/*!***************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fcategory%2Fcategory"} ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _category = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/category/category.vue */ 266));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_category.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw2RztBQUNBQSxVQUFVLENBQUNDLGlCQUFELENBQVYsQyIsImZpbGUiOiIyNjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9tYW5hZ2UvY2F0ZWdvcnkvY2F0ZWdvcnkudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///265\n");

/***/ }),

/***/ 273:
/*!***********************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fcommon%2Fgood_confrim%2Fgood_confrim"} ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _good_confrim = _interopRequireDefault(__webpack_require__(/*! ./pages/common/good_confrim/good_confrim.vue */ 274));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_good_confrim.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSx5SDtBQUNBQSxVQUFVLENBQUNDLHFCQUFELENBQVYsQyIsImZpbGUiOiIyNzMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9jb21tb24vZ29vZF9jb25mcmltL2dvb2RfY29uZnJpbS52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///273\n");

/***/ }),

/***/ 281:
/*!**************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Freport%2Freport"} ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _report = _interopRequireDefault(__webpack_require__(/*! ./pages/report/report.vue */ 282));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_report.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxnRztBQUNBQSxVQUFVLENBQUNDLGVBQUQsQ0FBVixDIiwiZmlsZSI6IjI4MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL3JlcG9ydC9yZXBvcnQudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///281\n");

/***/ }),

/***/ 289:
/*!*****************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Freport%2FEnteringHistory%2Fdetail%2Fdetail"} ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _detail = _interopRequireDefault(__webpack_require__(/*! ./pages/report/EnteringHistory/detail/detail.vue */ 290));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_detail.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSx1SDtBQUNBQSxVQUFVLENBQUNDLGVBQUQsQ0FBVixDIiwiZmlsZSI6IjI4OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL3JlcG9ydC9FbnRlcmluZ0hpc3RvcnkvZGV0YWlsL2RldGFpbC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///289\n");

/***/ }),

/***/ 297:
/*!*****************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fcommon%2Fgoods_out%2Fgoods_out"} ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _goods_out = _interopRequireDefault(__webpack_require__(/*! ./pages/common/goods_out/goods_out.vue */ 298));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_goods_out.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxnSDtBQUNBQSxVQUFVLENBQUNDLGtCQUFELENBQVYsQyIsImZpbGUiOiIyOTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9jb21tb24vZ29vZHNfb3V0L2dvb2RzX291dC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///297\n");

/***/ }),

/***/ 3:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (true) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    {\n      if(vm.$scope && vm.$scope.is){\n        return vm.$scope.is\n      }\n    }\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if ( true && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if ( true && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (true) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n       true && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n     true && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (true) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"development\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (true) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (true) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if ( true && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    true\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if ( true && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (true) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (true) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (true) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n       true && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (true) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (true) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {}\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (true) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if ( true && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n       true && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n       true && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if ( true && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (true) {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (true) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n     true && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if ( true &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (true) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {}\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if ( true && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if ( true && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n       true && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                 true\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : undefined\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (true) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (true) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (true) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (true) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if ( true && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if ( true && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  true\n    ? expOrFn.toString()\n    : undefined;\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n       true && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (true) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          {\n            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn\n                return\n            }\n            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警\n            if(\n                key === 'value' && \n                Array.isArray(vm.$options.behaviors) &&\n                vm.$options.behaviors.indexOf('uni://form-field') !== -1\n              ){\n              return\n            }\n            if(vm._getFormData){\n              return\n            }\n            var $parent = vm.$parent;\n            while($parent){\n              if($parent.__next_tick_pending){\n                return  \n              }\n              $parent = $parent.$parent;\n            }\n          }\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {}\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n     true && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (true) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n       true && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if ( true && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (true) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if ( true &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (true) {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (true) {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (true) {\n      initProxy(vm);\n    } else {}\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    vm.mpHost !== 'mp-toutiao' && initInjections(vm); // resolve injections before data/props  \n    initState(vm);\n    vm.mpHost !== 'mp-toutiao' && initProvide(vm); // resolve provide after data/props\n    vm.mpHost !== 'mp-toutiao' && callHook(vm, 'created');      \n\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if ( true &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if ( true && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if ( true && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (true) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.10';\n\n/**\n * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js\n */\nvar ARRAYTYPE = '[object Array]';\nvar OBJECTTYPE = '[object Object]';\n// const FUNCTIONTYPE = '[object Function]'\n\nfunction diff(current, pre) {\n    var result = {};\n    syncKeys(current, pre);\n    _diff(current, pre, '', result);\n    return result\n}\n\nfunction syncKeys(current, pre) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {\n        if(Object.keys(current).length >= Object.keys(pre).length){\n            for (var key in pre) {\n                var currentValue = current[key];\n                if (currentValue === undefined) {\n                    current[key] = null;\n                } else {\n                    syncKeys(currentValue, pre[key]);\n                }\n            }\n        }\n    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {\n        if (current.length >= pre.length) {\n            pre.forEach(function (item, index) {\n                syncKeys(current[index], item);\n            });\n        }\n    }\n}\n\nfunction _diff(current, pre, path, result) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE) {\n        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {\n            setResult(result, path, current);\n        } else {\n            var loop = function ( key ) {\n                var currentValue = current[key];\n                var preValue = pre[key];\n                var currentType = type(currentValue);\n                var preType = type(preValue);\n                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {\n                    if (currentValue != pre[key]) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    }\n                } else if (currentType == ARRAYTYPE) {\n                    if (preType != ARRAYTYPE) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        if (currentValue.length < preValue.length) {\n                            setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                        } else {\n                            currentValue.forEach(function (item, index) {\n                                _diff(item, preValue[index], (path == '' ? '' : path + \".\") + key + '[' + index + ']', result);\n                            });\n                        }\n                    }\n                } else if (currentType == OBJECTTYPE) {\n                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        for (var subKey in currentValue) {\n                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + \".\") + key + '.' + subKey, result);\n                        }\n                    }\n                }\n            };\n\n            for (var key in current) loop( key );\n        }\n    } else if (rootCurrentType == ARRAYTYPE) {\n        if (rootPreType != ARRAYTYPE) {\n            setResult(result, path, current);\n        } else {\n            if (current.length < pre.length) {\n                setResult(result, path, current);\n            } else {\n                current.forEach(function (item, index) {\n                    _diff(item, pre[index], path + '[' + index + ']', result);\n                });\n            }\n        }\n    } else {\n        setResult(result, path, current);\n    }\n}\n\nfunction setResult(result, k, v) {\n    // if (type(v) != FUNCTIONTYPE) {\n        result[k] = v;\n    // }\n}\n\nfunction type(obj) {\n    return Object.prototype.toString.call(obj)\n}\n\n/*  */\r\n\r\nfunction flushCallbacks$1(vm) {\r\n    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {\r\n        if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n            var mpInstance = vm.$scope;\r\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\r\n                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');\r\n        }\r\n        var copies = vm.__next_tick_callbacks.slice(0);\r\n        vm.__next_tick_callbacks.length = 0;\r\n        for (var i = 0; i < copies.length; i++) {\r\n            copies[i]();\r\n        }\r\n    }\r\n}\r\n\r\nfunction hasRenderWatcher(vm) {\r\n    return queue.find(function (watcher) { return vm._watcher === watcher; })\r\n}\r\n\r\nfunction nextTick$1(vm, cb) {\r\n    //1.nextTick 之前 已 setData 且 setData 还未回调完成\r\n    //2.nextTick 之前存在 render watcher\r\n    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {\n        if(Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\n                ']:nextVueTick');\n        }\r\n        return nextTick(cb, vm)\r\n    }else{\n        if(Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance$1 = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +\n                ']:nextMPTick');\n        }\n    }\r\n    var _resolve;\r\n    if (!vm.__next_tick_callbacks) {\r\n        vm.__next_tick_callbacks = [];\r\n    }\r\n    vm.__next_tick_callbacks.push(function () {\r\n        if (cb) {\r\n            try {\r\n                cb.call(vm);\r\n            } catch (e) {\r\n                handleError(e, vm, 'nextTick');\r\n            }\r\n        } else if (_resolve) {\r\n            _resolve(vm);\r\n        }\r\n    });\r\n    // $flow-disable-line\r\n    if (!cb && typeof Promise !== 'undefined') {\r\n        return new Promise(function (resolve) {\r\n            _resolve = resolve;\r\n        })\r\n    }\r\n}\n\n/*  */\r\n\r\nfunction cloneWithData(vm) {\r\n  // 确保当前 vm 所有数据被同步\r\n  var ret = Object.create(null);\r\n  var dataKeys = [].concat(\r\n    Object.keys(vm._data || {}),\r\n    Object.keys(vm._computedWatchers || {}));\r\n\r\n  dataKeys.reduce(function(ret, key) {\r\n    ret[key] = vm[key];\r\n    return ret\r\n  }, ret);\r\n  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据\r\n  Object.assign(ret, vm.$mp.data || {});\r\n  if (\r\n    Array.isArray(vm.$options.behaviors) &&\r\n    vm.$options.behaviors.indexOf('uni://form-field') !== -1\r\n  ) { //form-field\r\n    ret['name'] = vm.name;\r\n    ret['value'] = vm.value;\r\n  }\r\n\r\n  return JSON.parse(JSON.stringify(ret))\r\n}\r\n\r\nvar patch = function(oldVnode, vnode) {\n  var this$1 = this;\n\r\n  if (vnode === null) { //destroy\r\n    return\r\n  }\r\n  if (this.mpType === 'page' || this.mpType === 'component') {\r\n    var mpInstance = this.$scope;\r\n    var data = Object.create(null);\r\n    try {\r\n      data = cloneWithData(this);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    data.__webviewId__ = mpInstance.data.__webviewId__;\r\n    var mpData = Object.create(null);\r\n    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据\r\n      mpData[key] = mpInstance.data[key];\r\n    });\r\n    var diffData = diff(data, mpData);\r\n    if (Object.keys(diffData).length) {\r\n      if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +\r\n          ']差量更新',\r\n          JSON.stringify(diffData));\r\n      }\r\n      this.__next_tick_pending = true;\r\n      mpInstance.setData(diffData, function () {\r\n        this$1.__next_tick_pending = false;\r\n        flushCallbacks$1(this$1);\r\n      });\r\n    } else {\r\n      flushCallbacks$1(this);\r\n    }\r\n  }\r\n};\n\n/*  */\n\nfunction createEmptyRender() {\n\n}\n\nfunction mountComponent$1(\n  vm,\n  el,\n  hydrating\n) {\n  if (!vm.mpType) {//main.js 中的 new Vue\n    return vm\n  }\n  if (vm.mpType === 'app') {\n    vm.$options.render = createEmptyRender;\n  }\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyRender;\n    if (true) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  \n  vm.mpHost !== 'mp-toutiao' && callHook(vm, 'beforeMount');\n\n  var updateComponent = function () {\n    vm._update(vm._render(), hydrating);\n  };\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before() {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n  return vm\n}\n\n/*  */\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/*  */\r\n\r\nvar MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];\r\n\r\nfunction getTarget(obj, path) {\r\n  var parts = path.split('.');\r\n  var key = parts[0];\r\n  if (key.indexOf('__$n') === 0) { //number index\r\n    key = parseInt(key.replace('__$n', ''));\r\n  }\r\n  if (parts.length === 1) {\r\n    return obj[key]\r\n  }\r\n  return getTarget(obj[key], parts.slice(1).join('.'))\r\n}\r\n\r\nfunction internalMixin(Vue) {\r\n\r\n  Vue.config.errorHandler = function(err) {\r\n    console.error(err);\r\n  };\r\n\r\n  var oldEmit = Vue.prototype.$emit;\r\n\r\n  Vue.prototype.$emit = function(event) {\r\n    if (this.$scope && event) {\r\n      this.$scope['triggerEvent'](event, {\r\n        __args__: toArray(arguments, 1)\r\n      });\r\n    }\r\n    return oldEmit.apply(this, arguments)\r\n  };\r\n\r\n  Vue.prototype.$nextTick = function(fn) {\r\n    return nextTick$1(this, fn)\r\n  };\r\n\r\n  MP_METHODS.forEach(function (method) {\r\n    Vue.prototype[method] = function(args) {\r\n      if (this.$scope) {\r\n        return this.$scope[method](args)\r\n      }\r\n    };\r\n  });\r\n\r\n  Vue.prototype.__init_provide = initProvide;\r\n\r\n  Vue.prototype.__init_injections = initInjections;\r\n\r\n  Vue.prototype.__call_hook = function(hook, args) {\r\n    var vm = this;\r\n    // #7573 disable dep collection when invoking lifecycle hooks\r\n    pushTarget();\r\n    var handlers = vm.$options[hook];\r\n    var info = hook + \" hook\";\r\n    var ret;\r\n    if (handlers) {\r\n      for (var i = 0, j = handlers.length; i < j; i++) {\r\n        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);\r\n      }\r\n    }\r\n    if (vm._hasHookEvent) {\r\n      vm.$emit('hook:' + hook);\r\n    }\r\n    popTarget();\r\n    return ret\r\n  };\r\n\r\n  Vue.prototype.__set_model = function(target, key, value, modifiers) {\r\n    if (Array.isArray(modifiers)) {\r\n      if (modifiers.indexOf('trim') !== -1) {\r\n        value = value.trim();\r\n      }\r\n      if (modifiers.indexOf('number') !== -1) {\r\n        value = this._n(value);\r\n      }\r\n    }\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__set_sync = function(target, key, value) {\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__get_orig = function(item) {\r\n    if (isPlainObject(item)) {\r\n      return item['$orig'] || item\r\n    }\r\n    return item\r\n  };\r\n\r\n  Vue.prototype.__get_value = function(dataPath, target) {\r\n    return getTarget(target || this, dataPath)\r\n  };\r\n\r\n\r\n  Vue.prototype.__get_class = function(dynamicClass, staticClass) {\r\n    return renderClass(staticClass, dynamicClass)\r\n  };\r\n\r\n  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {\r\n    if (!dynamicStyle && !staticStyle) {\r\n      return ''\r\n    }\r\n    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);\r\n    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;\r\n    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + \":\" + (styleObj[name])); }).join(';')\r\n  };\r\n\r\n  Vue.prototype.__map = function(val, iteratee) {\r\n    //TODO 暂不考虑 string,number\r\n    var ret, i, l, keys, key;\r\n    if (Array.isArray(val)) {\r\n      ret = new Array(val.length);\r\n      for (i = 0, l = val.length; i < l; i++) {\r\n        ret[i] = iteratee(val[i], i);\r\n      }\r\n      return ret\r\n    } else if (isObject(val)) {\r\n      keys = Object.keys(val);\r\n      ret = Object.create(null);\r\n      for (i = 0, l = keys.length; i < l; i++) {\r\n        key = keys[i];\r\n        ret[key] = iteratee(val[key], key, i);\r\n      }\r\n      return ret\r\n    }\r\n    return []\r\n  };\r\n\r\n}\n\n/*  */\r\n\r\nvar LIFECYCLE_HOOKS$1 = [\r\n    //App\r\n    'onLaunch',\r\n    'onShow',\r\n    'onHide',\r\n    'onUniNViewMessage',\n    'onError',\r\n    //Page\r\n    'onLoad',\r\n    // 'onShow',\r\n    'onReady',\r\n    // 'onHide',\r\n    'onUnload',\r\n    'onPullDownRefresh',\r\n    'onReachBottom',\r\n    'onTabItemTap',\r\n    'onShareAppMessage',\n    'onResize',\r\n    'onPageScroll',\r\n    'onNavigationBarButtonTap',\r\n    'onBackPress',\r\n    'onNavigationBarSearchInputChanged',\r\n    'onNavigationBarSearchInputConfirmed',\r\n    'onNavigationBarSearchInputClicked',\r\n    //Component\r\n    // 'onReady', // 兼容旧版本，应该移除该事件\r\n    'onPageShow',\r\n    'onPageHide',\r\n    'onPageResize'\r\n];\r\nfunction lifecycleMixin$1(Vue) {\r\n\r\n    //fixed vue-class-component\r\n    var oldExtend = Vue.extend;\r\n    Vue.extend = function(extendOptions) {\r\n        extendOptions = extendOptions || {};\r\n\r\n        var methods = extendOptions.methods;\r\n        if (methods) {\r\n            Object.keys(methods).forEach(function (methodName) {\r\n                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {\r\n                    extendOptions[methodName] = methods[methodName];\r\n                    delete methods[methodName];\r\n                }\r\n            });\r\n        }\r\n\r\n        return oldExtend.call(this, extendOptions)\r\n    };\r\n\r\n    var strategies = Vue.config.optionMergeStrategies;\r\n    var mergeHook = strategies.created;\r\n    LIFECYCLE_HOOKS$1.forEach(function (hook) {\r\n        strategies[hook] = mergeHook;\r\n    });\r\n\r\n    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;\r\n}\n\n/*  */\r\n\n// install platform patch function\r\nVue.prototype.__patch__ = patch;\r\n\r\n// public mount method\r\nVue.prototype.$mount = function(\r\n    el ,\r\n    hydrating \r\n) {\r\n    return mountComponent$1(this, el, hydrating)\r\n};\r\n\r\nlifecycleMixin$1(Vue);\r\ninternalMixin(Vue);\n\n/*  */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),

/***/ 305:
/*!*********************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fcommon%2Fgood_return%2Fgood_return"} ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _good_return = _interopRequireDefault(__webpack_require__(/*! ./pages/common/good_return/good_return.vue */ 306));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_good_return.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxzSDtBQUNBQSxVQUFVLENBQUNDLG9CQUFELENBQVYsQyIsImZpbGUiOiIzMDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9jb21tb24vZ29vZF9yZXR1cm4vZ29vZF9yZXR1cm4udnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///305\n");

/***/ }),

/***/ 31:
/*!**************************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fcustom%2Fcustom_detail%2Fhistory%2Fhistory"} ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _history = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/custom/custom_detail/history/history.vue */ 32));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_history.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw4SDtBQUNBQSxVQUFVLENBQUNDLGdCQUFELENBQVYsQyIsImZpbGUiOiIzMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9jdXN0b20vY3VzdG9tX2RldGFpbC9oaXN0b3J5L2hpc3RvcnkudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///31\n");

/***/ }),

/***/ 313:
/*!*******************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fcommon%2Fgood_count%2Fgood_count"} ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _good_count = _interopRequireDefault(__webpack_require__(/*! ./pages/common/good_count/good_count.vue */ 314));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_good_count.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxtSDtBQUNBQSxVQUFVLENBQUNDLG1CQUFELENBQVYsQyIsImZpbGUiOiIzMTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9jb21tb24vZ29vZF9jb3VudC9nb29kX2NvdW50LnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///313\n");

/***/ }),

/***/ 321:
/*!************************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fcommon%2Fgood_count%2Fcount_detail%2Fcount_detail"} ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _count_detail = _interopRequireDefault(__webpack_require__(/*! ./pages/common/good_count/count_detail/count_detail.vue */ 322));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_count_detail.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxvSTtBQUNBQSxVQUFVLENBQUNDLHFCQUFELENBQVYsQyIsImZpbGUiOiIzMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9jb21tb24vZ29vZF9jb3VudC9jb3VudF9kZXRhaWwvY291bnRfZGV0YWlsLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///321\n");

/***/ }),

/***/ 329:
/*!*************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmine%2Fabout_us%2Fabout_us"} ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _about_us = _interopRequireDefault(__webpack_require__(/*! ./pages/mine/about_us/about_us.vue */ 330));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_about_us.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSwyRztBQUNBQSxVQUFVLENBQUNDLGlCQUFELENBQVYsQyIsImZpbGUiOiIzMjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9taW5lL2Fib3V0X3VzL2Fib3V0X3VzLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///329\n");

/***/ }),

/***/ 337:
/*!***************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmine%2Fhome_page%2Fhome_page"} ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _home_page = _interopRequireDefault(__webpack_require__(/*! ./pages/mine/home_page/home_page.vue */ 338));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_home_page.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw4RztBQUNBQSxVQUFVLENBQUNDLGtCQUFELENBQVYsQyIsImZpbGUiOiIzMzcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9taW5lL2hvbWVfcGFnZS9ob21lX3BhZ2UudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///337\n");

/***/ }),

/***/ 345:
/*!****************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fstaff_landing%2Fstaff_landing"} ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _staff_landing = _interopRequireDefault(__webpack_require__(/*! ./pages/staff_landing/staff_landing.vue */ 346));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_staff_landing.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxxSDtBQUNBQSxVQUFVLENBQUNDLHNCQUFELENBQVYsQyIsImZpbGUiOiIzNDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9zdGFmZl9sYW5kaW5nL3N0YWZmX2xhbmRpbmcudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///345\n");

/***/ }),

/***/ 353:
/*!*******************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmine%2Fwarning_log%2Fwarning_log"} ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _warning_log = _interopRequireDefault(__webpack_require__(/*! ./pages/mine/warning_log/warning_log.vue */ 354));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_warning_log.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxvSDtBQUNBQSxVQUFVLENBQUNDLG9CQUFELENBQVYsQyIsImZpbGUiOiIzNTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9taW5lL3dhcm5pbmdfbG9nL3dhcm5pbmdfbG9nLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///353\n");

/***/ }),

/***/ 361:
/*!***********************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fshops%2Fstaff_in%2Fstaff_in"} ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _staff_in = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/shops/staff_in/staff_in.vue */ 362));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_staff_in.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxtSDtBQUNBQSxVQUFVLENBQUNDLGlCQUFELENBQVYsQyIsImZpbGUiOiIzNjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9tYW5hZ2Uvc2hvcHMvc3RhZmZfaW4vc3RhZmZfaW4udnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///361\n");

/***/ }),

/***/ 369:
/*!*******************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fshops%2Frecord%2Frecord"} ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _record = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/shops/record/record.vue */ 370));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_record.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw2RztBQUNBQSxVQUFVLENBQUNDLGVBQUQsQ0FBVixDIiwiZmlsZSI6IjM2OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9zaG9wcy9yZWNvcmQvcmVjb3JkLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///369\n");

/***/ }),

/***/ 377:
/*!***************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fregister%2Fuser_protocol%2Fuser_protocol"} ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _user_protocol = _interopRequireDefault(__webpack_require__(/*! ./pages/register/user_protocol/user_protocol.vue */ 378));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_user_protocol.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw4SDtBQUNBQSxVQUFVLENBQUNDLHNCQUFELENBQVYsQyIsImZpbGUiOiIzNzcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9yZWdpc3Rlci91c2VyX3Byb3RvY29sL3VzZXJfcHJvdG9jb2wudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///377\n");

/***/ }),

/***/ 385:
/*!*************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmine%2Fupdate_history%2Fupdate_history"} ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _update_history = _interopRequireDefault(__webpack_require__(/*! ./pages/mine/update_history/update_history.vue */ 386));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_update_history.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw2SDtBQUNBQSxVQUFVLENBQUNDLHVCQUFELENBQVYsQyIsImZpbGUiOiIzODUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9taW5lL3VwZGF0ZV9oaXN0b3J5L3VwZGF0ZV9oaXN0b3J5LnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///385\n");

/***/ }),

/***/ 39:
/*!*********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fgoods%2Fgoods"} ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _goods = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/goods/goods.vue */ 40));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_goods.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxtRztBQUNBQSxVQUFVLENBQUNDLGNBQUQsQ0FBVixDIiwiZmlsZSI6IjM5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICd1bmktcGFnZXMnO1xuXG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZScgICAgICAgICAgICBcbmltcG9ydCBQYWdlIGZyb20gJy4vcGFnZXMvbWFuYWdlL2dvb2RzL2dvb2RzLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///39\n");

/***/ }),

/***/ 393:
/*!****************************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fcustom%2Fproducer_detail%2Fhistory%2Fhistory"} ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _history = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/custom/producer_detail/history/history.vue */ 394));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_history.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxpSTtBQUNBQSxVQUFVLENBQUNDLGdCQUFELENBQVYsQyIsImZpbGUiOiIzOTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9tYW5hZ2UvY3VzdG9tL3Byb2R1Y2VyX2RldGFpbC9oaXN0b3J5L2hpc3RvcnkudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///393\n");

/***/ }),

/***/ 4:
/*!******************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/pages.json ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI0LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),

/***/ 401:
/*!**************************************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fcustom%2Fproducer_detail%2Fdebt_history%2Fdebt_history"} ***!
  \**************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _debt_history = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/custom/producer_detail/debt_history/debt_history.vue */ 402));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_debt_history.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxnSjtBQUNBQSxVQUFVLENBQUNDLHFCQUFELENBQVYsQyIsImZpbGUiOiI0MDEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7XG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJyAgICAgICAgICAgIFxuaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlcy9tYW5hZ2UvY3VzdG9tL3Byb2R1Y2VyX2RldGFpbC9kZWJ0X2hpc3RvcnkvZGVidF9oaXN0b3J5LnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///401\n");

/***/ }),

/***/ 47:
/*!************************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fgood_det%2Fcustom_detail%2Fcustom_detail"} ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _custom_detail = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/good_det/custom_detail/custom_detail.vue */ 48));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_custom_detail.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxvSTtBQUNBQSxVQUFVLENBQUNDLHNCQUFELENBQVYsQyIsImZpbGUiOiI0Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9nb29kX2RldC9jdXN0b21fZGV0YWlsL2N1c3RvbV9kZXRhaWwudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///47\n");

/***/ }),

/***/ 477:
/*!***************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-qrcode/qrcode.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var QRCode = {};\n(function () {\n  /**\r\n               * 获取单个字符的utf8编码\r\n               * unicode BMP平面约65535个字符\r\n               * @param {num} code\r\n               * return {array}\r\n               */\n  function unicodeFormat8(code) {\n    // 1 byte\n    var c0, c1, c2;\n    if (code < 128) {\n      return [code];\n      // 2 bytes\n    } else if (code < 2048) {\n      c0 = 192 + (code >> 6);\n      c1 = 128 + (code & 63);\n      return [c0, c1];\n      // 3 bytes\n    } else {\n      c0 = 224 + (code >> 12);\n      c1 = 128 + (code >> 6 & 63);\n      c2 = 128 + (code & 63);\n      return [c0, c1, c2];\n    }\n  }\n  /**\r\n     * 获取字符串的utf8编码字节串\r\n     * @param {string} string\r\n     * @return {array}\r\n     */\n  function getUTF8Bytes(string) {\n    var utf8codes = [];\n    for (var i = 0; i < string.length; i++) {\n      var code = string.charCodeAt(i);\n      var utf8 = unicodeFormat8(code);\n      for (var j = 0; j < utf8.length; j++) {\n        utf8codes.push(utf8[j]);\n      }\n    }\n    return utf8codes;\n  }\n  /**\r\n     * 二维码算法实现\r\n     * @param {string} data              要编码的信息字符串\r\n     * @param {num} errorCorrectLevel 纠错等级\r\n     */\n  function QRCodeAlg(data, errorCorrectLevel) {\n    this.typeNumber = -1; //版本\n    this.errorCorrectLevel = errorCorrectLevel;\n    this.modules = null; //二维矩阵，存放最终结果\n    this.moduleCount = 0; //矩阵大小\n    this.dataCache = null; //数据缓存\n    this.rsBlocks = null; //版本数据信息\n    this.totalDataCount = -1; //可使用的数据量\n    this.data = data;\n    this.utf8bytes = getUTF8Bytes(data);\n    this.make();\n  }\n  QRCodeAlg.prototype = {\n    constructor: QRCodeAlg,\n    /**\r\n                             * 获取二维码矩阵大小\r\n                             * @return {num} 矩阵大小\r\n                             */\n    getModuleCount: function getModuleCount() {\n      return this.moduleCount;\n    },\n    /**\r\n        * 编码\r\n        */\n    make: function make() {\n      this.getRightType();\n      this.dataCache = this.createData();\n      this.createQrcode();\n    },\n    /**\r\n        * 设置二位矩阵功能图形\r\n        * @param  {bool} test 表示是否在寻找最好掩膜阶段\r\n        * @param  {num} maskPattern 掩膜的版本\r\n        */\n    makeImpl: function makeImpl(maskPattern) {\n      this.moduleCount = this.typeNumber * 4 + 17;\n      this.modules = new Array(this.moduleCount);\n      for (var row = 0; row < this.moduleCount; row++) {\n        this.modules[row] = new Array(this.moduleCount);\n      }\n      this.setupPositionProbePattern(0, 0);\n      this.setupPositionProbePattern(this.moduleCount - 7, 0);\n      this.setupPositionProbePattern(0, this.moduleCount - 7);\n      this.setupPositionAdjustPattern();\n      this.setupTimingPattern();\n      this.setupTypeInfo(true, maskPattern);\n      if (this.typeNumber >= 7) {\n        this.setupTypeNumber(true);\n      }\n      this.mapData(this.dataCache, maskPattern);\n    },\n    /**\r\n        * 设置二维码的位置探测图形\r\n        * @param  {num} row 探测图形的中心横坐标\r\n        * @param  {num} col 探测图形的中心纵坐标\r\n        */\n    setupPositionProbePattern: function setupPositionProbePattern(row, col) {\n      for (var r = -1; r <= 7; r++) {\n        if (row + r <= -1 || this.moduleCount <= row + r) continue;\n        for (var c = -1; c <= 7; c++) {\n          if (col + c <= -1 || this.moduleCount <= col + c) continue;\n          if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n            this.modules[row + r][col + c] = true;\n          } else {\n            this.modules[row + r][col + c] = false;\n          }\n        }\n      }\n    },\n    /**\r\n        * 创建二维码\r\n        * @return {[type]} [description]\r\n        */\n    createQrcode: function createQrcode() {\n      var minLostPoint = 0;\n      var pattern = 0;\n      var bestModules = null;\n      for (var i = 0; i < 8; i++) {\n        this.makeImpl(i);\n        var lostPoint = QRUtil.getLostPoint(this);\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n          bestModules = this.modules;\n        }\n      }\n      this.modules = bestModules;\n      this.setupTypeInfo(false, pattern);\n      if (this.typeNumber >= 7) {\n        this.setupTypeNumber(false);\n      }\n    },\n    /**\r\n        * 设置定位图形\r\n        * @return {[type]} [description]\r\n        */\n    setupTimingPattern: function setupTimingPattern() {\n      for (var r = 8; r < this.moduleCount - 8; r++) {\n        if (this.modules[r][6] != null) {\n          continue;\n        }\n        this.modules[r][6] = r % 2 == 0;\n        if (this.modules[6][r] != null) {\n          continue;\n        }\n        this.modules[6][r] = r % 2 == 0;\n      }\n    },\n    /**\r\n        * 设置矫正图形\r\n        * @return {[type]} [description]\r\n        */\n    setupPositionAdjustPattern: function setupPositionAdjustPattern() {\n      var pos = QRUtil.getPatternPosition(this.typeNumber);\n      for (var i = 0; i < pos.length; i++) {\n        for (var j = 0; j < pos.length; j++) {\n          var row = pos[i];\n          var col = pos[j];\n          if (this.modules[row][col] != null) {\n            continue;\n          }\n          for (var r = -2; r <= 2; r++) {\n            for (var c = -2; c <= 2; c++) {\n              if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n                this.modules[row + r][col + c] = true;\n              } else {\n                this.modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    },\n    /**\r\n        * 设置版本信息（7以上版本才有）\r\n        * @param  {bool} test 是否处于判断最佳掩膜阶段\r\n        * @return {[type]}      [description]\r\n        */\n    setupTypeNumber: function setupTypeNumber(test) {\n      var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n      for (var i = 0; i < 18; i++) {\n        var mod = !test && (bits >> i & 1) == 1;\n        this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n        this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    },\n    /**\r\n        * 设置格式信息（纠错等级和掩膜版本）\r\n        * @param  {bool} test\r\n        * @param  {num} maskPattern 掩膜版本\r\n        * @return {}\r\n        */\n    setupTypeInfo: function setupTypeInfo(test, maskPattern) {\n      var data = QRErrorCorrectLevel[this.errorCorrectLevel] << 3 | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n      // vertical\n      for (var i = 0; i < 15; i++) {\n        var mod = !test && (bits >> i & 1) == 1;\n        if (i < 6) {\n          this.modules[i][8] = mod;\n        } else if (i < 8) {\n          this.modules[i + 1][8] = mod;\n        } else {\n          this.modules[this.moduleCount - 15 + i][8] = mod;\n        }\n        // horizontal\n        var mod = !test && (bits >> i & 1) == 1;\n        if (i < 8) {\n          this.modules[8][this.moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          this.modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          this.modules[8][15 - i - 1] = mod;\n        }\n      }\n      // fixed module\n      this.modules[this.moduleCount - 8][8] = !test;\n    },\n    /**\r\n        * 数据编码\r\n        * @return {[type]} [description]\r\n        */\n    createData: function createData() {\n      var buffer = new QRBitBuffer();\n      var lengthBits = this.typeNumber > 9 ? 16 : 8;\n      buffer.put(4, 4); //添加模式\n      buffer.put(this.utf8bytes.length, lengthBits);\n      for (var i = 0, l = this.utf8bytes.length; i < l; i++) {\n        buffer.put(this.utf8bytes[i], 8);\n      }\n      if (buffer.length + 4 <= this.totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n      // padding\n      while (buffer.length % 8 != 0) {\n        buffer.putBit(false);\n      }\n      // padding\n      while (true) {\n        if (buffer.length >= this.totalDataCount * 8) {\n          break;\n        }\n        buffer.put(QRCodeAlg.PAD0, 8);\n        if (buffer.length >= this.totalDataCount * 8) {\n          break;\n        }\n        buffer.put(QRCodeAlg.PAD1, 8);\n      }\n      return this.createBytes(buffer);\n    },\n    /**\r\n        * 纠错码编码\r\n        * @param  {buffer} buffer 数据编码\r\n        * @return {[type]}\r\n        */\n    createBytes: function createBytes(buffer) {\n      var offset = 0;\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n      var length = this.rsBlock.length / 3;\n      var rsBlocks = new Array();\n      for (var i = 0; i < length; i++) {\n        var count = this.rsBlock[i * 3 + 0];\n        var totalCount = this.rsBlock[i * 3 + 1];\n        var dataCount = this.rsBlock[i * 3 + 2];\n        for (var j = 0; j < count; j++) {\n          rsBlocks.push([dataCount, totalCount]);\n        }\n      }\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n      for (var r = 0; r < rsBlocks.length; r++) {\n        var dcCount = rsBlocks[r][0];\n        var ecCount = rsBlocks[r][1] - dcCount;\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n        dcdata[r] = new Array(dcCount);\n        for (var i = 0; i < dcdata[r].length; i++) {\n          dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n        }\n        offset += dcCount;\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i++) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n        }\n      }\n      var data = new Array(this.totalDataCount);\n      var index = 0;\n      for (var i = 0; i < maxDcCount; i++) {\n        for (var r = 0; r < rsBlocks.length; r++) {\n          if (i < dcdata[r].length) {\n            data[index++] = dcdata[r][i];\n          }\n        }\n      }\n      for (var i = 0; i < maxEcCount; i++) {\n        for (var r = 0; r < rsBlocks.length; r++) {\n          if (i < ecdata[r].length) {\n            data[index++] = ecdata[r][i];\n          }\n        }\n      }\n      return data;\n\n    },\n    /**\r\n        * 布置模块，构建最终信息\r\n        * @param  {} data\r\n        * @param  {} maskPattern\r\n        * @return {}\r\n        */\n    mapData: function mapData(data, maskPattern) {\n      var inc = -1;\n      var row = this.moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n        if (col == 6) col--;\n        while (true) {\n          for (var c = 0; c < 2; c++) {\n            if (this.modules[row][col - c] == null) {\n              var dark = false;\n              if (byteIndex < data.length) {\n                dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n              }\n              var mask = QRUtil.getMask(maskPattern, row, col - c);\n              if (mask) {\n                dark = !dark;\n              }\n              this.modules[row][col - c] = dark;\n              bitIndex--;\n              if (bitIndex == -1) {\n                byteIndex++;\n                bitIndex = 7;\n              }\n            }\n          }\n          row += inc;\n          if (row < 0 || this.moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    } };\n\n  /**\r\n          * 填充字段\r\n          */\n  QRCodeAlg.PAD0 = 0xEC;\n  QRCodeAlg.PAD1 = 0x11;\n  //---------------------------------------------------------------------\n  // 纠错等级对应的编码\n  //---------------------------------------------------------------------\n  var QRErrorCorrectLevel = [1, 0, 3, 2];\n  //---------------------------------------------------------------------\n  // 掩膜版本\n  //---------------------------------------------------------------------\n  var QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7 };\n\n  //---------------------------------------------------------------------\n  // 工具类\n  //---------------------------------------------------------------------\n  var QRUtil = {\n    /*\r\n                 每个版本矫正图形的位置\r\n                  */\n    PATTERN_POSITION_TABLE: [\n    [],\n    [6, 18],\n    [6, 22],\n    [6, 26],\n    [6, 30],\n    [6, 34],\n    [6, 22, 38],\n    [6, 24, 42],\n    [6, 26, 46],\n    [6, 28, 50],\n    [6, 30, 54],\n    [6, 32, 58],\n    [6, 34, 62],\n    [6, 26, 46, 66],\n    [6, 26, 48, 70],\n    [6, 26, 50, 74],\n    [6, 30, 54, 78],\n    [6, 30, 56, 82],\n    [6, 30, 58, 86],\n    [6, 34, 62, 90],\n    [6, 28, 50, 72, 94],\n    [6, 26, 50, 74, 98],\n    [6, 30, 54, 78, 102],\n    [6, 28, 54, 80, 106],\n    [6, 32, 58, 84, 110],\n    [6, 30, 58, 86, 114],\n    [6, 34, 62, 90, 118],\n    [6, 26, 50, 74, 98, 122],\n    [6, 30, 54, 78, 102, 126],\n    [6, 26, 52, 78, 104, 130],\n    [6, 30, 56, 82, 108, 134],\n    [6, 34, 60, 86, 112, 138],\n    [6, 30, 58, 86, 114, 142],\n    [6, 34, 62, 90, 118, 146],\n    [6, 30, 54, 78, 102, 126, 150],\n    [6, 24, 50, 76, 102, 128, 154],\n    [6, 28, 54, 80, 106, 132, 158],\n    [6, 32, 58, 84, 110, 136, 162],\n    [6, 26, 54, 82, 110, 138, 166],\n    [6, 30, 58, 86, 114, 142, 170]],\n\n    G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n    G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n    G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n    /*\r\n                                                             BCH编码格式信息\r\n                                                              */\n    getBCHTypeInfo: function getBCHTypeInfo(data) {\n      var d = data << 10;\n      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n        d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n      }\n      return (data << 10 | d) ^ QRUtil.G15_MASK;\n    },\n    /*\r\n       BCH编码版本信息\r\n        */\n    getBCHTypeNumber: function getBCHTypeNumber(data) {\n      var d = data << 12;\n      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n        d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n      }\n      return data << 12 | d;\n    },\n    /*\r\n       获取BCH位信息\r\n        */\n    getBCHDigit: function getBCHDigit(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit++;\n        data >>>= 1;\n      }\n      return digit;\n    },\n    /*\r\n       获取版本对应的矫正图形位置\r\n        */\n    getPatternPosition: function getPatternPosition(typeNumber) {\n      return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n    /*\r\n       掩膜算法\r\n        */\n    getMask: function getMask(maskPattern, i, j) {\n      switch (maskPattern) {\n        case QRMaskPattern.PATTERN000:\n          return (i + j) % 2 == 0;\n        case QRMaskPattern.PATTERN001:\n          return i % 2 == 0;\n        case QRMaskPattern.PATTERN010:\n          return j % 3 == 0;\n        case QRMaskPattern.PATTERN011:\n          return (i + j) % 3 == 0;\n        case QRMaskPattern.PATTERN100:\n          return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n        case QRMaskPattern.PATTERN101:\n          return i * j % 2 + i * j % 3 == 0;\n        case QRMaskPattern.PATTERN110:\n          return (i * j % 2 + i * j % 3) % 2 == 0;\n        case QRMaskPattern.PATTERN111:\n          return (i * j % 3 + (i + j) % 2) % 2 == 0;\n        default:\n          throw new Error(\"bad maskPattern:\" + maskPattern);}\n\n    },\n    /*\r\n       获取RS的纠错多项式\r\n        */\n    getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {\n      var a = new QRPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i++) {\n        a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n      }\n      return a;\n    },\n    /*\r\n       获取评价\r\n        */\n    getLostPoint: function getLostPoint(qrCode) {\n      var moduleCount = qrCode.getModuleCount(),\n      lostPoint = 0,\n      darkCount = 0;\n      for (var row = 0; row < moduleCount; row++) {\n        var sameCount = 0;\n        var head = qrCode.modules[row][0];\n        for (var col = 0; col < moduleCount; col++) {\n          var current = qrCode.modules[row][col];\n          //level 3 评价\n          if (col < moduleCount - 6) {\n            if (current && !qrCode.modules[row][col + 1] && qrCode.modules[row][col + 2] && qrCode.modules[row][col + 3] && qrCode.modules[row][col + 4] && !qrCode.modules[row][col + 5] && qrCode.modules[row][col + 6]) {\n              if (col < moduleCount - 10) {\n                if (qrCode.modules[row][col + 7] && qrCode.modules[row][col + 8] && qrCode.modules[row][col + 9] && qrCode.modules[row][col + 10]) {\n                  lostPoint += 40;\n                }\n              } else if (col > 3) {\n                if (qrCode.modules[row][col - 1] && qrCode.modules[row][col - 2] && qrCode.modules[row][col - 3] && qrCode.modules[row][col - 4]) {\n                  lostPoint += 40;\n                }\n              }\n            }\n          }\n          //level 2 评价\n          if (row < moduleCount - 1 && col < moduleCount - 1) {\n            var count = 0;\n            if (current) count++;\n            if (qrCode.modules[row + 1][col]) count++;\n            if (qrCode.modules[row][col + 1]) count++;\n            if (qrCode.modules[row + 1][col + 1]) count++;\n            if (count == 0 || count == 4) {\n              lostPoint += 3;\n            }\n          }\n          //level 1 评价\n          if (head ^ current) {\n            sameCount++;\n          } else {\n            head = current;\n            if (sameCount >= 5) {\n              lostPoint += 3 + sameCount - 5;\n            }\n            sameCount = 1;\n          }\n          //level 4 评价\n          if (current) {\n            darkCount++;\n          }\n        }\n      }\n      for (var col = 0; col < moduleCount; col++) {\n        var sameCount = 0;\n        var head = qrCode.modules[0][col];\n        for (var row = 0; row < moduleCount; row++) {\n          var current = qrCode.modules[row][col];\n          //level 3 评价\n          if (row < moduleCount - 6) {\n            if (current && !qrCode.modules[row + 1][col] && qrCode.modules[row + 2][col] && qrCode.modules[row + 3][col] && qrCode.modules[row + 4][col] && !qrCode.modules[row + 5][col] && qrCode.modules[row + 6][col]) {\n              if (row < moduleCount - 10) {\n                if (qrCode.modules[row + 7][col] && qrCode.modules[row + 8][col] && qrCode.modules[row + 9][col] && qrCode.modules[row + 10][col]) {\n                  lostPoint += 40;\n                }\n              } else if (row > 3) {\n                if (qrCode.modules[row - 1][col] && qrCode.modules[row - 2][col] && qrCode.modules[row - 3][col] && qrCode.modules[row - 4][col]) {\n                  lostPoint += 40;\n                }\n              }\n            }\n          }\n          //level 1 评价\n          if (head ^ current) {\n            sameCount++;\n          } else {\n            head = current;\n            if (sameCount >= 5) {\n              lostPoint += 3 + sameCount - 5;\n            }\n            sameCount = 1;\n          }\n        }\n      }\n      // LEVEL4\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n      return lostPoint;\n    } };\n\n\n  //---------------------------------------------------------------------\n  // QRMath使用的数学工具\n  //---------------------------------------------------------------------\n  var QRMath = {\n    /*\r\n                 将n转化为a^m\r\n                  */\n    glog: function glog(n) {\n      if (n < 1) {\n        throw new Error(\"glog(\" + n + \")\");\n      }\n      return QRMath.LOG_TABLE[n];\n    },\n    /*\r\n       将a^m转化为n\r\n        */\n    gexp: function gexp(n) {\n      while (n < 0) {\n        n += 255;\n      }\n      while (n >= 256) {\n        n -= 255;\n      }\n      return QRMath.EXP_TABLE[n];\n    },\n    EXP_TABLE: new Array(256),\n    LOG_TABLE: new Array(256) };\n\n\n  for (var i = 0; i < 8; i++) {\n    QRMath.EXP_TABLE[i] = 1 << i;\n  }\n  for (var i = 8; i < 256; i++) {\n    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n  }\n  for (var i = 0; i < 255; i++) {\n    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n  }\n  //---------------------------------------------------------------------\n  // QRPolynomial 多项式\n  //---------------------------------------------------------------------\n  /**\r\n   * 多项式类\r\n   * @param {Array} num   系数\r\n   * @param {num} shift a^shift\r\n   */\n  function QRPolynomial(num, shift) {\n    if (num.length == undefined) {\n      throw new Error(num.length + \"/\" + shift);\n    }\n    var offset = 0;\n    while (offset < num.length && num[offset] == 0) {\n      offset++;\n    }\n    this.num = new Array(num.length - offset + shift);\n    for (var i = 0; i < num.length - offset; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n  QRPolynomial.prototype = {\n    get: function get(index) {\n      return this.num[index];\n    },\n    getLength: function getLength() {\n      return this.num.length;\n    },\n    /**\r\n        * 多项式乘法\r\n        * @param  {QRPolynomial} e 被乘多项式\r\n        * @return {[type]}   [description]\r\n        */\n    multiply: function multiply(e) {\n      var num = new Array(this.getLength() + e.getLength() - 1);\n      for (var i = 0; i < this.getLength(); i++) {\n        for (var j = 0; j < e.getLength(); j++) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n        }\n      }\n      return new QRPolynomial(num, 0);\n    },\n    /**\r\n        * 多项式模运算\r\n        * @param  {QRPolynomial} e 模多项式\r\n        * @return {}\r\n        */\n    mod: function mod(e) {\n      var tl = this.getLength(),\n      el = e.getLength();\n      if (tl - el < 0) {\n        return this;\n      }\n      var num = new Array(tl);\n      for (var i = 0; i < tl; i++) {\n        num[i] = this.get(i);\n      }\n      while (num.length >= el) {\n        var ratio = QRMath.glog(num[0]) - QRMath.glog(e.get(0));\n\n        for (var i = 0; i < e.getLength(); i++) {\n          num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n        }\n        while (num[0] == 0) {\n          num.shift();\n        }\n      }\n      return new QRPolynomial(num, 0);\n    } };\n\n\n  //---------------------------------------------------------------------\n  // RS_BLOCK_TABLE\n  //---------------------------------------------------------------------\n  /*\r\n  二维码各个版本信息[块数, 每块中的数据块数, 每块中的信息块数]\r\n   */\n  var RS_BLOCK_TABLE = [\n  // L\n  // M\n  // Q\n  // H\n  // 1\n  [1, 26, 19],\n  [1, 26, 16],\n  [1, 26, 13],\n  [1, 26, 9],\n\n  // 2\n  [1, 44, 34],\n  [1, 44, 28],\n  [1, 44, 22],\n  [1, 44, 16],\n\n  // 3\n  [1, 70, 55],\n  [1, 70, 44],\n  [2, 35, 17],\n  [2, 35, 13],\n\n  // 4\n  [1, 100, 80],\n  [2, 50, 32],\n  [2, 50, 24],\n  [4, 25, 9],\n\n  // 5\n  [1, 134, 108],\n  [2, 67, 43],\n  [2, 33, 15, 2, 34, 16],\n  [2, 33, 11, 2, 34, 12],\n\n  // 6\n  [2, 86, 68],\n  [4, 43, 27],\n  [4, 43, 19],\n  [4, 43, 15],\n\n  // 7\n  [2, 98, 78],\n  [4, 49, 31],\n  [2, 32, 14, 4, 33, 15],\n  [4, 39, 13, 1, 40, 14],\n\n  // 8\n  [2, 121, 97],\n  [2, 60, 38, 2, 61, 39],\n  [4, 40, 18, 2, 41, 19],\n  [4, 40, 14, 2, 41, 15],\n\n  // 9\n  [2, 146, 116],\n  [3, 58, 36, 2, 59, 37],\n  [4, 36, 16, 4, 37, 17],\n  [4, 36, 12, 4, 37, 13],\n\n  // 10\n  [2, 86, 68, 2, 87, 69],\n  [4, 69, 43, 1, 70, 44],\n  [6, 43, 19, 2, 44, 20],\n  [6, 43, 15, 2, 44, 16],\n\n  // 11\n  [4, 101, 81],\n  [1, 80, 50, 4, 81, 51],\n  [4, 50, 22, 4, 51, 23],\n  [3, 36, 12, 8, 37, 13],\n\n  // 12\n  [2, 116, 92, 2, 117, 93],\n  [6, 58, 36, 2, 59, 37],\n  [4, 46, 20, 6, 47, 21],\n  [7, 42, 14, 4, 43, 15],\n\n  // 13\n  [4, 133, 107],\n  [8, 59, 37, 1, 60, 38],\n  [8, 44, 20, 4, 45, 21],\n  [12, 33, 11, 4, 34, 12],\n\n  // 14\n  [3, 145, 115, 1, 146, 116],\n  [4, 64, 40, 5, 65, 41],\n  [11, 36, 16, 5, 37, 17],\n  [11, 36, 12, 5, 37, 13],\n\n  // 15\n  [5, 109, 87, 1, 110, 88],\n  [5, 65, 41, 5, 66, 42],\n  [5, 54, 24, 7, 55, 25],\n  [11, 36, 12],\n\n  // 16\n  [5, 122, 98, 1, 123, 99],\n  [7, 73, 45, 3, 74, 46],\n  [15, 43, 19, 2, 44, 20],\n  [3, 45, 15, 13, 46, 16],\n\n  // 17\n  [1, 135, 107, 5, 136, 108],\n  [10, 74, 46, 1, 75, 47],\n  [1, 50, 22, 15, 51, 23],\n  [2, 42, 14, 17, 43, 15],\n\n  // 18\n  [5, 150, 120, 1, 151, 121],\n  [9, 69, 43, 4, 70, 44],\n  [17, 50, 22, 1, 51, 23],\n  [2, 42, 14, 19, 43, 15],\n\n  // 19\n  [3, 141, 113, 4, 142, 114],\n  [3, 70, 44, 11, 71, 45],\n  [17, 47, 21, 4, 48, 22],\n  [9, 39, 13, 16, 40, 14],\n\n  // 20\n  [3, 135, 107, 5, 136, 108],\n  [3, 67, 41, 13, 68, 42],\n  [15, 54, 24, 5, 55, 25],\n  [15, 43, 15, 10, 44, 16],\n\n  // 21\n  [4, 144, 116, 4, 145, 117],\n  [17, 68, 42],\n  [17, 50, 22, 6, 51, 23],\n  [19, 46, 16, 6, 47, 17],\n\n  // 22\n  [2, 139, 111, 7, 140, 112],\n  [17, 74, 46],\n  [7, 54, 24, 16, 55, 25],\n  [34, 37, 13],\n\n  // 23\n  [4, 151, 121, 5, 152, 122],\n  [4, 75, 47, 14, 76, 48],\n  [11, 54, 24, 14, 55, 25],\n  [16, 45, 15, 14, 46, 16],\n\n  // 24\n  [6, 147, 117, 4, 148, 118],\n  [6, 73, 45, 14, 74, 46],\n  [11, 54, 24, 16, 55, 25],\n  [30, 46, 16, 2, 47, 17],\n\n  // 25\n  [8, 132, 106, 4, 133, 107],\n  [8, 75, 47, 13, 76, 48],\n  [7, 54, 24, 22, 55, 25],\n  [22, 45, 15, 13, 46, 16],\n\n  // 26\n  [10, 142, 114, 2, 143, 115],\n  [19, 74, 46, 4, 75, 47],\n  [28, 50, 22, 6, 51, 23],\n  [33, 46, 16, 4, 47, 17],\n\n  // 27\n  [8, 152, 122, 4, 153, 123],\n  [22, 73, 45, 3, 74, 46],\n  [8, 53, 23, 26, 54, 24],\n  [12, 45, 15, 28, 46, 16],\n\n  // 28\n  [3, 147, 117, 10, 148, 118],\n  [3, 73, 45, 23, 74, 46],\n  [4, 54, 24, 31, 55, 25],\n  [11, 45, 15, 31, 46, 16],\n\n  // 29\n  [7, 146, 116, 7, 147, 117],\n  [21, 73, 45, 7, 74, 46],\n  [1, 53, 23, 37, 54, 24],\n  [19, 45, 15, 26, 46, 16],\n\n  // 30\n  [5, 145, 115, 10, 146, 116],\n  [19, 75, 47, 10, 76, 48],\n  [15, 54, 24, 25, 55, 25],\n  [23, 45, 15, 25, 46, 16],\n\n  // 31\n  [13, 145, 115, 3, 146, 116],\n  [2, 74, 46, 29, 75, 47],\n  [42, 54, 24, 1, 55, 25],\n  [23, 45, 15, 28, 46, 16],\n\n  // 32\n  [17, 145, 115],\n  [10, 74, 46, 23, 75, 47],\n  [10, 54, 24, 35, 55, 25],\n  [19, 45, 15, 35, 46, 16],\n\n  // 33\n  [17, 145, 115, 1, 146, 116],\n  [14, 74, 46, 21, 75, 47],\n  [29, 54, 24, 19, 55, 25],\n  [11, 45, 15, 46, 46, 16],\n\n  // 34\n  [13, 145, 115, 6, 146, 116],\n  [14, 74, 46, 23, 75, 47],\n  [44, 54, 24, 7, 55, 25],\n  [59, 46, 16, 1, 47, 17],\n\n  // 35\n  [12, 151, 121, 7, 152, 122],\n  [12, 75, 47, 26, 76, 48],\n  [39, 54, 24, 14, 55, 25],\n  [22, 45, 15, 41, 46, 16],\n\n  // 36\n  [6, 151, 121, 14, 152, 122],\n  [6, 75, 47, 34, 76, 48],\n  [46, 54, 24, 10, 55, 25],\n  [2, 45, 15, 64, 46, 16],\n\n  // 37\n  [17, 152, 122, 4, 153, 123],\n  [29, 74, 46, 14, 75, 47],\n  [49, 54, 24, 10, 55, 25],\n  [24, 45, 15, 46, 46, 16],\n\n  // 38\n  [4, 152, 122, 18, 153, 123],\n  [13, 74, 46, 32, 75, 47],\n  [48, 54, 24, 14, 55, 25],\n  [42, 45, 15, 32, 46, 16],\n\n  // 39\n  [20, 147, 117, 4, 148, 118],\n  [40, 75, 47, 7, 76, 48],\n  [43, 54, 24, 22, 55, 25],\n  [10, 45, 15, 67, 46, 16],\n\n  // 40\n  [19, 148, 118, 6, 149, 119],\n  [18, 75, 47, 31, 76, 48],\n  [34, 54, 24, 34, 55, 25],\n  [20, 45, 15, 61, 46, 16]];\n\n\n  /**\r\n                              * 根据数据获取对应版本\r\n                              * @return {[type]} [description]\r\n                              */\n  QRCodeAlg.prototype.getRightType = function () {\n    for (var typeNumber = 1; typeNumber < 41; typeNumber++) {\n      var rsBlock = RS_BLOCK_TABLE[(typeNumber - 1) * 4 + this.errorCorrectLevel];\n      if (rsBlock == undefined) {\n        throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + this.errorCorrectLevel);\n      }\n      var length = rsBlock.length / 3;\n      var totalDataCount = 0;\n      for (var i = 0; i < length; i++) {\n        var count = rsBlock[i * 3 + 0];\n        var dataCount = rsBlock[i * 3 + 2];\n        totalDataCount += dataCount * count;\n      }\n      var lengthBytes = typeNumber > 9 ? 2 : 1;\n      if (this.utf8bytes.length + lengthBytes < totalDataCount || typeNumber == 40) {\n        this.typeNumber = typeNumber;\n        this.rsBlock = rsBlock;\n        this.totalDataCount = totalDataCount;\n        break;\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------\n  // QRBitBuffer\n  //---------------------------------------------------------------------\n  function QRBitBuffer() {\n    this.buffer = new Array();\n    this.length = 0;\n  }\n  QRBitBuffer.prototype = {\n    get: function get(index) {\n      var bufIndex = Math.floor(index / 8);\n      return this.buffer[bufIndex] >>> 7 - index % 8 & 1;\n    },\n    put: function put(num, length) {\n      for (var i = 0; i < length; i++) {\n        this.putBit(num >>> length - i - 1 & 1);\n      }\n    },\n    putBit: function putBit(bit) {\n      var bufIndex = Math.floor(this.length / 8);\n      if (this.buffer.length <= bufIndex) {\n        this.buffer.push(0);\n      }\n      if (bit) {\n        this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n      }\n      this.length++;\n    } };\n\n\n\n\n  // xzedit\n  var qrcodeAlgObjCache = [];\n  /**\r\n                               * 二维码构造函数，主要用于绘制\r\n                               * @param  {参数列表} opt 传递参数\r\n                               * @return {}\r\n                               */\n  QRCode = function QRCode(opt) {\n    //设置默认参数\n    this.options = {\n      text: '',\n      size: 256,\n      correctLevel: 3,\n      background: '#ffffff',\n      foreground: '#000000',\n      pdground: '#000000',\n      image: '',\n      imageSize: 30,\n      canvasId: opt.canvasId,\n      context: opt.context,\n      usingComponents: opt.usingComponents,\n      showLoading: opt.showLoading,\n      loadingText: opt.loadingText };\n\n    if (typeof opt === 'string') {// 只编码ASCII字符串\n      opt = {\n        text: opt };\n\n    }\n    if (opt) {\n      for (var i in opt) {\n        this.options[i] = opt[i];\n      }\n    }\n    //使用QRCodeAlg创建二维码结构\n    var qrCodeAlg = null;\n    for (var i = 0, l = qrcodeAlgObjCache.length; i < l; i++) {\n      if (qrcodeAlgObjCache[i].text == this.options.text && qrcodeAlgObjCache[i].text.correctLevel == this.options.correctLevel) {\n        qrCodeAlg = qrcodeAlgObjCache[i].obj;\n        break;\n      }\n    }\n    if (i == l) {\n      qrCodeAlg = new QRCodeAlg(this.options.text, this.options.correctLevel);\n      qrcodeAlgObjCache.push({\n        text: this.options.text,\n        correctLevel: this.options.correctLevel,\n        obj: qrCodeAlg });\n\n    }\n    /**\r\n       * 计算矩阵点的前景色\r\n       * @param {Obj} config\r\n       * @param {Number} config.row 点x坐标\r\n       * @param {Number} config.col 点y坐标\r\n       * @param {Number} config.count 矩阵大小\r\n       * @param {Number} config.options 组件的options\r\n       * @return {String}\r\n       */\n    var getForeGround = function getForeGround(config) {\n      var options = config.options;\n      if (options.pdground && (\n      config.row > 1 && config.row < 5 && config.col > 1 && config.col < 5 ||\n      config.row > config.count - 6 && config.row < config.count - 2 && config.col > 1 && config.col < 5 ||\n      config.row > 1 && config.row < 5 && config.col > config.count - 6 && config.col < config.count - 2))\n      {\n        return options.pdground;\n      }\n      return options.foreground;\n    };\n    // 创建canvas\n    var createCanvas = function createCanvas(options) {\n      if (options.showLoading) {\n        uni.showLoading({\n          title: options.loadingText,\n          mask: true });\n\n      }\n      var ctx = uni.createCanvasContext(options.canvasId, options.context);\n      var count = qrCodeAlg.getModuleCount();\n      var ratioSize = options.size;\n      var ratioImgSize = options.imageSize;\n      //计算每个点的长宽\n      var tileW = (ratioSize / count).toPrecision(4);\n      var tileH = (ratioSize / count).toPrecision(4);\n      //绘制\n      for (var row = 0; row < count; row++) {\n        for (var col = 0; col < count; col++) {\n          var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);\n          var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);\n          var foreground = getForeGround({\n            row: row,\n            col: col,\n            count: count,\n            options: options });\n\n          ctx.setFillStyle(qrCodeAlg.modules[row][col] ? foreground : options.background);\n          ctx.fillRect(Math.round(col * tileW), Math.round(row * tileH), w, h);\n        }\n      }\n      if (options.image) {\n\n\n\n\n        // 画圆角矩形\n        var drawRoundedRect = function drawRoundedRect(ctxi, x, y, width, height, r, lineWidth, fill, stroke) {\n          ctxi.setLineWidth(lineWidth);\n          ctxi.setFillStyle(options.background);\n          ctxi.setStrokeStyle(options.background);\n          ctxi.beginPath(); // draw top and top right corner \n          ctxi.moveTo(x + r, y);\n          ctxi.arcTo(x + width, y, x + width, y + r, r); // draw right side and bottom right corner \n          ctxi.arcTo(x + width, y + height, x + width - r, y + height, r); // draw bottom and bottom left corner \n          ctxi.arcTo(x, y + height, x, y + height - r, r); // draw left and top left corner \n          ctxi.arcTo(x, y, x + r, y, r);\n          ctxi.closePath();\n          if (fill) {\n            ctxi.fill();\n          }\n          if (stroke) {\n            ctxi.stroke();\n          }\n        };var x = Number(((ratioSize - ratioImgSize) / 2).toFixed(2));var y = Number(((ratioSize - ratioImgSize) / 2).toFixed(2));drawRoundedRect(ctx, x, y, ratioImgSize, ratioImgSize, 2, 6, true, true);ctx.drawImage(options.image, x, y, ratioImgSize, ratioImgSize);\n      }\n      setTimeout(function () {\n        ctx.draw(true, function () {\n          // 保存到临时区域\n          setTimeout(function () {\n            uni.canvasToTempFilePath({\n              width: options.width,\n              height: options.height,\n              destWidth: options.width,\n              destHeight: options.height,\n              canvasId: options.canvasId,\n              quality: Number(1),\n              success: function success(res) {\n                if (options.cbResult) {\n                  // 由于官方还没有统一此接口的输出字段，所以先判定下  支付宝为 res.apFilePath\n                  if (!empty(res.tempFilePath)) {\n                    options.cbResult(res.tempFilePath);\n                  } else if (!empty(res.apFilePath)) {\n                    options.cbResult(res.apFilePath);\n                  } else {\n                    options.cbResult(res.tempFilePath);\n                  }\n                }\n              },\n              fail: function fail(res) {\n                if (options.cbResult) {\n                  options.cbResult(res);\n                }\n              },\n              complete: function complete() {\n                uni.hideLoading();\n              } },\n            options.context);\n          }, options.text.length + 100);\n        });\n      }, options.usingComponents ? 0 : 150);\n    };\n    createCanvas(this.options);\n    // 空判定\n    var empty = function empty(v) {\n      var tp = typeof v,\n      rt = false;\n      if (tp == \"number\" && String(v) == \"\") {\n        rt = true;\n      } else if (tp == \"undefined\") {\n        rt = true;\n      } else if (tp == \"object\") {\n        if (JSON.stringify(v) == \"{}\" || JSON.stringify(v) == \"[]\" || v == null) rt = true;\n      } else if (tp == \"string\") {\n        if (v == \"\" || v == \"undefined\" || v == \"null\" || v == \"{}\" || v == \"[]\") rt = true;\n      } else if (tp == \"function\") {\n        rt = false;\n      }\n      return rt;\n    };\n  };\n  QRCode.prototype.clear = function (fn) {\n    var ctx = uni.createCanvasContext(this.options.canvasId, this.options.context);\n    ctx.clearRect(0, 0, this.options.size, this.options.size);\n    ctx.draw(false, function () {\n      if (fn) {\n        fn();\n      }\n    });\n  };\n})();var _default =\n\nQRCode;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///477\n");

/***/ }),

/***/ 485:
/*!*****************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcode.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}var barcodes = __webpack_require__(/*! ./barcodes/index.js */ 486)['default'];\nvar _barcode = {};\n(function () {\n  // 初始化\n  _barcode = function barcode(cont, ctxid, options, ctxsize, result) {\n    var ops = {},newOptions,encodings,globaContext,ctx,globaCtxid,cbCanvasSize,cbResult;\n    globaCtxid = ctxid;\n    cbCanvasSize = ctxsize;\n    cbResult = result;\n    newOptions = Object.assign(ops, options);\n    // 修成margin\n    fixMargin(newOptions);\n    // 处理options 数据\n    if (newOptions.text == '' || cont == '') {\n      return false;\n    }\n    // 获取ctx\n    globaContext = cont;\n    ctx = uni.createCanvasContext(globaCtxid, globaContext);\n    // 获取编码数据\n    encodings = new barcodes[newOptions.format.toUpperCase()](newOptions.text, newOptions).encode();\n    var fixencodings = fixEncodings(encodings, newOptions);\n    // 返回canvas实际大小\n    cbCanvasSize({ width: fixencodings.width, height: fixencodings.height });\n    // 绘制canvas\n    setTimeout(function () {\n      drawCanvas.render(newOptions, fixencodings);\n    }, 10);\n    // 绘制canvas\n    var drawCanvas = {\n      render: function render(options, encoding) {var _this = this;\n        this.prepare(options, encoding);\n        encoding.encodings.forEach(function (v, i) {\n          _this.barcode(options, v);\n          _this.text(options, v);\n          _this.move(v);\n        });\n        this.draw(options, encoding);\n      },\n      barcode: function barcode(options, encoding) {\n        var binary = encoding.data;\n        var yFrom;\n        if (options.textPosition == \"top\") {\n          yFrom = options.marginTop + options.fontSize + options.textMargin;\n        } else {\n          yFrom = options.marginTop;\n        }\n        // 绘制条码\n        ctx.fillStyle = options.lineColor;\n        for (var b = 0; b < binary.length; b++) {\n          var x = b * options.width + encoding.barcodePadding;\n          var height = options.height;\n          if (encoding.options) {\n            if (encoding.options.height != undefined) {\n              height = encoding.options.height;\n            }\n          }\n          if (binary[b] === \"1\") {\n            ctx.fillRect(x, yFrom, options.width, height);\n          } else if (binary[b]) {\n            ctx.fillRect(x, yFrom, options.width, height * binary[b]);\n          }\n        }\n      },\n      text: function text(options, encoding) {\n        if (options.displayValue) {\n          var x, y, align, size;\n          if (options.textPosition == \"top\") {\n            y = options.marginTop + options.fontSize;\n          } else {\n            y = options.height + options.textMargin + options.marginTop + options.fontSize;\n          }\n          if (encoding.options) {\n            if (encoding.options.textAlign != undefined) {\n              align = encoding.options.textAlign;\n            }\n            if (encoding.options.fontSize != undefined) {\n              size = encoding.options.fontSize;\n            }\n          } else {\n            align = options.textAlign;\n            size = options.fontSize;\n          }\n          ctx.setFontSize(size);\n          if (align == \"left\" || encoding.barcodePadding > 0) {\n            x = 0;\n            ctx.setTextAlign('left');\n          } else if (align == \"right\") {\n            x = encoding.width - 1;\n            ctx.setTextAlign('right');\n          } else\n          {\n            x = encoding.width / 2;\n            ctx.setTextAlign('center');\n          }\n          ctx.fillStyle = options.fontColor;\n          if (encoding.text != undefined) {\n            ctx.fillText(encoding.text, x, y);\n          }\n        }\n      },\n      move: function move(encoding) {\n        ctx.translate(encoding.width, 0);\n      },\n      prepare: function prepare(options, encoding) {\n        // 绘制背景\n        if (options.background) {\n          ctx.fillStyle = options.background;\n          ctx.fillRect(0, 0, encoding.width, encoding.height);\n        }\n        ctx.translate(options.marginLeft, 0);\n      },\n      draw: function draw(options, encoding) {var _this2 = this;\n        ctx.draw(false, function () {\n          _this2.toImgs(options, encoding);\n        });\n      },\n      toImgs: function toImgs(options, encoding) {\n        setTimeout(function () {\n          uni.canvasToTempFilePath({\n            width: encoding.width,\n            height: encoding.height,\n            destWidth: encoding.width,\n            destHeight: encoding.height,\n            canvasId: globaCtxid,\n            fileType: 'png',\n            success: function success(res) {\n              cbResult(res.tempFilePath);\n            },\n            fail: function fail(res) {\n              cbResult(res);\n            },\n            complete: function complete() {\n              uni.hideLoading();\n            } },\n          globaContext);\n        }, options.text.length + 100);\n      } };\n\n    // 混入canvas数据\n    function fixEncodings(encoding, options) {\n      var encodingArr = [],width = options.marginLeft + options.marginRight,height;\n      if (!Array.isArray(encoding)) {\n        encodingArr[0] = JSON.parse(JSON.stringify(encoding));\n      } else {\n        encodingArr = _toConsumableArray(encoding);\n      }\n      encodingArr.forEach(function (v, i) {\n        // 获取文本宽度\n        var textWidth = ctx.measureText(encodingArr[i].text ? encodingArr[i].text : '').width;\n        // 获取条形码宽度\n        var barcodeWidth = encodingArr[i].data.length * options.width;\n        // 获取内边距\n        var barcodePadding = 0;\n        if (options.displayValue && barcodeWidth < textWidth) {\n          if (options.textAlign == \"center\") {\n            barcodePadding = Math.floor((textWidth - barcodeWidth) / 2);\n          } else if (options.textAlign == \"left\") {\n            barcodePadding = 0;\n          } else if (options.textAlign == \"right\") {\n            barcodePadding = Math.floor(textWidth - barcodeWidth);\n          }\n        }\n        // 混入encodingArr[i]\n        encodingArr[i].barcodePadding = barcodePadding;\n        encodingArr[i].width = Math.ceil(Math.max(textWidth, barcodeWidth));\n        width += encodingArr[i].width;\n        if (encodingArr[i].options) {\n          if (encodingArr[i].options.height != undefined) {\n            encodingArr[i].height = encodingArr[i].options.height + (options.displayValue && (encodingArr[i].text ? encodingArr[i].text : '').length > 0 ? options.fontSize + options.textMargin : 0) + options.marginTop + options.marginBottom;\n          } else {\n            encodingArr[i].height = height = options.height + (options.displayValue && (encodingArr[i].text ? encodingArr[i].text : '').length > 0 ? options.fontSize + options.textMargin : 0) + options.marginTop + options.marginBottom;\n          }\n        } else {\n          encodingArr[i].height = height = options.height + (options.displayValue && (encodingArr[i].text ? encodingArr[i].text : '').length > 0 ? options.fontSize + options.textMargin : 0) + options.marginTop + options.marginBottom;\n        }\n      });\n      return { encodings: encodingArr, width: width, height: height };\n    }\n    // 修正Margin\n    function fixMargin(options) {\n      options.marginTop = options.marginTop == undefined ? options.margin : options.marginTop;\n      options.marginBottom = options.marginBottom == undefined ? options.margin : options.marginBottom;\n      options.marginRight = options.marginRight == undefined ? options.margin : options.marginRight;\n      options.marginLeft = options.marginLeft == undefined ? options.margin : options.marginLeft;\n    }\n  };\n})();var _default =\n\n_barcode;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///485\n");

/***/ }),

/***/ 486:
/*!************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/index.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _CODE = __webpack_require__(/*! ./CODE39/ */ 487);\n\nvar _CODE2 = __webpack_require__(/*! ./CODE128/ */ 489);\n\nvar _EAN_UPC = __webpack_require__(/*! ./EAN_UPC/ */ 497);\n\nvar _ITF = __webpack_require__(/*! ./ITF/ */ 507);\n\nvar _MSI = __webpack_require__(/*! ./MSI/ */ 511);\n\nvar _pharmacode = __webpack_require__(/*! ./pharmacode/ */ 518);\n\nvar _codabar = __webpack_require__(/*! ./codabar */ 519);\n\nvar _GenericBarcode = __webpack_require__(/*! ./GenericBarcode/ */ 520);\n\nexports.default = {\n  CODE39: _CODE.CODE39,\n  CODE128: _CODE2.CODE128, CODE128A: _CODE2.CODE128A, CODE128B: _CODE2.CODE128B, CODE128C: _CODE2.CODE128C,\n  EAN13: _EAN_UPC.EAN13, EAN8: _EAN_UPC.EAN8, EAN5: _EAN_UPC.EAN5, EAN2: _EAN_UPC.EAN2,\n  UPC: _EAN_UPC.UPC, UPCE: _EAN_UPC.UPCE,\n  ITF14: _ITF.ITF14,\n  ITF: _ITF.ITF,\n  MSI: _MSI.MSI, MSI10: _MSI.MSI10, MSI11: _MSI.MSI11, MSI1010: _MSI.MSI1010, MSI1110: _MSI.MSI1110,\n  PHARMACODE: _pharmacode.pharmacode,\n  CODABAR: _codabar.codabar,\n  GENERICBARCODE: _GenericBarcode.GenericBarcode };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9pbmRleC5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9DT0RFIiwicmVxdWlyZSIsIl9DT0RFMiIsIl9FQU5fVVBDIiwiX0lURiIsIl9NU0kiLCJfcGhhcm1hY29kZSIsIl9jb2RhYmFyIiwiX0dlbmVyaWNCYXJjb2RlIiwiZGVmYXVsdCIsIkNPREUzOSIsIkNPREUxMjgiLCJDT0RFMTI4QSIsIkNPREUxMjhCIiwiQ09ERTEyOEMiLCJFQU4xMyIsIkVBTjgiLCJFQU41IiwiRUFOMiIsIlVQQyIsIlVQQ0UiLCJJVEYxNCIsIklURiIsIk1TSSIsIk1TSTEwIiwiTVNJMTEiLCJNU0kxMDEwIiwiTVNJMTExMCIsIlBIQVJNQUNPREUiLCJwaGFybWFjb2RlIiwiQ09EQUJBUiIsImNvZGFiYXIiLCJHRU5FUklDQkFSQ09ERSIsIkdlbmVyaWNCYXJjb2RlIl0sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUM1Q0MsT0FBSyxFQUFFLElBRHFDLEVBQTdDOzs7QUFJQSxJQUFJQyxLQUFLLEdBQUdDLG1CQUFPLENBQUMsb0JBQUQsQ0FBbkI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHRCxtQkFBTyxDQUFDLHFCQUFELENBQXBCOztBQUVBLElBQUlFLFFBQVEsR0FBR0YsbUJBQU8sQ0FBQyxxQkFBRCxDQUF0Qjs7QUFFQSxJQUFJRyxJQUFJLEdBQUdILG1CQUFPLENBQUMsaUJBQUQsQ0FBbEI7O0FBRUEsSUFBSUksSUFBSSxHQUFHSixtQkFBTyxDQUFDLGlCQUFELENBQWxCOztBQUVBLElBQUlLLFdBQVcsR0FBR0wsbUJBQU8sQ0FBQyx3QkFBRCxDQUF6Qjs7QUFFQSxJQUFJTSxRQUFRLEdBQUdOLG1CQUFPLENBQUMsb0JBQUQsQ0FBdEI7O0FBRUEsSUFBSU8sZUFBZSxHQUFHUCxtQkFBTyxDQUFDLDRCQUFELENBQTdCOztBQUVBSCxPQUFPLENBQUNXLE9BQVIsR0FBa0I7QUFDakJDLFFBQU0sRUFBRVYsS0FBSyxDQUFDVSxNQURHO0FBRWpCQyxTQUFPLEVBQUVULE1BQU0sQ0FBQ1MsT0FGQyxFQUVRQyxRQUFRLEVBQUVWLE1BQU0sQ0FBQ1UsUUFGekIsRUFFbUNDLFFBQVEsRUFBRVgsTUFBTSxDQUFDVyxRQUZwRCxFQUU4REMsUUFBUSxFQUFFWixNQUFNLENBQUNZLFFBRi9FO0FBR2pCQyxPQUFLLEVBQUVaLFFBQVEsQ0FBQ1ksS0FIQyxFQUdNQyxJQUFJLEVBQUViLFFBQVEsQ0FBQ2EsSUFIckIsRUFHMkJDLElBQUksRUFBRWQsUUFBUSxDQUFDYyxJQUgxQyxFQUdnREMsSUFBSSxFQUFFZixRQUFRLENBQUNlLElBSC9EO0FBSWpCQyxLQUFHLEVBQUVoQixRQUFRLENBQUNnQixHQUpHLEVBSUVDLElBQUksRUFBRWpCLFFBQVEsQ0FBQ2lCLElBSmpCO0FBS2pCQyxPQUFLLEVBQUVqQixJQUFJLENBQUNpQixLQUxLO0FBTWpCQyxLQUFHLEVBQUVsQixJQUFJLENBQUNrQixHQU5PO0FBT2pCQyxLQUFHLEVBQUVsQixJQUFJLENBQUNrQixHQVBPLEVBT0ZDLEtBQUssRUFBRW5CLElBQUksQ0FBQ21CLEtBUFYsRUFPaUJDLEtBQUssRUFBRXBCLElBQUksQ0FBQ29CLEtBUDdCLEVBT29DQyxPQUFPLEVBQUVyQixJQUFJLENBQUNxQixPQVBsRCxFQU8yREMsT0FBTyxFQUFFdEIsSUFBSSxDQUFDc0IsT0FQekU7QUFRakJDLFlBQVUsRUFBRXRCLFdBQVcsQ0FBQ3VCLFVBUlA7QUFTakJDLFNBQU8sRUFBRXZCLFFBQVEsQ0FBQ3dCLE9BVEQ7QUFVakJDLGdCQUFjLEVBQUV4QixlQUFlLENBQUN5QixjQVZmLEVBQWxCIiwiZmlsZSI6IjQ4Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xyXG5cdHZhbHVlOiB0cnVlXHJcbn0pO1xyXG5cclxudmFyIF9DT0RFID0gcmVxdWlyZSgnLi9DT0RFMzkvJyk7XHJcblxyXG52YXIgX0NPREUyID0gcmVxdWlyZSgnLi9DT0RFMTI4LycpO1xyXG5cclxudmFyIF9FQU5fVVBDID0gcmVxdWlyZSgnLi9FQU5fVVBDLycpO1xyXG5cclxudmFyIF9JVEYgPSByZXF1aXJlKCcuL0lURi8nKTtcclxuXHJcbnZhciBfTVNJID0gcmVxdWlyZSgnLi9NU0kvJyk7XHJcblxyXG52YXIgX3BoYXJtYWNvZGUgPSByZXF1aXJlKCcuL3BoYXJtYWNvZGUvJyk7XHJcblxyXG52YXIgX2NvZGFiYXIgPSByZXF1aXJlKCcuL2NvZGFiYXInKTtcclxuXHJcbnZhciBfR2VuZXJpY0JhcmNvZGUgPSByZXF1aXJlKCcuL0dlbmVyaWNCYXJjb2RlLycpO1xyXG5cclxuZXhwb3J0cy5kZWZhdWx0ID0ge1xyXG5cdENPREUzOTogX0NPREUuQ09ERTM5LFxyXG5cdENPREUxMjg6IF9DT0RFMi5DT0RFMTI4LCBDT0RFMTI4QTogX0NPREUyLkNPREUxMjhBLCBDT0RFMTI4QjogX0NPREUyLkNPREUxMjhCLCBDT0RFMTI4QzogX0NPREUyLkNPREUxMjhDLFxyXG5cdEVBTjEzOiBfRUFOX1VQQy5FQU4xMywgRUFOODogX0VBTl9VUEMuRUFOOCwgRUFONTogX0VBTl9VUEMuRUFONSwgRUFOMjogX0VBTl9VUEMuRUFOMiwgXHJcblx0VVBDOiBfRUFOX1VQQy5VUEMsIFVQQ0U6IF9FQU5fVVBDLlVQQ0UsXHJcblx0SVRGMTQ6IF9JVEYuSVRGMTQsXHJcblx0SVRGOiBfSVRGLklURixcclxuXHRNU0k6IF9NU0kuTVNJLCBNU0kxMDogX01TSS5NU0kxMCwgTVNJMTE6IF9NU0kuTVNJMTEsIE1TSTEwMTA6IF9NU0kuTVNJMTAxMCwgTVNJMTExMDogX01TSS5NU0kxMTEwLFxyXG5cdFBIQVJNQUNPREU6IF9waGFybWFjb2RlLnBoYXJtYWNvZGUsXHJcblx0Q09EQUJBUjogX2NvZGFiYXIuY29kYWJhcixcclxuXHRHRU5FUklDQkFSQ09ERTogX0dlbmVyaWNCYXJjb2RlLkdlbmVyaWNCYXJjb2RlXHJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///486\n");

/***/ }),

/***/ 487:
/*!*******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/CODE39/index.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nexports.CODE39 = undefined;\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode.js */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // Encoding documentation:\n// https://en.wikipedia.org/wiki/Code_39#Encoding\n\nvar CODE39 = function (_Barcode) {\n  _inherits(CODE39, _Barcode);\n\n  function CODE39(data, options) {\n    _classCallCheck(this, CODE39);\n\n    data = data.toUpperCase();\n\n    // Calculate mod43 checksum if enabled\n    if (options.mod43) {\n      data += getCharacter(mod43checksum(data));\n    }\n\n    return _possibleConstructorReturn(this, (CODE39.__proto__ || Object.getPrototypeOf(CODE39)).call(this, data, options));\n  }\n\n  _createClass(CODE39, [{\n    key: \"encode\",\n    value: function encode() {\n      // First character is always a *\n      var result = getEncoding(\"*\");\n\n      // Take every character and add the binary representation to the result\n      for (var i = 0; i < this.data.length; i++) {\n        result += getEncoding(this.data[i]) + \"0\";\n      }\n\n      // Last character is always a *\n      result += getEncoding(\"*\");\n      return {\n        data: result,\n        text: this.text };\n\n    } },\n  {\n    key: \"valid\",\n    value: function valid() {\n      return this.data.search(/^[0-9A-Z\\-\\.\\ \\$\\/\\+\\%]+$/) !== -1;\n    } }]);\n\n\n  return CODE39;\n}(_Barcode3.default);\n\n// All characters. The position in the array is the (checksum) value\n\n\nvar characters = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"-\", \".\", \" \", \"$\", \"/\", \"+\", \"%\", \"*\"];\n\n// The decimal representation of the characters, is converted to the\n// corresponding binary with the getEncoding function\nvar encodings = [20957, 29783, 23639, 30485, 20951, 29813, 23669, 20855, 29789, 23645, 29975, 23831, 30533, 22295, 30149, 24005, 21623, 29981, 23837, 22301, 30023, 23879, 30545, 22343, 30161, 24017, 21959, 30065, 23921, 22385, 29015, 18263, 29141, 17879, 29045, 18293, 17783, 29021, 18269, 17477, 17489, 17681, 20753, 35770];\n\n// Get the binary representation of a character by converting the encodings\n// from decimal to binary\nfunction getEncoding(character) {\n  return getBinary(characterValue(character));\n}\n\nfunction getBinary(characterValue) {\n  return encodings[characterValue].toString(2);\n}\n\nfunction getCharacter(characterValue) {\n  return characters[characterValue];\n}\n\nfunction characterValue(character) {\n  return characters.indexOf(character);\n}\n\nfunction mod43checksum(data) {\n  var checksum = 0;\n  for (var i = 0; i < data.length; i++) {\n    checksum += characterValue(data[i]);\n  }\n\n  checksum = checksum % 43;\n  return checksum;\n}\n\nexports.CODE39 = CODE39;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///487\n");

/***/ }),

/***/ 488:
/*!**************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/Barcode.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nvar Barcode = function Barcode(data, options) {\n  _classCallCheck(this, Barcode);\n\n  this.data = data;\n  this.text = options.text || data;\n  this.options = options;\n};\n\nexports.default = Barcode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9CYXJjb2RlLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIkJhcmNvZGUiLCJkYXRhIiwib3B0aW9ucyIsInRleHQiLCJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUM1Q0MsT0FBSyxFQUFFLElBRHFDLEVBQTdDOzs7QUFJQSxTQUFTQyxlQUFULENBQXlCQyxRQUF6QixFQUFtQ0MsV0FBbkMsRUFBZ0QsQ0FBRSxJQUFJLEVBQUVELFFBQVEsWUFBWUMsV0FBdEIsQ0FBSixFQUF3QyxDQUFFLE1BQU0sSUFBSUMsU0FBSixDQUFjLG1DQUFkLENBQU4sQ0FBMkQsQ0FBRTs7QUFFekosSUFBSUMsT0FBTyxHQUFHLFNBQVNBLE9BQVQsQ0FBaUJDLElBQWpCLEVBQXVCQyxPQUF2QixFQUFnQztBQUM3Q04saUJBQWUsQ0FBQyxJQUFELEVBQU9JLE9BQVAsQ0FBZjs7QUFFQSxPQUFLQyxJQUFMLEdBQVlBLElBQVo7QUFDQSxPQUFLRSxJQUFMLEdBQVlELE9BQU8sQ0FBQ0MsSUFBUixJQUFnQkYsSUFBNUI7QUFDQSxPQUFLQyxPQUFMLEdBQWVBLE9BQWY7QUFDQSxDQU5EOztBQVFBUixPQUFPLENBQUNVLE9BQVIsR0FBa0JKLE9BQWxCIiwiZmlsZSI6IjQ4OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcblx0dmFsdWU6IHRydWVcclxufSk7XHJcblxyXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxudmFyIEJhcmNvZGUgPSBmdW5jdGlvbiBCYXJjb2RlKGRhdGEsIG9wdGlvbnMpIHtcclxuXHRfY2xhc3NDYWxsQ2hlY2sodGhpcywgQmFyY29kZSk7XHJcblxyXG5cdHRoaXMuZGF0YSA9IGRhdGE7XHJcblx0dGhpcy50ZXh0ID0gb3B0aW9ucy50ZXh0IHx8IGRhdGE7XHJcblx0dGhpcy5vcHRpb25zID0gb3B0aW9ucztcclxufTtcclxuXHJcbmV4cG9ydHMuZGVmYXVsdCA9IEJhcmNvZGU7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///488\n");

/***/ }),

/***/ 489:
/*!********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/CODE128/index.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nexports.CODE128C = exports.CODE128B = exports.CODE128A = exports.CODE128 = undefined;\n\nvar _CODE128_AUTO = __webpack_require__(/*! ./CODE128_AUTO.js */ 490);\n\nvar _CODE128_AUTO2 = _interopRequireDefault(_CODE128_AUTO);\n\nvar _CODE128A = __webpack_require__(/*! ./CODE128A.js */ 494);\n\nvar _CODE128A2 = _interopRequireDefault(_CODE128A);\n\nvar _CODE128B = __webpack_require__(/*! ./CODE128B.js */ 495);\n\nvar _CODE128B2 = _interopRequireDefault(_CODE128B);\n\nvar _CODE128C = __webpack_require__(/*! ./CODE128C.js */ 496);\n\nvar _CODE128C2 = _interopRequireDefault(_CODE128C);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nexports.CODE128 = _CODE128_AUTO2.default;\nexports.CODE128A = _CODE128A2.default;\nexports.CODE128B = _CODE128B2.default;\nexports.CODE128C = _CODE128C2.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9DT0RFMTI4L2luZGV4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ09ERTEyOEMiLCJDT0RFMTI4QiIsIkNPREUxMjhBIiwiQ09ERTEyOCIsInVuZGVmaW5lZCIsIl9DT0RFMTI4X0FVVE8iLCJyZXF1aXJlIiwiX0NPREUxMjhfQVVUTzIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX0NPREUxMjhBIiwiX0NPREUxMjhBMiIsIl9DT0RFMTI4QiIsIl9DT0RFMTI4QjIiLCJfQ09ERTEyOEMiLCJfQ09ERTEyOEMyIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiXSwibWFwcGluZ3MiOiJBQUFhOztBQUViQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxPQUFLLEVBQUUsSUFEb0MsRUFBN0M7O0FBR0FELE9BQU8sQ0FBQ0UsUUFBUixHQUFtQkYsT0FBTyxDQUFDRyxRQUFSLEdBQW1CSCxPQUFPLENBQUNJLFFBQVIsR0FBbUJKLE9BQU8sQ0FBQ0ssT0FBUixHQUFrQkMsU0FBM0U7O0FBRUEsSUFBSUMsYUFBYSxHQUFHQyxtQkFBTyxDQUFDLDRCQUFELENBQTNCOztBQUVBLElBQUlDLGNBQWMsR0FBR0Msc0JBQXNCLENBQUNILGFBQUQsQ0FBM0M7O0FBRUEsSUFBSUksU0FBUyxHQUFHSCxtQkFBTyxDQUFDLHdCQUFELENBQXZCOztBQUVBLElBQUlJLFVBQVUsR0FBR0Ysc0JBQXNCLENBQUNDLFNBQUQsQ0FBdkM7O0FBRUEsSUFBSUUsU0FBUyxHQUFHTCxtQkFBTyxDQUFDLHdCQUFELENBQXZCOztBQUVBLElBQUlNLFVBQVUsR0FBR0osc0JBQXNCLENBQUNHLFNBQUQsQ0FBdkM7O0FBRUEsSUFBSUUsU0FBUyxHQUFHUCxtQkFBTyxDQUFDLHdCQUFELENBQXZCOztBQUVBLElBQUlRLFVBQVUsR0FBR04sc0JBQXNCLENBQUNLLFNBQUQsQ0FBdkM7O0FBRUEsU0FBU0wsc0JBQVQsQ0FBZ0NPLEdBQWhDLEVBQXFDLENBQUUsT0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCLEVBQUVFLE9BQU8sRUFBRUYsR0FBWCxFQUFyQyxDQUF3RDs7QUFFL0ZqQixPQUFPLENBQUNLLE9BQVIsR0FBa0JJLGNBQWMsQ0FBQ1UsT0FBakM7QUFDQW5CLE9BQU8sQ0FBQ0ksUUFBUixHQUFtQlEsVUFBVSxDQUFDTyxPQUE5QjtBQUNBbkIsT0FBTyxDQUFDRyxRQUFSLEdBQW1CVyxVQUFVLENBQUNLLE9BQTlCO0FBQ0FuQixPQUFPLENBQUNFLFFBQVIsR0FBbUJjLFVBQVUsQ0FBQ0csT0FBOUIiLCJmaWxlIjoiNDg5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgdmFsdWU6IHRydWVcclxufSk7XHJcbmV4cG9ydHMuQ09ERTEyOEMgPSBleHBvcnRzLkNPREUxMjhCID0gZXhwb3J0cy5DT0RFMTI4QSA9IGV4cG9ydHMuQ09ERTEyOCA9IHVuZGVmaW5lZDtcclxuXHJcbnZhciBfQ09ERTEyOF9BVVRPID0gcmVxdWlyZSgnLi9DT0RFMTI4X0FVVE8uanMnKTtcclxuXHJcbnZhciBfQ09ERTEyOF9BVVRPMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0NPREUxMjhfQVVUTyk7XHJcblxyXG52YXIgX0NPREUxMjhBID0gcmVxdWlyZSgnLi9DT0RFMTI4QS5qcycpO1xyXG5cclxudmFyIF9DT0RFMTI4QTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9DT0RFMTI4QSk7XHJcblxyXG52YXIgX0NPREUxMjhCID0gcmVxdWlyZSgnLi9DT0RFMTI4Qi5qcycpO1xyXG5cclxudmFyIF9DT0RFMTI4QjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9DT0RFMTI4Qik7XHJcblxyXG52YXIgX0NPREUxMjhDID0gcmVxdWlyZSgnLi9DT0RFMTI4Qy5qcycpO1xyXG5cclxudmFyIF9DT0RFMTI4QzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9DT0RFMTI4Qyk7XHJcblxyXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxyXG5cclxuZXhwb3J0cy5DT0RFMTI4ID0gX0NPREUxMjhfQVVUTzIuZGVmYXVsdDtcclxuZXhwb3J0cy5DT0RFMTI4QSA9IF9DT0RFMTI4QTIuZGVmYXVsdDtcclxuZXhwb3J0cy5DT0RFMTI4QiA9IF9DT0RFMTI4QjIuZGVmYXVsdDtcclxuZXhwb3J0cy5DT0RFMTI4QyA9IF9DT0RFMTI4QzIuZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///489\n");

/***/ }),

/***/ 490:
/*!***************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/CODE128/CODE128_AUTO.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _CODE2 = __webpack_require__(/*! ./CODE128 */ 491);\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nvar _auto = __webpack_require__(/*! ./auto */ 493);\n\nvar _auto2 = _interopRequireDefault(_auto);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\nvar CODE128AUTO = function (_CODE) {\n  _inherits(CODE128AUTO, _CODE);\n\n  function CODE128AUTO(data, options) {\n    _classCallCheck(this, CODE128AUTO);\n\n    // ASCII value ranges 0-127, 200-211\n    if (/^[\\x00-\\x7F\\xC8-\\xD3]+$/.test(data)) {\n      var _this = _possibleConstructorReturn(this, (CODE128AUTO.__proto__ || Object.getPrototypeOf(CODE128AUTO)).call(this, (0, _auto2.default)(data), options));\n    } else {\n      var _this = _possibleConstructorReturn(this, (CODE128AUTO.__proto__ || Object.getPrototypeOf(CODE128AUTO)).call(this, data, options));\n    }\n    return _possibleConstructorReturn(_this);\n  }\n\n  return CODE128AUTO;\n}(_CODE3.default);\n\nexports.default = CODE128AUTO;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9DT0RFMTI4L0NPREUxMjhfQVVUTy5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9DT0RFMiIsInJlcXVpcmUiLCJfQ09ERTMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2F1dG8iLCJfYXV0bzIiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJjYWxsIiwiUmVmZXJlbmNlRXJyb3IiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJwcm90b3R5cGUiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsImVudW1lcmFibGUiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQ09ERTEyOEFVVE8iLCJfQ09ERSIsImRhdGEiLCJvcHRpb25zIiwidGVzdCIsIl90aGlzIiwiZ2V0UHJvdG90eXBlT2YiXSwibWFwcGluZ3MiOiJBQUFhOztBQUViQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzVDQyxPQUFLLEVBQUUsSUFEcUMsRUFBN0M7OztBQUlBLElBQUlDLE1BQU0sR0FBR0MsbUJBQU8sQ0FBQyxvQkFBRCxDQUFwQjs7QUFFQSxJQUFJQyxNQUFNLEdBQUdDLHNCQUFzQixDQUFDSCxNQUFELENBQW5DOztBQUVBLElBQUlJLEtBQUssR0FBR0gsbUJBQU8sQ0FBQyxpQkFBRCxDQUFuQjs7QUFFQSxJQUFJSSxNQUFNLEdBQUdGLHNCQUFzQixDQUFDQyxLQUFELENBQW5DOztBQUVBLFNBQVNELHNCQUFULENBQWdDRyxHQUFoQyxFQUFxQyxDQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFRSxPQUFPLEVBQUVGLEdBQVgsRUFBckMsQ0FBd0Q7O0FBRS9GLFNBQVNHLGVBQVQsQ0FBeUJDLFFBQXpCLEVBQW1DQyxXQUFuQyxFQUFnRCxDQUFFLElBQUksRUFBRUQsUUFBUSxZQUFZQyxXQUF0QixDQUFKLEVBQXdDLENBQUUsTUFBTSxJQUFJQyxTQUFKLENBQWMsbUNBQWQsQ0FBTixDQUEyRCxDQUFFOztBQUV6SixTQUFTQywwQkFBVCxDQUFvQ0MsSUFBcEMsRUFBMENDLElBQTFDLEVBQWdELENBQUUsSUFBSSxDQUFDRCxJQUFMLEVBQVcsQ0FBRSxNQUFNLElBQUlFLGNBQUosQ0FBbUIsMkRBQW5CLENBQU4sQ0FBd0YsQ0FBQyxPQUFPRCxJQUFJLEtBQUssT0FBT0EsSUFBUCxLQUFnQixRQUFoQixJQUE0QixPQUFPQSxJQUFQLEtBQWdCLFVBQWpELENBQUosR0FBbUVBLElBQW5FLEdBQTBFRCxJQUFqRixDQUF3Rjs7QUFFaFAsU0FBU0csU0FBVCxDQUFtQkMsUUFBbkIsRUFBNkJDLFVBQTdCLEVBQXlDLENBQUUsSUFBSSxPQUFPQSxVQUFQLEtBQXNCLFVBQXRCLElBQW9DQSxVQUFVLEtBQUssSUFBdkQsRUFBNkQsQ0FBRSxNQUFNLElBQUlQLFNBQUosQ0FBYyw2REFBNkQsT0FBT08sVUFBbEYsQ0FBTixDQUFzRyxDQUFDRCxRQUFRLENBQUNFLFNBQVQsR0FBcUJ4QixNQUFNLENBQUN5QixNQUFQLENBQWNGLFVBQVUsSUFBSUEsVUFBVSxDQUFDQyxTQUF2QyxFQUFrRCxFQUFFRSxXQUFXLEVBQUUsRUFBRXZCLEtBQUssRUFBRW1CLFFBQVQsRUFBbUJLLFVBQVUsRUFBRSxLQUEvQixFQUFzQ0MsUUFBUSxFQUFFLElBQWhELEVBQXNEQyxZQUFZLEVBQUUsSUFBcEUsRUFBZixFQUFsRCxDQUFyQixDQUFxSyxJQUFJTixVQUFKLEVBQWdCdkIsTUFBTSxDQUFDOEIsY0FBUCxHQUF3QjlCLE1BQU0sQ0FBQzhCLGNBQVAsQ0FBc0JSLFFBQXRCLEVBQWdDQyxVQUFoQyxDQUF4QixHQUFzRUQsUUFBUSxDQUFDUyxTQUFULEdBQXFCUixVQUEzRixDQUF3Rzs7QUFFOWUsSUFBSVMsV0FBVyxHQUFHLFVBQVVDLEtBQVYsRUFBaUI7QUFDbENaLFdBQVMsQ0FBQ1csV0FBRCxFQUFjQyxLQUFkLENBQVQ7O0FBRUEsV0FBU0QsV0FBVCxDQUFxQkUsSUFBckIsRUFBMkJDLE9BQTNCLEVBQW9DO0FBQ25DdEIsbUJBQWUsQ0FBQyxJQUFELEVBQU9tQixXQUFQLENBQWY7O0FBRUE7QUFDQSxRQUFJLDBCQUEwQkksSUFBMUIsQ0FBK0JGLElBQS9CLENBQUosRUFBMEM7QUFDekMsVUFBSUcsS0FBSyxHQUFHcEIsMEJBQTBCLENBQUMsSUFBRCxFQUFPLENBQUNlLFdBQVcsQ0FBQ0QsU0FBWixJQUF5Qi9CLE1BQU0sQ0FBQ3NDLGNBQVAsQ0FBc0JOLFdBQXRCLENBQTFCLEVBQThEYixJQUE5RCxDQUFtRSxJQUFuRSxFQUF5RSxDQUFDLEdBQUdWLE1BQU0sQ0FBQ0csT0FBWCxFQUFvQnNCLElBQXBCLENBQXpFLEVBQW9HQyxPQUFwRyxDQUFQLENBQXRDO0FBQ0EsS0FGRCxNQUVPO0FBQ04sVUFBSUUsS0FBSyxHQUFHcEIsMEJBQTBCLENBQUMsSUFBRCxFQUFPLENBQUNlLFdBQVcsQ0FBQ0QsU0FBWixJQUF5Qi9CLE1BQU0sQ0FBQ3NDLGNBQVAsQ0FBc0JOLFdBQXRCLENBQTFCLEVBQThEYixJQUE5RCxDQUFtRSxJQUFuRSxFQUF5RWUsSUFBekUsRUFBK0VDLE9BQS9FLENBQVAsQ0FBdEM7QUFDQTtBQUNELFdBQU9sQiwwQkFBMEIsQ0FBQ29CLEtBQUQsQ0FBakM7QUFDQTs7QUFFRCxTQUFPTCxXQUFQO0FBQ0EsQ0FoQmlCLENBZ0JoQjFCLE1BQU0sQ0FBQ00sT0FoQlMsQ0FBbEI7O0FBa0JBVixPQUFPLENBQUNVLE9BQVIsR0FBa0JvQixXQUFsQiIsImZpbGUiOiI0OTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuXHR2YWx1ZTogdHJ1ZVxyXG59KTtcclxuXHJcbnZhciBfQ09ERTIgPSByZXF1aXJlKCcuL0NPREUxMjgnKTtcclxuXHJcbnZhciBfQ09ERTMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9DT0RFMik7XHJcblxyXG52YXIgX2F1dG8gPSByZXF1aXJlKCcuL2F1dG8nKTtcclxuXHJcbnZhciBfYXV0bzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hdXRvKTtcclxuXHJcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XHJcblxyXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XHJcblxyXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cclxuXHJcbnZhciBDT0RFMTI4QVVUTyA9IGZ1bmN0aW9uIChfQ09ERSkge1xyXG5cdF9pbmhlcml0cyhDT0RFMTI4QVVUTywgX0NPREUpO1xyXG5cclxuXHRmdW5jdGlvbiBDT0RFMTI4QVVUTyhkYXRhLCBvcHRpb25zKSB7XHJcblx0XHRfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ09ERTEyOEFVVE8pO1xyXG5cclxuXHRcdC8vIEFTQ0lJIHZhbHVlIHJhbmdlcyAwLTEyNywgMjAwLTIxMVxyXG5cdFx0aWYgKC9eW1xceDAwLVxceDdGXFx4QzgtXFx4RDNdKyQvLnRlc3QoZGF0YSkpIHtcclxuXHRcdFx0dmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKENPREUxMjhBVVRPLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ09ERTEyOEFVVE8pKS5jYWxsKHRoaXMsICgwLCBfYXV0bzIuZGVmYXVsdCkoZGF0YSksIG9wdGlvbnMpKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChDT0RFMTI4QVVUTy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKENPREUxMjhBVVRPKSkuY2FsbCh0aGlzLCBkYXRhLCBvcHRpb25zKSk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMpO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIENPREUxMjhBVVRPO1xyXG59KF9DT0RFMy5kZWZhdWx0KTtcclxuXHJcbmV4cG9ydHMuZGVmYXVsdCA9IENPREUxMjhBVVRPOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///490\n");

/***/ }),

/***/ 491:
/*!**********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/CODE128/CODE128.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode.js */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nvar _constants = __webpack_require__(/*! ./constants */ 492);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\n// This is the master class,\n// it does require the start code to be included in the string\nvar CODE128 = function (_Barcode) {\n  _inherits(CODE128, _Barcode);\n\n  function CODE128(data, options) {\n    _classCallCheck(this, CODE128);\n\n    // Get array of ascii codes from data\n    var _this = _possibleConstructorReturn(this, (CODE128.__proto__ || Object.getPrototypeOf(CODE128)).call(this, data.substring(1), options));\n\n    _this.bytes = data.split('').map(function (char) {\n      return char.charCodeAt(0);\n    });\n    return _this;\n  }\n\n  _createClass(CODE128, [{\n    key: 'valid',\n    value: function valid() {\n      // ASCII value ranges 0-127, 200-211\n      return /^[\\x00-\\x7F\\xC8-\\xD3]+$/.test(this.data);\n\n    }\n\n    // The public encoding function\n  },\n  {\n    key: 'encode',\n    value: function encode() {\n      var bytes = this.bytes;\n      // Remove the start code from the bytes and set its index\n      var startIndex = bytes.shift() - 105;\n      // Get start set by index\n      var startSet = _constants.SET_BY_CODE[startIndex];\n\n      if (startSet === undefined) {\n        throw new RangeError('The encoding does not start with a start character.');\n      }\n\n      if (this.shouldEncodeAsEan128() === true) {\n        bytes.unshift(_constants.FNC1);\n      }\n\n      // Start encode with the right type\n      var encodingResult = CODE128.next(bytes, 1, startSet);\n\n      return {\n        text: this.text === this.data ? this.text.replace(/[^\\x20-\\x7E]/g, '') : this.text,\n        data:\n        // Add the start bits\n        CODE128.getBar(startIndex) +\n        // Add the encoded bits\n        encodingResult.result +\n        // Add the checksum\n        CODE128.getBar((encodingResult.checksum + startIndex) % _constants.MODULO) +\n        // Add the end bits\n        CODE128.getBar(_constants.STOP) };\n\n    }\n\n    // GS1-128/EAN-128\n  },\n  {\n    key: 'shouldEncodeAsEan128',\n    value: function shouldEncodeAsEan128() {\n      var isEAN128 = this.options.ean128 || false;\n      if (typeof isEAN128 === 'string') {\n        isEAN128 = isEAN128.toLowerCase() === 'true';\n      }\n      return isEAN128;\n    }\n\n    // Get a bar symbol by index\n  }],\n  [{\n    key: 'getBar',\n    value: function getBar(index) {\n      return _constants.BARS[index] ? _constants.BARS[index].toString() : '';\n    }\n\n    // Correct an index by a set and shift it from the bytes array\n  },\n  {\n    key: 'correctIndex',\n    value: function correctIndex(bytes, set) {\n      if (set === _constants.SET_A) {\n        var charCode = bytes.shift();\n        return charCode < 32 ? charCode + 64 : charCode - 32;\n      } else if (set === _constants.SET_B) {\n        return bytes.shift() - 32;\n      } else {\n        return (bytes.shift() - 48) * 10 + bytes.shift() - 48;\n      }\n    } },\n  {\n    key: 'next',\n    value: function next(bytes, pos, set) {\n      if (!bytes.length) {\n        return { result: '', checksum: 0 };\n      }\n\n      var nextCode = void 0,\n      index = void 0;\n\n      // Special characters\n      if (bytes[0] >= 200) {\n        index = bytes.shift() - 105;\n        var nextSet = _constants.SWAP[index];\n\n        // Swap to other set\n        if (nextSet !== undefined) {\n          nextCode = CODE128.next(bytes, pos + 1, nextSet);\n        }\n        // Continue on current set but encode a special character\n        else {\n            // Shift\n            if ((set === _constants.SET_A || set === _constants.SET_B) && index === _constants.SHIFT) {\n              // Convert the next character so that is encoded correctly\n              bytes[0] = set === _constants.SET_A ? bytes[0] > 95 ? bytes[0] - 96 : bytes[0] : bytes[0] < 32 ? bytes[0] + 96 : bytes[0];\n            }\n            nextCode = CODE128.next(bytes, pos + 1, set);\n          }\n      }\n      // Continue encoding\n      else {\n          index = CODE128.correctIndex(bytes, set);\n          nextCode = CODE128.next(bytes, pos + 1, set);\n        }\n\n      // Get the correct binary encoding and calculate the weight\n      var enc = CODE128.getBar(index);\n      var weight = index * pos;\n\n      return {\n        result: enc + nextCode.result,\n        checksum: weight + nextCode.checksum };\n\n    } }]);\n\n\n  return CODE128;\n}(_Barcode3.default);\n\nexports.default = CODE128;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9DT0RFMTI4L0NPREUxMjguanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImtleSIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwicHJvdG90eXBlIiwiX0JhcmNvZGUyIiwicmVxdWlyZSIsIl9CYXJjb2RlMyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfY29uc3RhbnRzIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIlR5cGVFcnJvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic2VsZiIsImNhbGwiLCJSZWZlcmVuY2VFcnJvciIsIl9pbmhlcml0cyIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJDT0RFMTI4IiwiX0JhcmNvZGUiLCJkYXRhIiwib3B0aW9ucyIsIl90aGlzIiwiZ2V0UHJvdG90eXBlT2YiLCJzdWJzdHJpbmciLCJieXRlcyIsInNwbGl0IiwibWFwIiwiY2hhciIsImNoYXJDb2RlQXQiLCJ2YWxpZCIsInRlc3QiLCJlbmNvZGUiLCJzdGFydEluZGV4Iiwic2hpZnQiLCJzdGFydFNldCIsIlNFVF9CWV9DT0RFIiwidW5kZWZpbmVkIiwiUmFuZ2VFcnJvciIsInNob3VsZEVuY29kZUFzRWFuMTI4IiwidW5zaGlmdCIsIkZOQzEiLCJlbmNvZGluZ1Jlc3VsdCIsIm5leHQiLCJ0ZXh0IiwicmVwbGFjZSIsImdldEJhciIsInJlc3VsdCIsImNoZWNrc3VtIiwiTU9EVUxPIiwiU1RPUCIsImlzRUFOMTI4IiwiZWFuMTI4IiwidG9Mb3dlckNhc2UiLCJpbmRleCIsIkJBUlMiLCJ0b1N0cmluZyIsImNvcnJlY3RJbmRleCIsInNldCIsIlNFVF9BIiwiY2hhckNvZGUiLCJTRVRfQiIsInBvcyIsIm5leHRDb2RlIiwibmV4dFNldCIsIlNXQVAiLCJTSElGVCIsImVuYyIsIndlaWdodCJdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDNUNDLE9BQUssRUFBRSxJQURxQyxFQUE3Qzs7O0FBSUEsSUFBSUMsWUFBWSxHQUFHLFlBQVksQ0FBRSxTQUFTQyxnQkFBVCxDQUEwQkMsTUFBMUIsRUFBa0NDLEtBQWxDLEVBQXlDLENBQUUsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRCxLQUFLLENBQUNFLE1BQTFCLEVBQWtDRCxDQUFDLEVBQW5DLEVBQXVDLENBQUUsSUFBSUUsVUFBVSxHQUFHSCxLQUFLLENBQUNDLENBQUQsQ0FBdEIsQ0FBMkJFLFVBQVUsQ0FBQ0MsVUFBWCxHQUF3QkQsVUFBVSxDQUFDQyxVQUFYLElBQXlCLEtBQWpELENBQXdERCxVQUFVLENBQUNFLFlBQVgsR0FBMEIsSUFBMUIsQ0FBZ0MsSUFBSSxXQUFXRixVQUFmLEVBQTJCQSxVQUFVLENBQUNHLFFBQVgsR0FBc0IsSUFBdEIsQ0FBNEJiLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkssTUFBdEIsRUFBOEJJLFVBQVUsQ0FBQ0ksR0FBekMsRUFBOENKLFVBQTlDLEVBQTRELENBQUUsQ0FBQyxPQUFPLFVBQVVLLFdBQVYsRUFBdUJDLFVBQXZCLEVBQW1DQyxXQUFuQyxFQUFnRCxDQUFFLElBQUlELFVBQUosRUFBZ0JYLGdCQUFnQixDQUFDVSxXQUFXLENBQUNHLFNBQWIsRUFBd0JGLFVBQXhCLENBQWhCLENBQXFELElBQUlDLFdBQUosRUFBaUJaLGdCQUFnQixDQUFDVSxXQUFELEVBQWNFLFdBQWQsQ0FBaEIsQ0FBNEMsT0FBT0YsV0FBUCxDQUFxQixDQUFoTixDQUFtTixDQUE5aEIsRUFBbkI7O0FBRUEsSUFBSUksU0FBUyxHQUFHQyxtQkFBTyxDQUFDLHdCQUFELENBQXZCOztBQUVBLElBQUlDLFNBQVMsR0FBR0Msc0JBQXNCLENBQUNILFNBQUQsQ0FBdEM7O0FBRUEsSUFBSUksVUFBVSxHQUFHSCxtQkFBTyxDQUFDLHNCQUFELENBQXhCOztBQUVBLFNBQVNFLHNCQUFULENBQWdDRSxHQUFoQyxFQUFxQyxDQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFRSxPQUFPLEVBQUVGLEdBQVgsRUFBckMsQ0FBd0Q7O0FBRS9GLFNBQVNHLGVBQVQsQ0FBeUJDLFFBQXpCLEVBQW1DYixXQUFuQyxFQUFnRCxDQUFFLElBQUksRUFBRWEsUUFBUSxZQUFZYixXQUF0QixDQUFKLEVBQXdDLENBQUUsTUFBTSxJQUFJYyxTQUFKLENBQWMsbUNBQWQsQ0FBTixDQUEyRCxDQUFFOztBQUV6SixTQUFTQywwQkFBVCxDQUFvQ0MsSUFBcEMsRUFBMENDLElBQTFDLEVBQWdELENBQUUsSUFBSSxDQUFDRCxJQUFMLEVBQVcsQ0FBRSxNQUFNLElBQUlFLGNBQUosQ0FBbUIsMkRBQW5CLENBQU4sQ0FBd0YsQ0FBQyxPQUFPRCxJQUFJLEtBQUssT0FBT0EsSUFBUCxLQUFnQixRQUFoQixJQUE0QixPQUFPQSxJQUFQLEtBQWdCLFVBQWpELENBQUosR0FBbUVBLElBQW5FLEdBQTBFRCxJQUFqRixDQUF3Rjs7QUFFaFAsU0FBU0csU0FBVCxDQUFtQkMsUUFBbkIsRUFBNkJDLFVBQTdCLEVBQXlDLENBQUUsSUFBSSxPQUFPQSxVQUFQLEtBQXNCLFVBQXRCLElBQW9DQSxVQUFVLEtBQUssSUFBdkQsRUFBNkQsQ0FBRSxNQUFNLElBQUlQLFNBQUosQ0FBYyw2REFBNkQsT0FBT08sVUFBbEYsQ0FBTixDQUFzRyxDQUFDRCxRQUFRLENBQUNqQixTQUFULEdBQXFCbEIsTUFBTSxDQUFDcUMsTUFBUCxDQUFjRCxVQUFVLElBQUlBLFVBQVUsQ0FBQ2xCLFNBQXZDLEVBQWtELEVBQUVvQixXQUFXLEVBQUUsRUFBRW5DLEtBQUssRUFBRWdDLFFBQVQsRUFBbUJ4QixVQUFVLEVBQUUsS0FBL0IsRUFBc0NFLFFBQVEsRUFBRSxJQUFoRCxFQUFzREQsWUFBWSxFQUFFLElBQXBFLEVBQWYsRUFBbEQsQ0FBckIsQ0FBcUssSUFBSXdCLFVBQUosRUFBZ0JwQyxNQUFNLENBQUN1QyxjQUFQLEdBQXdCdkMsTUFBTSxDQUFDdUMsY0FBUCxDQUFzQkosUUFBdEIsRUFBZ0NDLFVBQWhDLENBQXhCLEdBQXNFRCxRQUFRLENBQUNLLFNBQVQsR0FBcUJKLFVBQTNGLENBQXdHOztBQUU5ZTtBQUNBO0FBQ0EsSUFBSUssT0FBTyxHQUFHLFVBQVVDLFFBQVYsRUFBb0I7QUFDakNSLFdBQVMsQ0FBQ08sT0FBRCxFQUFVQyxRQUFWLENBQVQ7O0FBRUEsV0FBU0QsT0FBVCxDQUFpQkUsSUFBakIsRUFBdUJDLE9BQXZCLEVBQWdDO0FBQy9CakIsbUJBQWUsQ0FBQyxJQUFELEVBQU9jLE9BQVAsQ0FBZjs7QUFFQTtBQUNBLFFBQUlJLEtBQUssR0FBR2YsMEJBQTBCLENBQUMsSUFBRCxFQUFPLENBQUNXLE9BQU8sQ0FBQ0QsU0FBUixJQUFxQnhDLE1BQU0sQ0FBQzhDLGNBQVAsQ0FBc0JMLE9BQXRCLENBQXRCLEVBQXNEVCxJQUF0RCxDQUEyRCxJQUEzRCxFQUFpRVcsSUFBSSxDQUFDSSxTQUFMLENBQWUsQ0FBZixDQUFqRSxFQUFvRkgsT0FBcEYsQ0FBUCxDQUF0Qzs7QUFFQUMsU0FBSyxDQUFDRyxLQUFOLEdBQWNMLElBQUksQ0FBQ00sS0FBTCxDQUFXLEVBQVgsRUFBZUMsR0FBZixDQUFtQixVQUFVQyxJQUFWLEVBQWdCO0FBQ2hELGFBQU9BLElBQUksQ0FBQ0MsVUFBTCxDQUFnQixDQUFoQixDQUFQO0FBQ0EsS0FGYSxDQUFkO0FBR0EsV0FBT1AsS0FBUDtBQUNBOztBQUVEekMsY0FBWSxDQUFDcUMsT0FBRCxFQUFVLENBQUM7QUFDdEIzQixPQUFHLEVBQUUsT0FEaUI7QUFFdEJYLFNBQUssRUFBRSxTQUFTa0QsS0FBVCxHQUFpQjtBQUN2QjtBQUNBLGFBQVEsMEJBQTBCQyxJQUExQixDQUErQixLQUFLWCxJQUFwQyxDQUFSOztBQUVBOztBQUVEO0FBUnNCLEdBQUQ7QUFVbkI7QUFDRjdCLE9BQUcsRUFBRSxRQURIO0FBRUZYLFNBQUssRUFBRSxTQUFTb0QsTUFBVCxHQUFrQjtBQUN4QixVQUFJUCxLQUFLLEdBQUcsS0FBS0EsS0FBakI7QUFDQTtBQUNBLFVBQUlRLFVBQVUsR0FBR1IsS0FBSyxDQUFDUyxLQUFOLEtBQWdCLEdBQWpDO0FBQ0E7QUFDQSxVQUFJQyxRQUFRLEdBQUduQyxVQUFVLENBQUNvQyxXQUFYLENBQXVCSCxVQUF2QixDQUFmOztBQUVBLFVBQUlFLFFBQVEsS0FBS0UsU0FBakIsRUFBNEI7QUFDM0IsY0FBTSxJQUFJQyxVQUFKLENBQWUscURBQWYsQ0FBTjtBQUNBOztBQUVELFVBQUksS0FBS0Msb0JBQUwsT0FBZ0MsSUFBcEMsRUFBMEM7QUFDekNkLGFBQUssQ0FBQ2UsT0FBTixDQUFjeEMsVUFBVSxDQUFDeUMsSUFBekI7QUFDQTs7QUFFRDtBQUNBLFVBQUlDLGNBQWMsR0FBR3hCLE9BQU8sQ0FBQ3lCLElBQVIsQ0FBYWxCLEtBQWIsRUFBb0IsQ0FBcEIsRUFBdUJVLFFBQXZCLENBQXJCOztBQUVBLGFBQU87QUFDTlMsWUFBSSxFQUFFLEtBQUtBLElBQUwsS0FBYyxLQUFLeEIsSUFBbkIsR0FBMEIsS0FBS3dCLElBQUwsQ0FBVUMsT0FBVixDQUFrQixlQUFsQixFQUFtQyxFQUFuQyxDQUExQixHQUFtRSxLQUFLRCxJQUR4RTtBQUVOeEIsWUFBSTtBQUNKO0FBQ0FGLGVBQU8sQ0FBQzRCLE1BQVIsQ0FBZWIsVUFBZjtBQUNBO0FBQ0FTLHNCQUFjLENBQUNLLE1BRmY7QUFHQTtBQUNBN0IsZUFBTyxDQUFDNEIsTUFBUixDQUFlLENBQUNKLGNBQWMsQ0FBQ00sUUFBZixHQUEwQmYsVUFBM0IsSUFBeUNqQyxVQUFVLENBQUNpRCxNQUFuRSxDQUpBO0FBS0E7QUFDQS9CLGVBQU8sQ0FBQzRCLE1BQVIsQ0FBZTlDLFVBQVUsQ0FBQ2tELElBQTFCLENBVk0sRUFBUDs7QUFZQTs7QUFFRDtBQWxDRSxHQVZtQjtBQThDbkI7QUFDRjNELE9BQUcsRUFBRSxzQkFESDtBQUVGWCxTQUFLLEVBQUUsU0FBUzJELG9CQUFULEdBQWdDO0FBQ3RDLFVBQUlZLFFBQVEsR0FBRyxLQUFLOUIsT0FBTCxDQUFhK0IsTUFBYixJQUF1QixLQUF0QztBQUNBLFVBQUksT0FBT0QsUUFBUCxLQUFvQixRQUF4QixFQUFrQztBQUNqQ0EsZ0JBQVEsR0FBR0EsUUFBUSxDQUFDRSxXQUFULE9BQTJCLE1BQXRDO0FBQ0E7QUFDRCxhQUFPRixRQUFQO0FBQ0E7O0FBRUQ7QUFWRSxHQTlDbUIsQ0FBVjtBQTBEUixHQUFDO0FBQ0o1RCxPQUFHLEVBQUUsUUFERDtBQUVKWCxTQUFLLEVBQUUsU0FBU2tFLE1BQVQsQ0FBZ0JRLEtBQWhCLEVBQXVCO0FBQzdCLGFBQU90RCxVQUFVLENBQUN1RCxJQUFYLENBQWdCRCxLQUFoQixJQUF5QnRELFVBQVUsQ0FBQ3VELElBQVgsQ0FBZ0JELEtBQWhCLEVBQXVCRSxRQUF2QixFQUF6QixHQUE2RCxFQUFwRTtBQUNBOztBQUVEO0FBTkksR0FBRDtBQVFEO0FBQ0ZqRSxPQUFHLEVBQUUsY0FESDtBQUVGWCxTQUFLLEVBQUUsU0FBUzZFLFlBQVQsQ0FBc0JoQyxLQUF0QixFQUE2QmlDLEdBQTdCLEVBQWtDO0FBQ3hDLFVBQUlBLEdBQUcsS0FBSzFELFVBQVUsQ0FBQzJELEtBQXZCLEVBQThCO0FBQzdCLFlBQUlDLFFBQVEsR0FBR25DLEtBQUssQ0FBQ1MsS0FBTixFQUFmO0FBQ0EsZUFBTzBCLFFBQVEsR0FBRyxFQUFYLEdBQWdCQSxRQUFRLEdBQUcsRUFBM0IsR0FBZ0NBLFFBQVEsR0FBRyxFQUFsRDtBQUNBLE9BSEQsTUFHTyxJQUFJRixHQUFHLEtBQUsxRCxVQUFVLENBQUM2RCxLQUF2QixFQUE4QjtBQUNwQyxlQUFPcEMsS0FBSyxDQUFDUyxLQUFOLEtBQWdCLEVBQXZCO0FBQ0EsT0FGTSxNQUVBO0FBQ04sZUFBTyxDQUFDVCxLQUFLLENBQUNTLEtBQU4sS0FBZ0IsRUFBakIsSUFBdUIsRUFBdkIsR0FBNEJULEtBQUssQ0FBQ1MsS0FBTixFQUE1QixHQUE0QyxFQUFuRDtBQUNBO0FBQ0QsS0FYQyxFQVJDO0FBb0JEO0FBQ0YzQyxPQUFHLEVBQUUsTUFESDtBQUVGWCxTQUFLLEVBQUUsU0FBUytELElBQVQsQ0FBY2xCLEtBQWQsRUFBcUJxQyxHQUFyQixFQUEwQkosR0FBMUIsRUFBK0I7QUFDckMsVUFBSSxDQUFDakMsS0FBSyxDQUFDdkMsTUFBWCxFQUFtQjtBQUNsQixlQUFPLEVBQUU2RCxNQUFNLEVBQUUsRUFBVixFQUFjQyxRQUFRLEVBQUUsQ0FBeEIsRUFBUDtBQUNBOztBQUVELFVBQUllLFFBQVEsR0FBRyxLQUFLLENBQXBCO0FBQ0lULFdBQUssR0FBRyxLQUFLLENBRGpCOztBQUdBO0FBQ0EsVUFBSTdCLEtBQUssQ0FBQyxDQUFELENBQUwsSUFBWSxHQUFoQixFQUFxQjtBQUNwQjZCLGFBQUssR0FBRzdCLEtBQUssQ0FBQ1MsS0FBTixLQUFnQixHQUF4QjtBQUNBLFlBQUk4QixPQUFPLEdBQUdoRSxVQUFVLENBQUNpRSxJQUFYLENBQWdCWCxLQUFoQixDQUFkOztBQUVBO0FBQ0EsWUFBSVUsT0FBTyxLQUFLM0IsU0FBaEIsRUFBMkI7QUFDMUIwQixrQkFBUSxHQUFHN0MsT0FBTyxDQUFDeUIsSUFBUixDQUFhbEIsS0FBYixFQUFvQnFDLEdBQUcsR0FBRyxDQUExQixFQUE2QkUsT0FBN0IsQ0FBWDtBQUNBO0FBQ0Q7QUFIQSxhQUlLO0FBQ0g7QUFDQSxnQkFBSSxDQUFDTixHQUFHLEtBQUsxRCxVQUFVLENBQUMyRCxLQUFuQixJQUE0QkQsR0FBRyxLQUFLMUQsVUFBVSxDQUFDNkQsS0FBaEQsS0FBMERQLEtBQUssS0FBS3RELFVBQVUsQ0FBQ2tFLEtBQW5GLEVBQTBGO0FBQ3pGO0FBQ0F6QyxtQkFBSyxDQUFDLENBQUQsQ0FBTCxHQUFXaUMsR0FBRyxLQUFLMUQsVUFBVSxDQUFDMkQsS0FBbkIsR0FBMkJsQyxLQUFLLENBQUMsQ0FBRCxDQUFMLEdBQVcsRUFBWCxHQUFnQkEsS0FBSyxDQUFDLENBQUQsQ0FBTCxHQUFXLEVBQTNCLEdBQWdDQSxLQUFLLENBQUMsQ0FBRCxDQUFoRSxHQUFzRUEsS0FBSyxDQUFDLENBQUQsQ0FBTCxHQUFXLEVBQVgsR0FBZ0JBLEtBQUssQ0FBQyxDQUFELENBQUwsR0FBVyxFQUEzQixHQUFnQ0EsS0FBSyxDQUFDLENBQUQsQ0FBdEg7QUFDQTtBQUNEc0Msb0JBQVEsR0FBRzdDLE9BQU8sQ0FBQ3lCLElBQVIsQ0FBYWxCLEtBQWIsRUFBb0JxQyxHQUFHLEdBQUcsQ0FBMUIsRUFBNkJKLEdBQTdCLENBQVg7QUFDQTtBQUNGO0FBQ0Q7QUFsQkEsV0FtQks7QUFDSEosZUFBSyxHQUFHcEMsT0FBTyxDQUFDdUMsWUFBUixDQUFxQmhDLEtBQXJCLEVBQTRCaUMsR0FBNUIsQ0FBUjtBQUNBSyxrQkFBUSxHQUFHN0MsT0FBTyxDQUFDeUIsSUFBUixDQUFhbEIsS0FBYixFQUFvQnFDLEdBQUcsR0FBRyxDQUExQixFQUE2QkosR0FBN0IsQ0FBWDtBQUNBOztBQUVGO0FBQ0EsVUFBSVMsR0FBRyxHQUFHakQsT0FBTyxDQUFDNEIsTUFBUixDQUFlUSxLQUFmLENBQVY7QUFDQSxVQUFJYyxNQUFNLEdBQUdkLEtBQUssR0FBR1EsR0FBckI7O0FBRUEsYUFBTztBQUNOZixjQUFNLEVBQUVvQixHQUFHLEdBQUdKLFFBQVEsQ0FBQ2hCLE1BRGpCO0FBRU5DLGdCQUFRLEVBQUVvQixNQUFNLEdBQUdMLFFBQVEsQ0FBQ2YsUUFGdEIsRUFBUDs7QUFJQSxLQTNDQyxFQXBCQyxDQTFEUSxDQUFaOzs7QUE0SEEsU0FBTzlCLE9BQVA7QUFDQSxDQTVJYSxDQTRJWnBCLFNBQVMsQ0FBQ0ssT0E1SUUsQ0FBZDs7QUE4SUF4QixPQUFPLENBQUN3QixPQUFSLEdBQWtCZSxPQUFsQiIsImZpbGUiOiI0OTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuXHR2YWx1ZTogdHJ1ZVxyXG59KTtcclxuXHJcbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XHJcblxyXG52YXIgX0JhcmNvZGUyID0gcmVxdWlyZSgnLi4vQmFyY29kZS5qcycpO1xyXG5cclxudmFyIF9CYXJjb2RlMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0JhcmNvZGUyKTtcclxuXHJcbnZhciBfY29uc3RhbnRzID0gcmVxdWlyZSgnLi9jb25zdGFudHMnKTtcclxuXHJcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XHJcblxyXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XHJcblxyXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cclxuXHJcbi8vIFRoaXMgaXMgdGhlIG1hc3RlciBjbGFzcyxcclxuLy8gaXQgZG9lcyByZXF1aXJlIHRoZSBzdGFydCBjb2RlIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBzdHJpbmdcclxudmFyIENPREUxMjggPSBmdW5jdGlvbiAoX0JhcmNvZGUpIHtcclxuXHRfaW5oZXJpdHMoQ09ERTEyOCwgX0JhcmNvZGUpO1xyXG5cclxuXHRmdW5jdGlvbiBDT0RFMTI4KGRhdGEsIG9wdGlvbnMpIHtcclxuXHRcdF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDT0RFMTI4KTtcclxuXHJcblx0XHQvLyBHZXQgYXJyYXkgb2YgYXNjaWkgY29kZXMgZnJvbSBkYXRhXHJcblx0XHR2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoQ09ERTEyOC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKENPREUxMjgpKS5jYWxsKHRoaXMsIGRhdGEuc3Vic3RyaW5nKDEpLCBvcHRpb25zKSk7XHJcblxyXG5cdFx0X3RoaXMuYnl0ZXMgPSBkYXRhLnNwbGl0KCcnKS5tYXAoZnVuY3Rpb24gKGNoYXIpIHtcclxuXHRcdFx0cmV0dXJuIGNoYXIuY2hhckNvZGVBdCgwKTtcclxuXHRcdH0pO1xyXG5cdFx0cmV0dXJuIF90aGlzO1xyXG5cdH1cclxuXHJcblx0X2NyZWF0ZUNsYXNzKENPREUxMjgsIFt7XHJcblx0XHRrZXk6ICd2YWxpZCcsXHJcblx0XHR2YWx1ZTogZnVuY3Rpb24gdmFsaWQoKSB7XHJcblx0XHRcdC8vIEFTQ0lJIHZhbHVlIHJhbmdlcyAwLTEyNywgMjAwLTIxMVxyXG5cdFx0XHRyZXR1cm4gKC9eW1xceDAwLVxceDdGXFx4QzgtXFx4RDNdKyQvLnRlc3QodGhpcy5kYXRhKVxyXG5cdFx0XHQpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFRoZSBwdWJsaWMgZW5jb2RpbmcgZnVuY3Rpb25cclxuXHJcblx0fSwge1xyXG5cdFx0a2V5OiAnZW5jb2RlJyxcclxuXHRcdHZhbHVlOiBmdW5jdGlvbiBlbmNvZGUoKSB7XHJcblx0XHRcdHZhciBieXRlcyA9IHRoaXMuYnl0ZXM7XHJcblx0XHRcdC8vIFJlbW92ZSB0aGUgc3RhcnQgY29kZSBmcm9tIHRoZSBieXRlcyBhbmQgc2V0IGl0cyBpbmRleFxyXG5cdFx0XHR2YXIgc3RhcnRJbmRleCA9IGJ5dGVzLnNoaWZ0KCkgLSAxMDU7XHJcblx0XHRcdC8vIEdldCBzdGFydCBzZXQgYnkgaW5kZXhcclxuXHRcdFx0dmFyIHN0YXJ0U2V0ID0gX2NvbnN0YW50cy5TRVRfQllfQ09ERVtzdGFydEluZGV4XTtcclxuXHJcblx0XHRcdGlmIChzdGFydFNldCA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdFx0dGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSBlbmNvZGluZyBkb2VzIG5vdCBzdGFydCB3aXRoIGEgc3RhcnQgY2hhcmFjdGVyLicpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAodGhpcy5zaG91bGRFbmNvZGVBc0VhbjEyOCgpID09PSB0cnVlKSB7XHJcblx0XHRcdFx0Ynl0ZXMudW5zaGlmdChfY29uc3RhbnRzLkZOQzEpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBTdGFydCBlbmNvZGUgd2l0aCB0aGUgcmlnaHQgdHlwZVxyXG5cdFx0XHR2YXIgZW5jb2RpbmdSZXN1bHQgPSBDT0RFMTI4Lm5leHQoYnl0ZXMsIDEsIHN0YXJ0U2V0KTtcclxuXHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0dGV4dDogdGhpcy50ZXh0ID09PSB0aGlzLmRhdGEgPyB0aGlzLnRleHQucmVwbGFjZSgvW15cXHgyMC1cXHg3RV0vZywgJycpIDogdGhpcy50ZXh0LFxyXG5cdFx0XHRcdGRhdGE6XHJcblx0XHRcdFx0Ly8gQWRkIHRoZSBzdGFydCBiaXRzXHJcblx0XHRcdFx0Q09ERTEyOC5nZXRCYXIoc3RhcnRJbmRleCkgK1xyXG5cdFx0XHRcdC8vIEFkZCB0aGUgZW5jb2RlZCBiaXRzXHJcblx0XHRcdFx0ZW5jb2RpbmdSZXN1bHQucmVzdWx0ICtcclxuXHRcdFx0XHQvLyBBZGQgdGhlIGNoZWNrc3VtXHJcblx0XHRcdFx0Q09ERTEyOC5nZXRCYXIoKGVuY29kaW5nUmVzdWx0LmNoZWNrc3VtICsgc3RhcnRJbmRleCkgJSBfY29uc3RhbnRzLk1PRFVMTykgK1xyXG5cdFx0XHRcdC8vIEFkZCB0aGUgZW5kIGJpdHNcclxuXHRcdFx0XHRDT0RFMTI4LmdldEJhcihfY29uc3RhbnRzLlNUT1ApXHJcblx0XHRcdH07XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gR1MxLTEyOC9FQU4tMTI4XHJcblxyXG5cdH0sIHtcclxuXHRcdGtleTogJ3Nob3VsZEVuY29kZUFzRWFuMTI4JyxcclxuXHRcdHZhbHVlOiBmdW5jdGlvbiBzaG91bGRFbmNvZGVBc0VhbjEyOCgpIHtcclxuXHRcdFx0dmFyIGlzRUFOMTI4ID0gdGhpcy5vcHRpb25zLmVhbjEyOCB8fCBmYWxzZTtcclxuXHRcdFx0aWYgKHR5cGVvZiBpc0VBTjEyOCA9PT0gJ3N0cmluZycpIHtcclxuXHRcdFx0XHRpc0VBTjEyOCA9IGlzRUFOMTI4LnRvTG93ZXJDYXNlKCkgPT09ICd0cnVlJztcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gaXNFQU4xMjg7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gR2V0IGEgYmFyIHN5bWJvbCBieSBpbmRleFxyXG5cclxuXHR9XSwgW3tcclxuXHRcdGtleTogJ2dldEJhcicsXHJcblx0XHR2YWx1ZTogZnVuY3Rpb24gZ2V0QmFyKGluZGV4KSB7XHJcblx0XHRcdHJldHVybiBfY29uc3RhbnRzLkJBUlNbaW5kZXhdID8gX2NvbnN0YW50cy5CQVJTW2luZGV4XS50b1N0cmluZygpIDogJyc7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQ29ycmVjdCBhbiBpbmRleCBieSBhIHNldCBhbmQgc2hpZnQgaXQgZnJvbSB0aGUgYnl0ZXMgYXJyYXlcclxuXHJcblx0fSwge1xyXG5cdFx0a2V5OiAnY29ycmVjdEluZGV4JyxcclxuXHRcdHZhbHVlOiBmdW5jdGlvbiBjb3JyZWN0SW5kZXgoYnl0ZXMsIHNldCkge1xyXG5cdFx0XHRpZiAoc2V0ID09PSBfY29uc3RhbnRzLlNFVF9BKSB7XHJcblx0XHRcdFx0dmFyIGNoYXJDb2RlID0gYnl0ZXMuc2hpZnQoKTtcclxuXHRcdFx0XHRyZXR1cm4gY2hhckNvZGUgPCAzMiA/IGNoYXJDb2RlICsgNjQgOiBjaGFyQ29kZSAtIDMyO1xyXG5cdFx0XHR9IGVsc2UgaWYgKHNldCA9PT0gX2NvbnN0YW50cy5TRVRfQikge1xyXG5cdFx0XHRcdHJldHVybiBieXRlcy5zaGlmdCgpIC0gMzI7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cmV0dXJuIChieXRlcy5zaGlmdCgpIC0gNDgpICogMTAgKyBieXRlcy5zaGlmdCgpIC0gNDg7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9LCB7XHJcblx0XHRrZXk6ICduZXh0JyxcclxuXHRcdHZhbHVlOiBmdW5jdGlvbiBuZXh0KGJ5dGVzLCBwb3MsIHNldCkge1xyXG5cdFx0XHRpZiAoIWJ5dGVzLmxlbmd0aCkge1xyXG5cdFx0XHRcdHJldHVybiB7IHJlc3VsdDogJycsIGNoZWNrc3VtOiAwIH07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHZhciBuZXh0Q29kZSA9IHZvaWQgMCxcclxuXHRcdFx0ICAgIGluZGV4ID0gdm9pZCAwO1xyXG5cclxuXHRcdFx0Ly8gU3BlY2lhbCBjaGFyYWN0ZXJzXHJcblx0XHRcdGlmIChieXRlc1swXSA+PSAyMDApIHtcclxuXHRcdFx0XHRpbmRleCA9IGJ5dGVzLnNoaWZ0KCkgLSAxMDU7XHJcblx0XHRcdFx0dmFyIG5leHRTZXQgPSBfY29uc3RhbnRzLlNXQVBbaW5kZXhdO1xyXG5cclxuXHRcdFx0XHQvLyBTd2FwIHRvIG90aGVyIHNldFxyXG5cdFx0XHRcdGlmIChuZXh0U2V0ICE9PSB1bmRlZmluZWQpIHtcclxuXHRcdFx0XHRcdG5leHRDb2RlID0gQ09ERTEyOC5uZXh0KGJ5dGVzLCBwb3MgKyAxLCBuZXh0U2V0KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0Ly8gQ29udGludWUgb24gY3VycmVudCBzZXQgYnV0IGVuY29kZSBhIHNwZWNpYWwgY2hhcmFjdGVyXHJcblx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRcdC8vIFNoaWZ0XHJcblx0XHRcdFx0XHRcdGlmICgoc2V0ID09PSBfY29uc3RhbnRzLlNFVF9BIHx8IHNldCA9PT0gX2NvbnN0YW50cy5TRVRfQikgJiYgaW5kZXggPT09IF9jb25zdGFudHMuU0hJRlQpIHtcclxuXHRcdFx0XHRcdFx0XHQvLyBDb252ZXJ0IHRoZSBuZXh0IGNoYXJhY3RlciBzbyB0aGF0IGlzIGVuY29kZWQgY29ycmVjdGx5XHJcblx0XHRcdFx0XHRcdFx0Ynl0ZXNbMF0gPSBzZXQgPT09IF9jb25zdGFudHMuU0VUX0EgPyBieXRlc1swXSA+IDk1ID8gYnl0ZXNbMF0gLSA5NiA6IGJ5dGVzWzBdIDogYnl0ZXNbMF0gPCAzMiA/IGJ5dGVzWzBdICsgOTYgOiBieXRlc1swXTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRuZXh0Q29kZSA9IENPREUxMjgubmV4dChieXRlcywgcG9zICsgMSwgc2V0KTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHQvLyBDb250aW51ZSBlbmNvZGluZ1xyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRcdGluZGV4ID0gQ09ERTEyOC5jb3JyZWN0SW5kZXgoYnl0ZXMsIHNldCk7XHJcblx0XHRcdFx0XHRuZXh0Q29kZSA9IENPREUxMjgubmV4dChieXRlcywgcG9zICsgMSwgc2V0KTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBHZXQgdGhlIGNvcnJlY3QgYmluYXJ5IGVuY29kaW5nIGFuZCBjYWxjdWxhdGUgdGhlIHdlaWdodFxyXG5cdFx0XHR2YXIgZW5jID0gQ09ERTEyOC5nZXRCYXIoaW5kZXgpO1xyXG5cdFx0XHR2YXIgd2VpZ2h0ID0gaW5kZXggKiBwb3M7XHJcblxyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdHJlc3VsdDogZW5jICsgbmV4dENvZGUucmVzdWx0LFxyXG5cdFx0XHRcdGNoZWNrc3VtOiB3ZWlnaHQgKyBuZXh0Q29kZS5jaGVja3N1bVxyXG5cdFx0XHR9O1xyXG5cdFx0fVxyXG5cdH1dKTtcclxuXHJcblx0cmV0dXJuIENPREUxMjg7XHJcbn0oX0JhcmNvZGUzLmRlZmF1bHQpO1xyXG5cclxuZXhwb3J0cy5kZWZhdWx0ID0gQ09ERTEyODsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///491\n");

/***/ }),

/***/ 492:
/*!************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/CODE128/constants.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _SET_BY_CODE;\n\nfunction _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\n// constants for internal usage\nvar SET_A = exports.SET_A = 0;\nvar SET_B = exports.SET_B = 1;\nvar SET_C = exports.SET_C = 2;\n\n// Special characters\nvar SHIFT = exports.SHIFT = 98;\nvar START_A = exports.START_A = 103;\nvar START_B = exports.START_B = 104;\nvar START_C = exports.START_C = 105;\nvar MODULO = exports.MODULO = 103;\nvar STOP = exports.STOP = 106;\nvar FNC1 = exports.FNC1 = 207;\n\n// Get set by start code\nvar SET_BY_CODE = exports.SET_BY_CODE = (_SET_BY_CODE = {}, _defineProperty(_SET_BY_CODE, START_A, SET_A), _defineProperty(_SET_BY_CODE, START_B, SET_B), _defineProperty(_SET_BY_CODE, START_C, SET_C), _SET_BY_CODE);\n\n// Get next set by code\nvar SWAP = exports.SWAP = {\n  101: SET_A,\n  100: SET_B,\n  99: SET_C };\n\n\nvar A_START_CHAR = exports.A_START_CHAR = String.fromCharCode(208); // START_A + 105\nvar B_START_CHAR = exports.B_START_CHAR = String.fromCharCode(209); // START_B + 105\nvar C_START_CHAR = exports.C_START_CHAR = String.fromCharCode(210); // START_C + 105\n\n// 128A (Code Set A)\n// ASCII characters 00 to 95 (0–9, A–Z and control codes), special characters, and FNC 1–4\nvar A_CHARS = exports.A_CHARS = \"[\\x00-\\x5F\\xC8-\\xCF]\";\n\n// 128B (Code Set B)\n// ASCII characters 32 to 127 (0–9, A–Z, a–z), special characters, and FNC 1–4\nvar B_CHARS = exports.B_CHARS = \"[\\x20-\\x7F\\xC8-\\xCF]\";\n\n// 128C (Code Set C)\n// 00–99 (encodes two digits with a single code point) and FNC1\nvar C_CHARS = exports.C_CHARS = \"(\\xCF*[0-9]{2}\\xCF*)\";\n\n// CODE128 includes 107 symbols:\n// 103 data symbols, 3 start symbols (A, B and C), and 1 stop symbol (the last one)\n// Each symbol consist of three black bars (1) and three white spaces (0).\nvar BARS = exports.BARS = [11011001100, 11001101100, 11001100110, 10010011000, 10010001100, 10001001100, 10011001000, 10011000100, 10001100100, 11001001000, 11001000100, 11000100100, 10110011100, 10011011100, 10011001110, 10111001100, 10011101100, 10011100110, 11001110010, 11001011100, 11001001110, 11011100100, 11001110100, 11101101110, 11101001100, 11100101100, 11100100110, 11101100100, 11100110100, 11100110010, 11011011000, 11011000110, 11000110110, 10100011000, 10001011000, 10001000110, 10110001000, 10001101000, 10001100010, 11010001000, 11000101000, 11000100010, 10110111000, 10110001110, 10001101110, 10111011000, 10111000110, 10001110110, 11101110110, 11010001110, 11000101110, 11011101000, 11011100010, 11011101110, 11101011000, 11101000110, 11100010110, 11101101000, 11101100010, 11100011010, 11101111010, 11001000010, 11110001010, 10100110000, 10100001100, 10010110000, 10010000110, 10000101100, 10000100110, 10110010000, 10110000100, 10011010000, 10011000010, 10000110100, 10000110010, 11000010010, 11001010000, 11110111010, 11000010100, 10001111010, 10100111100, 10010111100, 10010011110, 10111100100, 10011110100, 10011110010, 11110100100, 11110010100, 11110010010, 11011011110, 11011110110, 11110110110, 10101111000, 10100011110, 10001011110, 10111101000, 10111100010, 11110101000, 11110100010, 10111011110, 10111101110, 11101011110, 11110101110, 11010000100, 11010010000, 11010011100, 1100011101011];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///492\n");

/***/ }),

/***/ 493:
/*!*******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/CODE128/auto.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _constants = __webpack_require__(/*! ./constants */ 492);\n\n// Match Set functions\nvar matchSetALength = function matchSetALength(string) {\n  return string.match(new RegExp('^' + _constants.A_CHARS + '*'))[0].length;\n};\nvar matchSetBLength = function matchSetBLength(string) {\n  return string.match(new RegExp('^' + _constants.B_CHARS + '*'))[0].length;\n};\nvar matchSetC = function matchSetC(string) {\n  return string.match(new RegExp('^' + _constants.C_CHARS + '*'))[0];\n};\n\n// CODE128A or CODE128B\nfunction autoSelectFromAB(string, isA) {\n  var ranges = isA ? _constants.A_CHARS : _constants.B_CHARS;\n  var untilC = string.match(new RegExp('^(' + ranges + '+?)(([0-9]{2}){2,})([^0-9]|$)'));\n\n  if (untilC) {\n    return untilC[1] + String.fromCharCode(204) + autoSelectFromC(string.substring(untilC[1].length));\n  }\n\n  var chars = string.match(new RegExp('^' + ranges + '+'))[0];\n\n  if (chars.length === string.length) {\n    return string;\n  }\n\n  return chars + String.fromCharCode(isA ? 205 : 206) + autoSelectFromAB(string.substring(chars.length), !isA);\n}\n\n// CODE128C\nfunction autoSelectFromC(string) {\n  var cMatch = matchSetC(string);\n  var length = cMatch.length;\n\n  if (length === string.length) {\n    return string;\n  }\n\n  string = string.substring(length);\n\n  // Select A/B depending on the longest match\n  var isA = matchSetALength(string) >= matchSetBLength(string);\n  return cMatch + String.fromCharCode(isA ? 206 : 205) + autoSelectFromAB(string, isA);\n}\n\n// Detect Code Set (A, B or C) and format the string\n\nexports.default = function (string) {\n  var newString = void 0;\n  var cLength = matchSetC(string).length;\n\n  // Select 128C if the string start with enough digits\n  if (cLength >= 2) {\n    newString = _constants.C_START_CHAR + autoSelectFromC(string);\n  } else {\n    // Select A/B depending on the longest match\n    var isA = matchSetALength(string) > matchSetBLength(string);\n    newString = (isA ? _constants.A_START_CHAR : _constants.B_START_CHAR) + autoSelectFromAB(string, isA);\n  }\n\n  return newString.replace(/[\\xCD\\xCE]([^])[\\xCD\\xCE]/, // Any sequence between 205 and 206 characters\n  function (match, char) {\n    return String.fromCharCode(203) + char;\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9DT0RFMTI4L2F1dG8uanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfY29uc3RhbnRzIiwicmVxdWlyZSIsIm1hdGNoU2V0QUxlbmd0aCIsInN0cmluZyIsIm1hdGNoIiwiUmVnRXhwIiwiQV9DSEFSUyIsImxlbmd0aCIsIm1hdGNoU2V0Qkxlbmd0aCIsIkJfQ0hBUlMiLCJtYXRjaFNldEMiLCJDX0NIQVJTIiwiYXV0b1NlbGVjdEZyb21BQiIsImlzQSIsInJhbmdlcyIsInVudGlsQyIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImF1dG9TZWxlY3RGcm9tQyIsInN1YnN0cmluZyIsImNoYXJzIiwiY01hdGNoIiwiZGVmYXVsdCIsIm5ld1N0cmluZyIsImNMZW5ndGgiLCJDX1NUQVJUX0NIQVIiLCJBX1NUQVJUX0NIQVIiLCJCX1NUQVJUX0NIQVIiLCJyZXBsYWNlIiwiY2hhciJdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDNUNDLE9BQUssRUFBRSxJQURxQyxFQUE3Qzs7O0FBSUEsSUFBSUMsVUFBVSxHQUFHQyxtQkFBTyxDQUFDLHNCQUFELENBQXhCOztBQUVBO0FBQ0EsSUFBSUMsZUFBZSxHQUFHLFNBQVNBLGVBQVQsQ0FBeUJDLE1BQXpCLEVBQWlDO0FBQ3RELFNBQU9BLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLElBQUlDLE1BQUosQ0FBVyxNQUFNTCxVQUFVLENBQUNNLE9BQWpCLEdBQTJCLEdBQXRDLENBQWIsRUFBeUQsQ0FBekQsRUFBNERDLE1BQW5FO0FBQ0EsQ0FGRDtBQUdBLElBQUlDLGVBQWUsR0FBRyxTQUFTQSxlQUFULENBQXlCTCxNQUF6QixFQUFpQztBQUN0RCxTQUFPQSxNQUFNLENBQUNDLEtBQVAsQ0FBYSxJQUFJQyxNQUFKLENBQVcsTUFBTUwsVUFBVSxDQUFDUyxPQUFqQixHQUEyQixHQUF0QyxDQUFiLEVBQXlELENBQXpELEVBQTRERixNQUFuRTtBQUNBLENBRkQ7QUFHQSxJQUFJRyxTQUFTLEdBQUcsU0FBU0EsU0FBVCxDQUFtQlAsTUFBbkIsRUFBMkI7QUFDMUMsU0FBT0EsTUFBTSxDQUFDQyxLQUFQLENBQWEsSUFBSUMsTUFBSixDQUFXLE1BQU1MLFVBQVUsQ0FBQ1csT0FBakIsR0FBMkIsR0FBdEMsQ0FBYixFQUF5RCxDQUF6RCxDQUFQO0FBQ0EsQ0FGRDs7QUFJQTtBQUNBLFNBQVNDLGdCQUFULENBQTBCVCxNQUExQixFQUFrQ1UsR0FBbEMsRUFBdUM7QUFDdEMsTUFBSUMsTUFBTSxHQUFHRCxHQUFHLEdBQUdiLFVBQVUsQ0FBQ00sT0FBZCxHQUF3Qk4sVUFBVSxDQUFDUyxPQUFuRDtBQUNBLE1BQUlNLE1BQU0sR0FBR1osTUFBTSxDQUFDQyxLQUFQLENBQWEsSUFBSUMsTUFBSixDQUFXLE9BQU9TLE1BQVAsR0FBZ0IsK0JBQTNCLENBQWIsQ0FBYjs7QUFFQSxNQUFJQyxNQUFKLEVBQVk7QUFDWCxXQUFPQSxNQUFNLENBQUMsQ0FBRCxDQUFOLEdBQVlDLE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQixHQUFwQixDQUFaLEdBQXVDQyxlQUFlLENBQUNmLE1BQU0sQ0FBQ2dCLFNBQVAsQ0FBaUJKLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVVIsTUFBM0IsQ0FBRCxDQUE3RDtBQUNBOztBQUVELE1BQUlhLEtBQUssR0FBR2pCLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLElBQUlDLE1BQUosQ0FBVyxNQUFNUyxNQUFOLEdBQWUsR0FBMUIsQ0FBYixFQUE2QyxDQUE3QyxDQUFaOztBQUVBLE1BQUlNLEtBQUssQ0FBQ2IsTUFBTixLQUFpQkosTUFBTSxDQUFDSSxNQUE1QixFQUFvQztBQUNuQyxXQUFPSixNQUFQO0FBQ0E7O0FBRUQsU0FBT2lCLEtBQUssR0FBR0osTUFBTSxDQUFDQyxZQUFQLENBQW9CSixHQUFHLEdBQUcsR0FBSCxHQUFTLEdBQWhDLENBQVIsR0FBK0NELGdCQUFnQixDQUFDVCxNQUFNLENBQUNnQixTQUFQLENBQWlCQyxLQUFLLENBQUNiLE1BQXZCLENBQUQsRUFBaUMsQ0FBQ00sR0FBbEMsQ0FBdEU7QUFDQTs7QUFFRDtBQUNBLFNBQVNLLGVBQVQsQ0FBeUJmLE1BQXpCLEVBQWlDO0FBQ2hDLE1BQUlrQixNQUFNLEdBQUdYLFNBQVMsQ0FBQ1AsTUFBRCxDQUF0QjtBQUNBLE1BQUlJLE1BQU0sR0FBR2MsTUFBTSxDQUFDZCxNQUFwQjs7QUFFQSxNQUFJQSxNQUFNLEtBQUtKLE1BQU0sQ0FBQ0ksTUFBdEIsRUFBOEI7QUFDN0IsV0FBT0osTUFBUDtBQUNBOztBQUVEQSxRQUFNLEdBQUdBLE1BQU0sQ0FBQ2dCLFNBQVAsQ0FBaUJaLE1BQWpCLENBQVQ7O0FBRUE7QUFDQSxNQUFJTSxHQUFHLEdBQUdYLGVBQWUsQ0FBQ0MsTUFBRCxDQUFmLElBQTJCSyxlQUFlLENBQUNMLE1BQUQsQ0FBcEQ7QUFDQSxTQUFPa0IsTUFBTSxHQUFHTCxNQUFNLENBQUNDLFlBQVAsQ0FBb0JKLEdBQUcsR0FBRyxHQUFILEdBQVMsR0FBaEMsQ0FBVCxHQUFnREQsZ0JBQWdCLENBQUNULE1BQUQsRUFBU1UsR0FBVCxDQUF2RTtBQUNBOztBQUVEOztBQUVBZixPQUFPLENBQUN3QixPQUFSLEdBQWtCLFVBQVVuQixNQUFWLEVBQWtCO0FBQ25DLE1BQUlvQixTQUFTLEdBQUcsS0FBSyxDQUFyQjtBQUNBLE1BQUlDLE9BQU8sR0FBR2QsU0FBUyxDQUFDUCxNQUFELENBQVQsQ0FBa0JJLE1BQWhDOztBQUVBO0FBQ0EsTUFBSWlCLE9BQU8sSUFBSSxDQUFmLEVBQWtCO0FBQ2pCRCxhQUFTLEdBQUd2QixVQUFVLENBQUN5QixZQUFYLEdBQTBCUCxlQUFlLENBQUNmLE1BQUQsQ0FBckQ7QUFDQSxHQUZELE1BRU87QUFDTjtBQUNBLFFBQUlVLEdBQUcsR0FBR1gsZUFBZSxDQUFDQyxNQUFELENBQWYsR0FBMEJLLGVBQWUsQ0FBQ0wsTUFBRCxDQUFuRDtBQUNBb0IsYUFBUyxHQUFHLENBQUNWLEdBQUcsR0FBR2IsVUFBVSxDQUFDMEIsWUFBZCxHQUE2QjFCLFVBQVUsQ0FBQzJCLFlBQTVDLElBQTREZixnQkFBZ0IsQ0FBQ1QsTUFBRCxFQUFTVSxHQUFULENBQXhGO0FBQ0E7O0FBRUQsU0FBT1UsU0FBUyxDQUFDSyxPQUFWLENBQWtCLDJCQUFsQixFQUErQztBQUN0RCxZQUFVeEIsS0FBVixFQUFpQnlCLElBQWpCLEVBQXVCO0FBQ3RCLFdBQU9iLE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQixHQUFwQixJQUEyQlksSUFBbEM7QUFDQSxHQUhNLENBQVA7QUFJQSxDQWpCRCIsImZpbGUiOiI0OTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuXHR2YWx1ZTogdHJ1ZVxyXG59KTtcclxuXHJcbnZhciBfY29uc3RhbnRzID0gcmVxdWlyZSgnLi9jb25zdGFudHMnKTtcclxuXHJcbi8vIE1hdGNoIFNldCBmdW5jdGlvbnNcclxudmFyIG1hdGNoU2V0QUxlbmd0aCA9IGZ1bmN0aW9uIG1hdGNoU2V0QUxlbmd0aChzdHJpbmcpIHtcclxuXHRyZXR1cm4gc3RyaW5nLm1hdGNoKG5ldyBSZWdFeHAoJ14nICsgX2NvbnN0YW50cy5BX0NIQVJTICsgJyonKSlbMF0ubGVuZ3RoO1xyXG59O1xyXG52YXIgbWF0Y2hTZXRCTGVuZ3RoID0gZnVuY3Rpb24gbWF0Y2hTZXRCTGVuZ3RoKHN0cmluZykge1xyXG5cdHJldHVybiBzdHJpbmcubWF0Y2gobmV3IFJlZ0V4cCgnXicgKyBfY29uc3RhbnRzLkJfQ0hBUlMgKyAnKicpKVswXS5sZW5ndGg7XHJcbn07XHJcbnZhciBtYXRjaFNldEMgPSBmdW5jdGlvbiBtYXRjaFNldEMoc3RyaW5nKSB7XHJcblx0cmV0dXJuIHN0cmluZy5tYXRjaChuZXcgUmVnRXhwKCdeJyArIF9jb25zdGFudHMuQ19DSEFSUyArICcqJykpWzBdO1xyXG59O1xyXG5cclxuLy8gQ09ERTEyOEEgb3IgQ09ERTEyOEJcclxuZnVuY3Rpb24gYXV0b1NlbGVjdEZyb21BQihzdHJpbmcsIGlzQSkge1xyXG5cdHZhciByYW5nZXMgPSBpc0EgPyBfY29uc3RhbnRzLkFfQ0hBUlMgOiBfY29uc3RhbnRzLkJfQ0hBUlM7XHJcblx0dmFyIHVudGlsQyA9IHN0cmluZy5tYXRjaChuZXcgUmVnRXhwKCdeKCcgKyByYW5nZXMgKyAnKz8pKChbMC05XXsyfSl7Mix9KShbXjAtOV18JCknKSk7XHJcblxyXG5cdGlmICh1bnRpbEMpIHtcclxuXHRcdHJldHVybiB1bnRpbENbMV0gKyBTdHJpbmcuZnJvbUNoYXJDb2RlKDIwNCkgKyBhdXRvU2VsZWN0RnJvbUMoc3RyaW5nLnN1YnN0cmluZyh1bnRpbENbMV0ubGVuZ3RoKSk7XHJcblx0fVxyXG5cclxuXHR2YXIgY2hhcnMgPSBzdHJpbmcubWF0Y2gobmV3IFJlZ0V4cCgnXicgKyByYW5nZXMgKyAnKycpKVswXTtcclxuXHJcblx0aWYgKGNoYXJzLmxlbmd0aCA9PT0gc3RyaW5nLmxlbmd0aCkge1xyXG5cdFx0cmV0dXJuIHN0cmluZztcclxuXHR9XHJcblxyXG5cdHJldHVybiBjaGFycyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaXNBID8gMjA1IDogMjA2KSArIGF1dG9TZWxlY3RGcm9tQUIoc3RyaW5nLnN1YnN0cmluZyhjaGFycy5sZW5ndGgpLCAhaXNBKTtcclxufVxyXG5cclxuLy8gQ09ERTEyOENcclxuZnVuY3Rpb24gYXV0b1NlbGVjdEZyb21DKHN0cmluZykge1xyXG5cdHZhciBjTWF0Y2ggPSBtYXRjaFNldEMoc3RyaW5nKTtcclxuXHR2YXIgbGVuZ3RoID0gY01hdGNoLmxlbmd0aDtcclxuXHJcblx0aWYgKGxlbmd0aCA9PT0gc3RyaW5nLmxlbmd0aCkge1xyXG5cdFx0cmV0dXJuIHN0cmluZztcclxuXHR9XHJcblxyXG5cdHN0cmluZyA9IHN0cmluZy5zdWJzdHJpbmcobGVuZ3RoKTtcclxuXHJcblx0Ly8gU2VsZWN0IEEvQiBkZXBlbmRpbmcgb24gdGhlIGxvbmdlc3QgbWF0Y2hcclxuXHR2YXIgaXNBID0gbWF0Y2hTZXRBTGVuZ3RoKHN0cmluZykgPj0gbWF0Y2hTZXRCTGVuZ3RoKHN0cmluZyk7XHJcblx0cmV0dXJuIGNNYXRjaCArIFN0cmluZy5mcm9tQ2hhckNvZGUoaXNBID8gMjA2IDogMjA1KSArIGF1dG9TZWxlY3RGcm9tQUIoc3RyaW5nLCBpc0EpO1xyXG59XHJcblxyXG4vLyBEZXRlY3QgQ29kZSBTZXQgKEEsIEIgb3IgQykgYW5kIGZvcm1hdCB0aGUgc3RyaW5nXHJcblxyXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoc3RyaW5nKSB7XHJcblx0dmFyIG5ld1N0cmluZyA9IHZvaWQgMDtcclxuXHR2YXIgY0xlbmd0aCA9IG1hdGNoU2V0QyhzdHJpbmcpLmxlbmd0aDtcclxuXHJcblx0Ly8gU2VsZWN0IDEyOEMgaWYgdGhlIHN0cmluZyBzdGFydCB3aXRoIGVub3VnaCBkaWdpdHNcclxuXHRpZiAoY0xlbmd0aCA+PSAyKSB7XHJcblx0XHRuZXdTdHJpbmcgPSBfY29uc3RhbnRzLkNfU1RBUlRfQ0hBUiArIGF1dG9TZWxlY3RGcm9tQyhzdHJpbmcpO1xyXG5cdH0gZWxzZSB7XHJcblx0XHQvLyBTZWxlY3QgQS9CIGRlcGVuZGluZyBvbiB0aGUgbG9uZ2VzdCBtYXRjaFxyXG5cdFx0dmFyIGlzQSA9IG1hdGNoU2V0QUxlbmd0aChzdHJpbmcpID4gbWF0Y2hTZXRCTGVuZ3RoKHN0cmluZyk7XHJcblx0XHRuZXdTdHJpbmcgPSAoaXNBID8gX2NvbnN0YW50cy5BX1NUQVJUX0NIQVIgOiBfY29uc3RhbnRzLkJfU1RBUlRfQ0hBUikgKyBhdXRvU2VsZWN0RnJvbUFCKHN0cmluZywgaXNBKTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBuZXdTdHJpbmcucmVwbGFjZSgvW1xceENEXFx4Q0VdKFteXSlbXFx4Q0RcXHhDRV0vLCAvLyBBbnkgc2VxdWVuY2UgYmV0d2VlbiAyMDUgYW5kIDIwNiBjaGFyYWN0ZXJzXHJcblx0ZnVuY3Rpb24gKG1hdGNoLCBjaGFyKSB7XHJcblx0XHRyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSgyMDMpICsgY2hhcjtcclxuXHR9KTtcclxufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///493\n");

/***/ }),

/***/ 494:
/*!***********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/CODE128/CODE128A.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _CODE2 = __webpack_require__(/*! ./CODE128.js */ 491);\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nvar _constants = __webpack_require__(/*! ./constants */ 492);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\nvar CODE128A = function (_CODE) {\n  _inherits(CODE128A, _CODE);\n\n  function CODE128A(string, options) {\n    _classCallCheck(this, CODE128A);\n\n    return _possibleConstructorReturn(this, (CODE128A.__proto__ || Object.getPrototypeOf(CODE128A)).call(this, _constants.A_START_CHAR + string, options));\n  }\n\n  _createClass(CODE128A, [{\n    key: 'valid',\n    value: function valid() {\n      return new RegExp('^' + _constants.A_CHARS + '+$').test(this.data);\n    } }]);\n\n\n  return CODE128A;\n}(_CODE3.default);\n\nexports.default = CODE128A;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9DT0RFMTI4L0NPREUxMjhBLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJrZXkiLCJDb25zdHJ1Y3RvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIl9DT0RFMiIsInJlcXVpcmUiLCJfQ09ERTMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2NvbnN0YW50cyIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJUeXBlRXJyb3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJjYWxsIiwiUmVmZXJlbmNlRXJyb3IiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQ09ERTEyOEEiLCJfQ09ERSIsInN0cmluZyIsIm9wdGlvbnMiLCJnZXRQcm90b3R5cGVPZiIsIkFfU1RBUlRfQ0hBUiIsInZhbGlkIiwiUmVnRXhwIiwiQV9DSEFSUyIsInRlc3QiLCJkYXRhIl0sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUM1Q0MsT0FBSyxFQUFFLElBRHFDLEVBQTdDOzs7QUFJQSxJQUFJQyxZQUFZLEdBQUcsWUFBWSxDQUFFLFNBQVNDLGdCQUFULENBQTBCQyxNQUExQixFQUFrQ0MsS0FBbEMsRUFBeUMsQ0FBRSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdELEtBQUssQ0FBQ0UsTUFBMUIsRUFBa0NELENBQUMsRUFBbkMsRUFBdUMsQ0FBRSxJQUFJRSxVQUFVLEdBQUdILEtBQUssQ0FBQ0MsQ0FBRCxDQUF0QixDQUEyQkUsVUFBVSxDQUFDQyxVQUFYLEdBQXdCRCxVQUFVLENBQUNDLFVBQVgsSUFBeUIsS0FBakQsQ0FBd0RELFVBQVUsQ0FBQ0UsWUFBWCxHQUEwQixJQUExQixDQUFnQyxJQUFJLFdBQVdGLFVBQWYsRUFBMkJBLFVBQVUsQ0FBQ0csUUFBWCxHQUFzQixJQUF0QixDQUE0QmIsTUFBTSxDQUFDQyxjQUFQLENBQXNCSyxNQUF0QixFQUE4QkksVUFBVSxDQUFDSSxHQUF6QyxFQUE4Q0osVUFBOUMsRUFBNEQsQ0FBRSxDQUFDLE9BQU8sVUFBVUssV0FBVixFQUF1QkMsVUFBdkIsRUFBbUNDLFdBQW5DLEVBQWdELENBQUUsSUFBSUQsVUFBSixFQUFnQlgsZ0JBQWdCLENBQUNVLFdBQVcsQ0FBQ0csU0FBYixFQUF3QkYsVUFBeEIsQ0FBaEIsQ0FBcUQsSUFBSUMsV0FBSixFQUFpQlosZ0JBQWdCLENBQUNVLFdBQUQsRUFBY0UsV0FBZCxDQUFoQixDQUE0QyxPQUFPRixXQUFQLENBQXFCLENBQWhOLENBQW1OLENBQTloQixFQUFuQjs7QUFFQSxJQUFJSSxNQUFNLEdBQUdDLG1CQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHQyxzQkFBc0IsQ0FBQ0gsTUFBRCxDQUFuQzs7QUFFQSxJQUFJSSxVQUFVLEdBQUdILG1CQUFPLENBQUMsc0JBQUQsQ0FBeEI7O0FBRUEsU0FBU0Usc0JBQVQsQ0FBZ0NFLEdBQWhDLEVBQXFDLENBQUUsT0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCLEVBQUVFLE9BQU8sRUFBRUYsR0FBWCxFQUFyQyxDQUF3RDs7QUFFL0YsU0FBU0csZUFBVCxDQUF5QkMsUUFBekIsRUFBbUNiLFdBQW5DLEVBQWdELENBQUUsSUFBSSxFQUFFYSxRQUFRLFlBQVliLFdBQXRCLENBQUosRUFBd0MsQ0FBRSxNQUFNLElBQUljLFNBQUosQ0FBYyxtQ0FBZCxDQUFOLENBQTJELENBQUU7O0FBRXpKLFNBQVNDLDBCQUFULENBQW9DQyxJQUFwQyxFQUEwQ0MsSUFBMUMsRUFBZ0QsQ0FBRSxJQUFJLENBQUNELElBQUwsRUFBVyxDQUFFLE1BQU0sSUFBSUUsY0FBSixDQUFtQiwyREFBbkIsQ0FBTixDQUF3RixDQUFDLE9BQU9ELElBQUksS0FBSyxPQUFPQSxJQUFQLEtBQWdCLFFBQWhCLElBQTRCLE9BQU9BLElBQVAsS0FBZ0IsVUFBakQsQ0FBSixHQUFtRUEsSUFBbkUsR0FBMEVELElBQWpGLENBQXdGOztBQUVoUCxTQUFTRyxTQUFULENBQW1CQyxRQUFuQixFQUE2QkMsVUFBN0IsRUFBeUMsQ0FBRSxJQUFJLE9BQU9BLFVBQVAsS0FBc0IsVUFBdEIsSUFBb0NBLFVBQVUsS0FBSyxJQUF2RCxFQUE2RCxDQUFFLE1BQU0sSUFBSVAsU0FBSixDQUFjLDZEQUE2RCxPQUFPTyxVQUFsRixDQUFOLENBQXNHLENBQUNELFFBQVEsQ0FBQ2pCLFNBQVQsR0FBcUJsQixNQUFNLENBQUNxQyxNQUFQLENBQWNELFVBQVUsSUFBSUEsVUFBVSxDQUFDbEIsU0FBdkMsRUFBa0QsRUFBRW9CLFdBQVcsRUFBRSxFQUFFbkMsS0FBSyxFQUFFZ0MsUUFBVCxFQUFtQnhCLFVBQVUsRUFBRSxLQUEvQixFQUFzQ0UsUUFBUSxFQUFFLElBQWhELEVBQXNERCxZQUFZLEVBQUUsSUFBcEUsRUFBZixFQUFsRCxDQUFyQixDQUFxSyxJQUFJd0IsVUFBSixFQUFnQnBDLE1BQU0sQ0FBQ3VDLGNBQVAsR0FBd0J2QyxNQUFNLENBQUN1QyxjQUFQLENBQXNCSixRQUF0QixFQUFnQ0MsVUFBaEMsQ0FBeEIsR0FBc0VELFFBQVEsQ0FBQ0ssU0FBVCxHQUFxQkosVUFBM0YsQ0FBd0c7O0FBRTllLElBQUlLLFFBQVEsR0FBRyxVQUFVQyxLQUFWLEVBQWlCO0FBQy9CUixXQUFTLENBQUNPLFFBQUQsRUFBV0MsS0FBWCxDQUFUOztBQUVBLFdBQVNELFFBQVQsQ0FBa0JFLE1BQWxCLEVBQTBCQyxPQUExQixFQUFtQztBQUNsQ2pCLG1CQUFlLENBQUMsSUFBRCxFQUFPYyxRQUFQLENBQWY7O0FBRUEsV0FBT1gsMEJBQTBCLENBQUMsSUFBRCxFQUFPLENBQUNXLFFBQVEsQ0FBQ0QsU0FBVCxJQUFzQnhDLE1BQU0sQ0FBQzZDLGNBQVAsQ0FBc0JKLFFBQXRCLENBQXZCLEVBQXdEVCxJQUF4RCxDQUE2RCxJQUE3RCxFQUFtRVQsVUFBVSxDQUFDdUIsWUFBWCxHQUEwQkgsTUFBN0YsRUFBcUdDLE9BQXJHLENBQVAsQ0FBakM7QUFDQTs7QUFFRHhDLGNBQVksQ0FBQ3FDLFFBQUQsRUFBVyxDQUFDO0FBQ3ZCM0IsT0FBRyxFQUFFLE9BRGtCO0FBRXZCWCxTQUFLLEVBQUUsU0FBUzRDLEtBQVQsR0FBaUI7QUFDdkIsYUFBTyxJQUFJQyxNQUFKLENBQVcsTUFBTXpCLFVBQVUsQ0FBQzBCLE9BQWpCLEdBQTJCLElBQXRDLEVBQTRDQyxJQUE1QyxDQUFpRCxLQUFLQyxJQUF0RCxDQUFQO0FBQ0EsS0FKc0IsRUFBRCxDQUFYLENBQVo7OztBQU9BLFNBQU9WLFFBQVA7QUFDQSxDQWpCYyxDQWlCYnBCLE1BQU0sQ0FBQ0ssT0FqQk0sQ0FBZjs7QUFtQkF4QixPQUFPLENBQUN3QixPQUFSLEdBQWtCZSxRQUFsQiIsImZpbGUiOiI0OTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuXHR2YWx1ZTogdHJ1ZVxyXG59KTtcclxuXHJcbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XHJcblxyXG52YXIgX0NPREUyID0gcmVxdWlyZSgnLi9DT0RFMTI4LmpzJyk7XHJcblxyXG52YXIgX0NPREUzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQ09ERTIpO1xyXG5cclxudmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCcuL2NvbnN0YW50cycpO1xyXG5cclxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cclxuXHJcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XHJcblxyXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cclxuXHJcbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxyXG5cclxudmFyIENPREUxMjhBID0gZnVuY3Rpb24gKF9DT0RFKSB7XHJcblx0X2luaGVyaXRzKENPREUxMjhBLCBfQ09ERSk7XHJcblxyXG5cdGZ1bmN0aW9uIENPREUxMjhBKHN0cmluZywgb3B0aW9ucykge1xyXG5cdFx0X2NsYXNzQ2FsbENoZWNrKHRoaXMsIENPREUxMjhBKTtcclxuXHJcblx0XHRyZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKENPREUxMjhBLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ09ERTEyOEEpKS5jYWxsKHRoaXMsIF9jb25zdGFudHMuQV9TVEFSVF9DSEFSICsgc3RyaW5nLCBvcHRpb25zKSk7XHJcblx0fVxyXG5cclxuXHRfY3JlYXRlQ2xhc3MoQ09ERTEyOEEsIFt7XHJcblx0XHRrZXk6ICd2YWxpZCcsXHJcblx0XHR2YWx1ZTogZnVuY3Rpb24gdmFsaWQoKSB7XHJcblx0XHRcdHJldHVybiBuZXcgUmVnRXhwKCdeJyArIF9jb25zdGFudHMuQV9DSEFSUyArICcrJCcpLnRlc3QodGhpcy5kYXRhKTtcclxuXHRcdH1cclxuXHR9XSk7XHJcblxyXG5cdHJldHVybiBDT0RFMTI4QTtcclxufShfQ09ERTMuZGVmYXVsdCk7XHJcblxyXG5leHBvcnRzLmRlZmF1bHQgPSBDT0RFMTI4QTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///494\n");

/***/ }),

/***/ 495:
/*!***********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/CODE128/CODE128B.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _CODE2 = __webpack_require__(/*! ./CODE128.js */ 491);\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nvar _constants = __webpack_require__(/*! ./constants */ 492);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\nvar CODE128B = function (_CODE) {\n  _inherits(CODE128B, _CODE);\n\n  function CODE128B(string, options) {\n    _classCallCheck(this, CODE128B);\n\n    return _possibleConstructorReturn(this, (CODE128B.__proto__ || Object.getPrototypeOf(CODE128B)).call(this, _constants.B_START_CHAR + string, options));\n  }\n\n  _createClass(CODE128B, [{\n    key: 'valid',\n    value: function valid() {\n      return new RegExp('^' + _constants.B_CHARS + '+$').test(this.data);\n    } }]);\n\n\n  return CODE128B;\n}(_CODE3.default);\n\nexports.default = CODE128B;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9DT0RFMTI4L0NPREUxMjhCLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJrZXkiLCJDb25zdHJ1Y3RvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIl9DT0RFMiIsInJlcXVpcmUiLCJfQ09ERTMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2NvbnN0YW50cyIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJUeXBlRXJyb3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJjYWxsIiwiUmVmZXJlbmNlRXJyb3IiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQ09ERTEyOEIiLCJfQ09ERSIsInN0cmluZyIsIm9wdGlvbnMiLCJnZXRQcm90b3R5cGVPZiIsIkJfU1RBUlRfQ0hBUiIsInZhbGlkIiwiUmVnRXhwIiwiQl9DSEFSUyIsInRlc3QiLCJkYXRhIl0sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUM1Q0MsT0FBSyxFQUFFLElBRHFDLEVBQTdDOzs7QUFJQSxJQUFJQyxZQUFZLEdBQUcsWUFBWSxDQUFFLFNBQVNDLGdCQUFULENBQTBCQyxNQUExQixFQUFrQ0MsS0FBbEMsRUFBeUMsQ0FBRSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdELEtBQUssQ0FBQ0UsTUFBMUIsRUFBa0NELENBQUMsRUFBbkMsRUFBdUMsQ0FBRSxJQUFJRSxVQUFVLEdBQUdILEtBQUssQ0FBQ0MsQ0FBRCxDQUF0QixDQUEyQkUsVUFBVSxDQUFDQyxVQUFYLEdBQXdCRCxVQUFVLENBQUNDLFVBQVgsSUFBeUIsS0FBakQsQ0FBd0RELFVBQVUsQ0FBQ0UsWUFBWCxHQUEwQixJQUExQixDQUFnQyxJQUFJLFdBQVdGLFVBQWYsRUFBMkJBLFVBQVUsQ0FBQ0csUUFBWCxHQUFzQixJQUF0QixDQUE0QmIsTUFBTSxDQUFDQyxjQUFQLENBQXNCSyxNQUF0QixFQUE4QkksVUFBVSxDQUFDSSxHQUF6QyxFQUE4Q0osVUFBOUMsRUFBNEQsQ0FBRSxDQUFDLE9BQU8sVUFBVUssV0FBVixFQUF1QkMsVUFBdkIsRUFBbUNDLFdBQW5DLEVBQWdELENBQUUsSUFBSUQsVUFBSixFQUFnQlgsZ0JBQWdCLENBQUNVLFdBQVcsQ0FBQ0csU0FBYixFQUF3QkYsVUFBeEIsQ0FBaEIsQ0FBcUQsSUFBSUMsV0FBSixFQUFpQlosZ0JBQWdCLENBQUNVLFdBQUQsRUFBY0UsV0FBZCxDQUFoQixDQUE0QyxPQUFPRixXQUFQLENBQXFCLENBQWhOLENBQW1OLENBQTloQixFQUFuQjs7QUFFQSxJQUFJSSxNQUFNLEdBQUdDLG1CQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHQyxzQkFBc0IsQ0FBQ0gsTUFBRCxDQUFuQzs7QUFFQSxJQUFJSSxVQUFVLEdBQUdILG1CQUFPLENBQUMsc0JBQUQsQ0FBeEI7O0FBRUEsU0FBU0Usc0JBQVQsQ0FBZ0NFLEdBQWhDLEVBQXFDLENBQUUsT0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCLEVBQUVFLE9BQU8sRUFBRUYsR0FBWCxFQUFyQyxDQUF3RDs7QUFFL0YsU0FBU0csZUFBVCxDQUF5QkMsUUFBekIsRUFBbUNiLFdBQW5DLEVBQWdELENBQUUsSUFBSSxFQUFFYSxRQUFRLFlBQVliLFdBQXRCLENBQUosRUFBd0MsQ0FBRSxNQUFNLElBQUljLFNBQUosQ0FBYyxtQ0FBZCxDQUFOLENBQTJELENBQUU7O0FBRXpKLFNBQVNDLDBCQUFULENBQW9DQyxJQUFwQyxFQUEwQ0MsSUFBMUMsRUFBZ0QsQ0FBRSxJQUFJLENBQUNELElBQUwsRUFBVyxDQUFFLE1BQU0sSUFBSUUsY0FBSixDQUFtQiwyREFBbkIsQ0FBTixDQUF3RixDQUFDLE9BQU9ELElBQUksS0FBSyxPQUFPQSxJQUFQLEtBQWdCLFFBQWhCLElBQTRCLE9BQU9BLElBQVAsS0FBZ0IsVUFBakQsQ0FBSixHQUFtRUEsSUFBbkUsR0FBMEVELElBQWpGLENBQXdGOztBQUVoUCxTQUFTRyxTQUFULENBQW1CQyxRQUFuQixFQUE2QkMsVUFBN0IsRUFBeUMsQ0FBRSxJQUFJLE9BQU9BLFVBQVAsS0FBc0IsVUFBdEIsSUFBb0NBLFVBQVUsS0FBSyxJQUF2RCxFQUE2RCxDQUFFLE1BQU0sSUFBSVAsU0FBSixDQUFjLDZEQUE2RCxPQUFPTyxVQUFsRixDQUFOLENBQXNHLENBQUNELFFBQVEsQ0FBQ2pCLFNBQVQsR0FBcUJsQixNQUFNLENBQUNxQyxNQUFQLENBQWNELFVBQVUsSUFBSUEsVUFBVSxDQUFDbEIsU0FBdkMsRUFBa0QsRUFBRW9CLFdBQVcsRUFBRSxFQUFFbkMsS0FBSyxFQUFFZ0MsUUFBVCxFQUFtQnhCLFVBQVUsRUFBRSxLQUEvQixFQUFzQ0UsUUFBUSxFQUFFLElBQWhELEVBQXNERCxZQUFZLEVBQUUsSUFBcEUsRUFBZixFQUFsRCxDQUFyQixDQUFxSyxJQUFJd0IsVUFBSixFQUFnQnBDLE1BQU0sQ0FBQ3VDLGNBQVAsR0FBd0J2QyxNQUFNLENBQUN1QyxjQUFQLENBQXNCSixRQUF0QixFQUFnQ0MsVUFBaEMsQ0FBeEIsR0FBc0VELFFBQVEsQ0FBQ0ssU0FBVCxHQUFxQkosVUFBM0YsQ0FBd0c7O0FBRTllLElBQUlLLFFBQVEsR0FBRyxVQUFVQyxLQUFWLEVBQWlCO0FBQy9CUixXQUFTLENBQUNPLFFBQUQsRUFBV0MsS0FBWCxDQUFUOztBQUVBLFdBQVNELFFBQVQsQ0FBa0JFLE1BQWxCLEVBQTBCQyxPQUExQixFQUFtQztBQUNsQ2pCLG1CQUFlLENBQUMsSUFBRCxFQUFPYyxRQUFQLENBQWY7O0FBRUEsV0FBT1gsMEJBQTBCLENBQUMsSUFBRCxFQUFPLENBQUNXLFFBQVEsQ0FBQ0QsU0FBVCxJQUFzQnhDLE1BQU0sQ0FBQzZDLGNBQVAsQ0FBc0JKLFFBQXRCLENBQXZCLEVBQXdEVCxJQUF4RCxDQUE2RCxJQUE3RCxFQUFtRVQsVUFBVSxDQUFDdUIsWUFBWCxHQUEwQkgsTUFBN0YsRUFBcUdDLE9BQXJHLENBQVAsQ0FBakM7QUFDQTs7QUFFRHhDLGNBQVksQ0FBQ3FDLFFBQUQsRUFBVyxDQUFDO0FBQ3ZCM0IsT0FBRyxFQUFFLE9BRGtCO0FBRXZCWCxTQUFLLEVBQUUsU0FBUzRDLEtBQVQsR0FBaUI7QUFDdkIsYUFBTyxJQUFJQyxNQUFKLENBQVcsTUFBTXpCLFVBQVUsQ0FBQzBCLE9BQWpCLEdBQTJCLElBQXRDLEVBQTRDQyxJQUE1QyxDQUFpRCxLQUFLQyxJQUF0RCxDQUFQO0FBQ0EsS0FKc0IsRUFBRCxDQUFYLENBQVo7OztBQU9BLFNBQU9WLFFBQVA7QUFDQSxDQWpCYyxDQWlCYnBCLE1BQU0sQ0FBQ0ssT0FqQk0sQ0FBZjs7QUFtQkF4QixPQUFPLENBQUN3QixPQUFSLEdBQWtCZSxRQUFsQiIsImZpbGUiOiI0OTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuXHR2YWx1ZTogdHJ1ZVxyXG59KTtcclxuXHJcbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XHJcblxyXG52YXIgX0NPREUyID0gcmVxdWlyZSgnLi9DT0RFMTI4LmpzJyk7XHJcblxyXG52YXIgX0NPREUzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQ09ERTIpO1xyXG5cclxudmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCcuL2NvbnN0YW50cycpO1xyXG5cclxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cclxuXHJcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XHJcblxyXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cclxuXHJcbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxyXG5cclxudmFyIENPREUxMjhCID0gZnVuY3Rpb24gKF9DT0RFKSB7XHJcblx0X2luaGVyaXRzKENPREUxMjhCLCBfQ09ERSk7XHJcblxyXG5cdGZ1bmN0aW9uIENPREUxMjhCKHN0cmluZywgb3B0aW9ucykge1xyXG5cdFx0X2NsYXNzQ2FsbENoZWNrKHRoaXMsIENPREUxMjhCKTtcclxuXHJcblx0XHRyZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKENPREUxMjhCLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ09ERTEyOEIpKS5jYWxsKHRoaXMsIF9jb25zdGFudHMuQl9TVEFSVF9DSEFSICsgc3RyaW5nLCBvcHRpb25zKSk7XHJcblx0fVxyXG5cclxuXHRfY3JlYXRlQ2xhc3MoQ09ERTEyOEIsIFt7XHJcblx0XHRrZXk6ICd2YWxpZCcsXHJcblx0XHR2YWx1ZTogZnVuY3Rpb24gdmFsaWQoKSB7XHJcblx0XHRcdHJldHVybiBuZXcgUmVnRXhwKCdeJyArIF9jb25zdGFudHMuQl9DSEFSUyArICcrJCcpLnRlc3QodGhpcy5kYXRhKTtcclxuXHRcdH1cclxuXHR9XSk7XHJcblxyXG5cdHJldHVybiBDT0RFMTI4QjtcclxufShfQ09ERTMuZGVmYXVsdCk7XHJcblxyXG5leHBvcnRzLmRlZmF1bHQgPSBDT0RFMTI4QjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///495\n");

/***/ }),

/***/ 496:
/*!***********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/CODE128/CODE128C.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _CODE2 = __webpack_require__(/*! ./CODE128.js */ 491);\n\nvar _CODE3 = _interopRequireDefault(_CODE2);\n\nvar _constants = __webpack_require__(/*! ./constants */ 492);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\nvar CODE128C = function (_CODE) {\n  _inherits(CODE128C, _CODE);\n\n  function CODE128C(string, options) {\n    _classCallCheck(this, CODE128C);\n\n    return _possibleConstructorReturn(this, (CODE128C.__proto__ || Object.getPrototypeOf(CODE128C)).call(this, _constants.C_START_CHAR + string, options));\n  }\n\n  _createClass(CODE128C, [{\n    key: 'valid',\n    value: function valid() {\n      return new RegExp('^' + _constants.C_CHARS + '+$').test(this.data);\n    } }]);\n\n\n  return CODE128C;\n}(_CODE3.default);\n\nexports.default = CODE128C;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9DT0RFMTI4L0NPREUxMjhDLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJrZXkiLCJDb25zdHJ1Y3RvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIl9DT0RFMiIsInJlcXVpcmUiLCJfQ09ERTMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2NvbnN0YW50cyIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJUeXBlRXJyb3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJjYWxsIiwiUmVmZXJlbmNlRXJyb3IiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQ09ERTEyOEMiLCJfQ09ERSIsInN0cmluZyIsIm9wdGlvbnMiLCJnZXRQcm90b3R5cGVPZiIsIkNfU1RBUlRfQ0hBUiIsInZhbGlkIiwiUmVnRXhwIiwiQ19DSEFSUyIsInRlc3QiLCJkYXRhIl0sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUM1Q0MsT0FBSyxFQUFFLElBRHFDLEVBQTdDOzs7QUFJQSxJQUFJQyxZQUFZLEdBQUcsWUFBWSxDQUFFLFNBQVNDLGdCQUFULENBQTBCQyxNQUExQixFQUFrQ0MsS0FBbEMsRUFBeUMsQ0FBRSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdELEtBQUssQ0FBQ0UsTUFBMUIsRUFBa0NELENBQUMsRUFBbkMsRUFBdUMsQ0FBRSxJQUFJRSxVQUFVLEdBQUdILEtBQUssQ0FBQ0MsQ0FBRCxDQUF0QixDQUEyQkUsVUFBVSxDQUFDQyxVQUFYLEdBQXdCRCxVQUFVLENBQUNDLFVBQVgsSUFBeUIsS0FBakQsQ0FBd0RELFVBQVUsQ0FBQ0UsWUFBWCxHQUEwQixJQUExQixDQUFnQyxJQUFJLFdBQVdGLFVBQWYsRUFBMkJBLFVBQVUsQ0FBQ0csUUFBWCxHQUFzQixJQUF0QixDQUE0QmIsTUFBTSxDQUFDQyxjQUFQLENBQXNCSyxNQUF0QixFQUE4QkksVUFBVSxDQUFDSSxHQUF6QyxFQUE4Q0osVUFBOUMsRUFBNEQsQ0FBRSxDQUFDLE9BQU8sVUFBVUssV0FBVixFQUF1QkMsVUFBdkIsRUFBbUNDLFdBQW5DLEVBQWdELENBQUUsSUFBSUQsVUFBSixFQUFnQlgsZ0JBQWdCLENBQUNVLFdBQVcsQ0FBQ0csU0FBYixFQUF3QkYsVUFBeEIsQ0FBaEIsQ0FBcUQsSUFBSUMsV0FBSixFQUFpQlosZ0JBQWdCLENBQUNVLFdBQUQsRUFBY0UsV0FBZCxDQUFoQixDQUE0QyxPQUFPRixXQUFQLENBQXFCLENBQWhOLENBQW1OLENBQTloQixFQUFuQjs7QUFFQSxJQUFJSSxNQUFNLEdBQUdDLG1CQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHQyxzQkFBc0IsQ0FBQ0gsTUFBRCxDQUFuQzs7QUFFQSxJQUFJSSxVQUFVLEdBQUdILG1CQUFPLENBQUMsc0JBQUQsQ0FBeEI7O0FBRUEsU0FBU0Usc0JBQVQsQ0FBZ0NFLEdBQWhDLEVBQXFDLENBQUUsT0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCLEVBQUVFLE9BQU8sRUFBRUYsR0FBWCxFQUFyQyxDQUF3RDs7QUFFL0YsU0FBU0csZUFBVCxDQUF5QkMsUUFBekIsRUFBbUNiLFdBQW5DLEVBQWdELENBQUUsSUFBSSxFQUFFYSxRQUFRLFlBQVliLFdBQXRCLENBQUosRUFBd0MsQ0FBRSxNQUFNLElBQUljLFNBQUosQ0FBYyxtQ0FBZCxDQUFOLENBQTJELENBQUU7O0FBRXpKLFNBQVNDLDBCQUFULENBQW9DQyxJQUFwQyxFQUEwQ0MsSUFBMUMsRUFBZ0QsQ0FBRSxJQUFJLENBQUNELElBQUwsRUFBVyxDQUFFLE1BQU0sSUFBSUUsY0FBSixDQUFtQiwyREFBbkIsQ0FBTixDQUF3RixDQUFDLE9BQU9ELElBQUksS0FBSyxPQUFPQSxJQUFQLEtBQWdCLFFBQWhCLElBQTRCLE9BQU9BLElBQVAsS0FBZ0IsVUFBakQsQ0FBSixHQUFtRUEsSUFBbkUsR0FBMEVELElBQWpGLENBQXdGOztBQUVoUCxTQUFTRyxTQUFULENBQW1CQyxRQUFuQixFQUE2QkMsVUFBN0IsRUFBeUMsQ0FBRSxJQUFJLE9BQU9BLFVBQVAsS0FBc0IsVUFBdEIsSUFBb0NBLFVBQVUsS0FBSyxJQUF2RCxFQUE2RCxDQUFFLE1BQU0sSUFBSVAsU0FBSixDQUFjLDZEQUE2RCxPQUFPTyxVQUFsRixDQUFOLENBQXNHLENBQUNELFFBQVEsQ0FBQ2pCLFNBQVQsR0FBcUJsQixNQUFNLENBQUNxQyxNQUFQLENBQWNELFVBQVUsSUFBSUEsVUFBVSxDQUFDbEIsU0FBdkMsRUFBa0QsRUFBRW9CLFdBQVcsRUFBRSxFQUFFbkMsS0FBSyxFQUFFZ0MsUUFBVCxFQUFtQnhCLFVBQVUsRUFBRSxLQUEvQixFQUFzQ0UsUUFBUSxFQUFFLElBQWhELEVBQXNERCxZQUFZLEVBQUUsSUFBcEUsRUFBZixFQUFsRCxDQUFyQixDQUFxSyxJQUFJd0IsVUFBSixFQUFnQnBDLE1BQU0sQ0FBQ3VDLGNBQVAsR0FBd0J2QyxNQUFNLENBQUN1QyxjQUFQLENBQXNCSixRQUF0QixFQUFnQ0MsVUFBaEMsQ0FBeEIsR0FBc0VELFFBQVEsQ0FBQ0ssU0FBVCxHQUFxQkosVUFBM0YsQ0FBd0c7O0FBRTllLElBQUlLLFFBQVEsR0FBRyxVQUFVQyxLQUFWLEVBQWlCO0FBQy9CUixXQUFTLENBQUNPLFFBQUQsRUFBV0MsS0FBWCxDQUFUOztBQUVBLFdBQVNELFFBQVQsQ0FBa0JFLE1BQWxCLEVBQTBCQyxPQUExQixFQUFtQztBQUNsQ2pCLG1CQUFlLENBQUMsSUFBRCxFQUFPYyxRQUFQLENBQWY7O0FBRUEsV0FBT1gsMEJBQTBCLENBQUMsSUFBRCxFQUFPLENBQUNXLFFBQVEsQ0FBQ0QsU0FBVCxJQUFzQnhDLE1BQU0sQ0FBQzZDLGNBQVAsQ0FBc0JKLFFBQXRCLENBQXZCLEVBQXdEVCxJQUF4RCxDQUE2RCxJQUE3RCxFQUFtRVQsVUFBVSxDQUFDdUIsWUFBWCxHQUEwQkgsTUFBN0YsRUFBcUdDLE9BQXJHLENBQVAsQ0FBakM7QUFDQTs7QUFFRHhDLGNBQVksQ0FBQ3FDLFFBQUQsRUFBVyxDQUFDO0FBQ3ZCM0IsT0FBRyxFQUFFLE9BRGtCO0FBRXZCWCxTQUFLLEVBQUUsU0FBUzRDLEtBQVQsR0FBaUI7QUFDdkIsYUFBTyxJQUFJQyxNQUFKLENBQVcsTUFBTXpCLFVBQVUsQ0FBQzBCLE9BQWpCLEdBQTJCLElBQXRDLEVBQTRDQyxJQUE1QyxDQUFpRCxLQUFLQyxJQUF0RCxDQUFQO0FBQ0EsS0FKc0IsRUFBRCxDQUFYLENBQVo7OztBQU9BLFNBQU9WLFFBQVA7QUFDQSxDQWpCYyxDQWlCYnBCLE1BQU0sQ0FBQ0ssT0FqQk0sQ0FBZjs7QUFtQkF4QixPQUFPLENBQUN3QixPQUFSLEdBQWtCZSxRQUFsQiIsImZpbGUiOiI0OTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuXHR2YWx1ZTogdHJ1ZVxyXG59KTtcclxuXHJcbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XHJcblxyXG52YXIgX0NPREUyID0gcmVxdWlyZSgnLi9DT0RFMTI4LmpzJyk7XHJcblxyXG52YXIgX0NPREUzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQ09ERTIpO1xyXG5cclxudmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCcuL2NvbnN0YW50cycpO1xyXG5cclxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cclxuXHJcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XHJcblxyXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cclxuXHJcbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxyXG5cclxudmFyIENPREUxMjhDID0gZnVuY3Rpb24gKF9DT0RFKSB7XHJcblx0X2luaGVyaXRzKENPREUxMjhDLCBfQ09ERSk7XHJcblxyXG5cdGZ1bmN0aW9uIENPREUxMjhDKHN0cmluZywgb3B0aW9ucykge1xyXG5cdFx0X2NsYXNzQ2FsbENoZWNrKHRoaXMsIENPREUxMjhDKTtcclxuXHJcblx0XHRyZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKENPREUxMjhDLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ09ERTEyOEMpKS5jYWxsKHRoaXMsIF9jb25zdGFudHMuQ19TVEFSVF9DSEFSICsgc3RyaW5nLCBvcHRpb25zKSk7XHJcblx0fVxyXG5cclxuXHRfY3JlYXRlQ2xhc3MoQ09ERTEyOEMsIFt7XHJcblx0XHRrZXk6ICd2YWxpZCcsXHJcblx0XHR2YWx1ZTogZnVuY3Rpb24gdmFsaWQoKSB7XHJcblx0XHRcdHJldHVybiBuZXcgUmVnRXhwKCdeJyArIF9jb25zdGFudHMuQ19DSEFSUyArICcrJCcpLnRlc3QodGhpcy5kYXRhKTtcclxuXHRcdH1cclxuXHR9XSk7XHJcblxyXG5cdHJldHVybiBDT0RFMTI4QztcclxufShfQ09ERTMuZGVmYXVsdCk7XHJcblxyXG5leHBvcnRzLmRlZmF1bHQgPSBDT0RFMTI4QzsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///496\n");

/***/ }),

/***/ 497:
/*!********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/EAN_UPC/index.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nexports.UPCE = exports.UPC = exports.EAN2 = exports.EAN5 = exports.EAN8 = exports.EAN13 = undefined;\n\nvar _EAN = __webpack_require__(/*! ./EAN13.js */ 498);\n\nvar _EAN2 = _interopRequireDefault(_EAN);\n\nvar _EAN3 = __webpack_require__(/*! ./EAN8.js */ 502);\n\nvar _EAN4 = _interopRequireDefault(_EAN3);\n\nvar _EAN5 = __webpack_require__(/*! ./EAN5.js */ 503);\n\nvar _EAN6 = _interopRequireDefault(_EAN5);\n\nvar _EAN7 = __webpack_require__(/*! ./EAN2.js */ 504);\n\nvar _EAN8 = _interopRequireDefault(_EAN7);\n\nvar _UPC = __webpack_require__(/*! ./UPC.js */ 505);\n\nvar _UPC2 = _interopRequireDefault(_UPC);\n\nvar _UPCE = __webpack_require__(/*! ./UPCE.js */ 506);\n\nvar _UPCE2 = _interopRequireDefault(_UPCE);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nexports.EAN13 = _EAN2.default;\nexports.EAN8 = _EAN4.default;\nexports.EAN5 = _EAN6.default;\nexports.EAN2 = _EAN8.default;\nexports.UPC = _UPC2.default;\nexports.UPCE = _UPCE2.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9FQU5fVVBDL2luZGV4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVVBDRSIsIlVQQyIsIkVBTjIiLCJFQU41IiwiRUFOOCIsIkVBTjEzIiwidW5kZWZpbmVkIiwiX0VBTiIsInJlcXVpcmUiLCJfRUFOMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfRUFOMyIsIl9FQU40IiwiX0VBTjUiLCJfRUFONiIsIl9FQU43IiwiX0VBTjgiLCJfVVBDIiwiX1VQQzIiLCJfVVBDRSIsIl9VUENFMiIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsT0FBSyxFQUFFLElBRG9DLEVBQTdDOztBQUdBRCxPQUFPLENBQUNFLElBQVIsR0FBZUYsT0FBTyxDQUFDRyxHQUFSLEdBQWNILE9BQU8sQ0FBQ0ksSUFBUixHQUFlSixPQUFPLENBQUNLLElBQVIsR0FBZUwsT0FBTyxDQUFDTSxJQUFSLEdBQWVOLE9BQU8sQ0FBQ08sS0FBUixHQUFnQkMsU0FBMUY7O0FBRUEsSUFBSUMsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLHFCQUFELENBQWxCOztBQUVBLElBQUlDLEtBQUssR0FBR0Msc0JBQXNCLENBQUNILElBQUQsQ0FBbEM7O0FBRUEsSUFBSUksS0FBSyxHQUFHSCxtQkFBTyxDQUFDLG9CQUFELENBQW5COztBQUVBLElBQUlJLEtBQUssR0FBR0Ysc0JBQXNCLENBQUNDLEtBQUQsQ0FBbEM7O0FBRUEsSUFBSUUsS0FBSyxHQUFHTCxtQkFBTyxDQUFDLG9CQUFELENBQW5COztBQUVBLElBQUlNLEtBQUssR0FBR0osc0JBQXNCLENBQUNHLEtBQUQsQ0FBbEM7O0FBRUEsSUFBSUUsS0FBSyxHQUFHUCxtQkFBTyxDQUFDLG9CQUFELENBQW5COztBQUVBLElBQUlRLEtBQUssR0FBR04sc0JBQXNCLENBQUNLLEtBQUQsQ0FBbEM7O0FBRUEsSUFBSUUsSUFBSSxHQUFHVCxtQkFBTyxDQUFDLG1CQUFELENBQWxCOztBQUVBLElBQUlVLEtBQUssR0FBR1Isc0JBQXNCLENBQUNPLElBQUQsQ0FBbEM7O0FBRUEsSUFBSUUsS0FBSyxHQUFHWCxtQkFBTyxDQUFDLG9CQUFELENBQW5COztBQUVBLElBQUlZLE1BQU0sR0FBR1Ysc0JBQXNCLENBQUNTLEtBQUQsQ0FBbkM7O0FBRUEsU0FBU1Qsc0JBQVQsQ0FBZ0NXLEdBQWhDLEVBQXFDLENBQUUsT0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCLEVBQUVFLE9BQU8sRUFBRUYsR0FBWCxFQUFyQyxDQUF3RDs7QUFFL0Z2QixPQUFPLENBQUNPLEtBQVIsR0FBZ0JJLEtBQUssQ0FBQ2MsT0FBdEI7QUFDQXpCLE9BQU8sQ0FBQ00sSUFBUixHQUFlUSxLQUFLLENBQUNXLE9BQXJCO0FBQ0F6QixPQUFPLENBQUNLLElBQVIsR0FBZVcsS0FBSyxDQUFDUyxPQUFyQjtBQUNBekIsT0FBTyxDQUFDSSxJQUFSLEdBQWVjLEtBQUssQ0FBQ08sT0FBckI7QUFDQXpCLE9BQU8sQ0FBQ0csR0FBUixHQUFjaUIsS0FBSyxDQUFDSyxPQUFwQjtBQUNBekIsT0FBTyxDQUFDRSxJQUFSLEdBQWVvQixNQUFNLENBQUNHLE9BQXRCIiwiZmlsZSI6IjQ5Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xyXG4gIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG5leHBvcnRzLlVQQ0UgPSBleHBvcnRzLlVQQyA9IGV4cG9ydHMuRUFOMiA9IGV4cG9ydHMuRUFONSA9IGV4cG9ydHMuRUFOOCA9IGV4cG9ydHMuRUFOMTMgPSB1bmRlZmluZWQ7XHJcblxyXG52YXIgX0VBTiA9IHJlcXVpcmUoJy4vRUFOMTMuanMnKTtcclxuXHJcbnZhciBfRUFOMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0VBTik7XHJcblxyXG52YXIgX0VBTjMgPSByZXF1aXJlKCcuL0VBTjguanMnKTtcclxuXHJcbnZhciBfRUFONCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0VBTjMpO1xyXG5cclxudmFyIF9FQU41ID0gcmVxdWlyZSgnLi9FQU41LmpzJyk7XHJcblxyXG52YXIgX0VBTjYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9FQU41KTtcclxuXHJcbnZhciBfRUFONyA9IHJlcXVpcmUoJy4vRUFOMi5qcycpO1xyXG5cclxudmFyIF9FQU44ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRUFONyk7XHJcblxyXG52YXIgX1VQQyA9IHJlcXVpcmUoJy4vVVBDLmpzJyk7XHJcblxyXG52YXIgX1VQQzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9VUEMpO1xyXG5cclxudmFyIF9VUENFID0gcmVxdWlyZSgnLi9VUENFLmpzJyk7XHJcblxyXG52YXIgX1VQQ0UyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVVBDRSk7XHJcblxyXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxyXG5cclxuZXhwb3J0cy5FQU4xMyA9IF9FQU4yLmRlZmF1bHQ7XHJcbmV4cG9ydHMuRUFOOCA9IF9FQU40LmRlZmF1bHQ7XHJcbmV4cG9ydHMuRUFONSA9IF9FQU42LmRlZmF1bHQ7XHJcbmV4cG9ydHMuRUFOMiA9IF9FQU44LmRlZmF1bHQ7XHJcbmV4cG9ydHMuVVBDID0gX1VQQzIuZGVmYXVsdDtcclxuZXhwb3J0cy5VUENFID0gX1VQQ0UyLmRlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///497\n");

/***/ }),

/***/ 498:
/*!********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/EAN_UPC/EAN13.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _get = function get(object, property, receiver) {if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {var parent = Object.getPrototypeOf(object);if (parent === null) {return undefined;} else {return get(parent, property, receiver);}} else if (\"value\" in desc) {return desc.value;} else {var getter = desc.get;if (getter === undefined) {return undefined;}return getter.call(receiver);}};\n\nvar _constants = __webpack_require__(/*! ./constants */ 499);\n\nvar _EAN2 = __webpack_require__(/*! ./EAN */ 500);\n\nvar _EAN3 = _interopRequireDefault(_EAN2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // Encoding documentation:\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Binary_encoding_of_data_digits_into_EAN-13_barcode\n\n// Calculate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\nvar checksum = function checksum(number) {\n  var res = number.substr(0, 12).split('').map(function (n) {\n    return +n;\n  }).reduce(function (sum, a, idx) {\n    return idx % 2 ? sum + a * 3 : sum + a;\n  }, 0);\n\n  return (10 - res % 10) % 10;\n};\n\nvar EAN13 = function (_EAN) {\n  _inherits(EAN13, _EAN);\n\n  function EAN13(data, options) {\n    _classCallCheck(this, EAN13);\n\n    // Add checksum if it does not exist\n    if (data.search(/^[0-9]{12}$/) !== -1) {\n      data += checksum(data);\n    }\n\n    // Adds a last character to the end of the barcode\n    var _this = _possibleConstructorReturn(this, (EAN13.__proto__ || Object.getPrototypeOf(EAN13)).call(this, data, options));\n\n    _this.lastChar = options.lastChar;\n    return _this;\n  }\n\n  _createClass(EAN13, [{\n    key: 'valid',\n    value: function valid() {\n      return this.data.search(/^[0-9]{13}$/) !== -1 && +this.data[12] === checksum(this.data);\n    } },\n  {\n    key: 'leftText',\n    value: function leftText() {\n      return _get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'leftText', this).call(this, 1, 6);\n    } },\n  {\n    key: 'leftEncode',\n    value: function leftEncode() {\n      var data = this.data.substr(1, 6);\n      var structure = _constants.EAN13_STRUCTURE[this.data[0]];\n      return _get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'leftEncode', this).call(this, data, structure);\n    } },\n  {\n    key: 'rightText',\n    value: function rightText() {\n      return _get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'rightText', this).call(this, 7, 6);\n    } },\n  {\n    key: 'rightEncode',\n    value: function rightEncode() {\n      var data = this.data.substr(7, 6);\n      return _get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'rightEncode', this).call(this, data, 'RRRRRR');\n    }\n\n    // The \"standard\" way of printing EAN13 barcodes with guard bars\n  },\n  {\n    key: 'encodeGuarded',\n    value: function encodeGuarded() {\n      var data = _get(EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype), 'encodeGuarded', this).call(this);\n\n      // Extend data with left digit & last character\n      if (this.options.displayValue) {\n        data.unshift({\n          data: '000000000000',\n          text: this.text.substr(0, 1),\n          options: { textAlign: 'left', fontSize: this.fontSize } });\n\n\n        if (this.options.lastChar) {\n          data.push({\n            data: '00' });\n\n          data.push({\n            data: '00000',\n            text: this.options.lastChar,\n            options: { fontSize: this.fontSize } });\n\n        }\n      }\n\n      return data;\n    } }]);\n\n\n  return EAN13;\n}(_EAN3.default);\n\nexports.default = EAN13;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///498\n");

/***/ }),

/***/ 499:
/*!************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/EAN_UPC/constants.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n// Standard start end and middle bits\nvar SIDE_BIN = exports.SIDE_BIN = '101';\nvar MIDDLE_BIN = exports.MIDDLE_BIN = '01010';\n\nvar BINARIES = exports.BINARIES = {\n  'L': [// The L (left) type of encoding\n  '0001101', '0011001', '0010011', '0111101', '0100011', '0110001', '0101111', '0111011', '0110111', '0001011'],\n  'G': [// The G type of encoding\n  '0100111', '0110011', '0011011', '0100001', '0011101', '0111001', '0000101', '0010001', '0001001', '0010111'],\n  'R': [// The R (right) type of encoding\n  '1110010', '1100110', '1101100', '1000010', '1011100', '1001110', '1010000', '1000100', '1001000', '1110100'],\n  'O': [// The O (odd) encoding for UPC-E\n  '0001101', '0011001', '0010011', '0111101', '0100011', '0110001', '0101111', '0111011', '0110111', '0001011'],\n  'E': [// The E (even) encoding for UPC-E\n  '0100111', '0110011', '0011011', '0100001', '0011101', '0111001', '0000101', '0010001', '0001001', '0010111'] };\n\n\n// Define the EAN-2 structure\nvar EAN2_STRUCTURE = exports.EAN2_STRUCTURE = ['LL', 'LG', 'GL', 'GG'];\n\n// Define the EAN-5 structure\nvar EAN5_STRUCTURE = exports.EAN5_STRUCTURE = ['GGLLL', 'GLGLL', 'GLLGL', 'GLLLG', 'LGGLL', 'LLGGL', 'LLLGG', 'LGLGL', 'LGLLG', 'LLGLG'];\n\n// Define the EAN-13 structure\nvar EAN13_STRUCTURE = exports.EAN13_STRUCTURE = ['LLLLLL', 'LLGLGG', 'LLGGLG', 'LLGGGL', 'LGLLGG', 'LGGLLG', 'LGGGLL', 'LGLGLG', 'LGLGGL', 'LGGLGL'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9FQU5fVVBDL2NvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlNJREVfQklOIiwiTUlERExFX0JJTiIsIkJJTkFSSUVTIiwiRUFOMl9TVFJVQ1RVUkUiLCJFQU41X1NUUlVDVFVSRSIsIkVBTjEzX1NUUlVDVFVSRSJdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDNUNDLE9BQUssRUFBRSxJQURxQyxFQUE3Qzs7QUFHQTtBQUNBLElBQUlDLFFBQVEsR0FBR0YsT0FBTyxDQUFDRSxRQUFSLEdBQW1CLEtBQWxDO0FBQ0EsSUFBSUMsVUFBVSxHQUFHSCxPQUFPLENBQUNHLFVBQVIsR0FBcUIsT0FBdEM7O0FBRUEsSUFBSUMsUUFBUSxHQUFHSixPQUFPLENBQUNJLFFBQVIsR0FBbUI7QUFDakMsT0FBSyxDQUFDO0FBQ04sV0FESyxFQUNNLFNBRE4sRUFDaUIsU0FEakIsRUFDNEIsU0FENUIsRUFDdUMsU0FEdkMsRUFDa0QsU0FEbEQsRUFDNkQsU0FEN0QsRUFDd0UsU0FEeEUsRUFDbUYsU0FEbkYsRUFDOEYsU0FEOUYsQ0FENEI7QUFHakMsT0FBSyxDQUFDO0FBQ04sV0FESyxFQUNNLFNBRE4sRUFDaUIsU0FEakIsRUFDNEIsU0FENUIsRUFDdUMsU0FEdkMsRUFDa0QsU0FEbEQsRUFDNkQsU0FEN0QsRUFDd0UsU0FEeEUsRUFDbUYsU0FEbkYsRUFDOEYsU0FEOUYsQ0FINEI7QUFLakMsT0FBSyxDQUFDO0FBQ04sV0FESyxFQUNNLFNBRE4sRUFDaUIsU0FEakIsRUFDNEIsU0FENUIsRUFDdUMsU0FEdkMsRUFDa0QsU0FEbEQsRUFDNkQsU0FEN0QsRUFDd0UsU0FEeEUsRUFDbUYsU0FEbkYsRUFDOEYsU0FEOUYsQ0FMNEI7QUFPakMsT0FBSyxDQUFDO0FBQ04sV0FESyxFQUNNLFNBRE4sRUFDaUIsU0FEakIsRUFDNEIsU0FENUIsRUFDdUMsU0FEdkMsRUFDa0QsU0FEbEQsRUFDNkQsU0FEN0QsRUFDd0UsU0FEeEUsRUFDbUYsU0FEbkYsRUFDOEYsU0FEOUYsQ0FQNEI7QUFTakMsT0FBSyxDQUFDO0FBQ04sV0FESyxFQUNNLFNBRE4sRUFDaUIsU0FEakIsRUFDNEIsU0FENUIsRUFDdUMsU0FEdkMsRUFDa0QsU0FEbEQsRUFDNkQsU0FEN0QsRUFDd0UsU0FEeEUsRUFDbUYsU0FEbkYsRUFDOEYsU0FEOUYsQ0FUNEIsRUFBbEM7OztBQWFBO0FBQ0EsSUFBSUMsY0FBYyxHQUFHTCxPQUFPLENBQUNLLGNBQVIsR0FBeUIsQ0FBQyxJQUFELEVBQU8sSUFBUCxFQUFhLElBQWIsRUFBbUIsSUFBbkIsQ0FBOUM7O0FBRUE7QUFDQSxJQUFJQyxjQUFjLEdBQUdOLE9BQU8sQ0FBQ00sY0FBUixHQUF5QixDQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLE9BQW5CLEVBQTRCLE9BQTVCLEVBQXFDLE9BQXJDLEVBQThDLE9BQTlDLEVBQXVELE9BQXZELEVBQWdFLE9BQWhFLEVBQXlFLE9BQXpFLEVBQWtGLE9BQWxGLENBQTlDOztBQUVBO0FBQ0EsSUFBSUMsZUFBZSxHQUFHUCxPQUFPLENBQUNPLGVBQVIsR0FBMEIsQ0FBQyxRQUFELEVBQVcsUUFBWCxFQUFxQixRQUFyQixFQUErQixRQUEvQixFQUF5QyxRQUF6QyxFQUFtRCxRQUFuRCxFQUE2RCxRQUE3RCxFQUF1RSxRQUF2RSxFQUFpRixRQUFqRixFQUEyRixRQUEzRixDQUFoRCIsImZpbGUiOiI0OTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuXHR2YWx1ZTogdHJ1ZVxyXG59KTtcclxuLy8gU3RhbmRhcmQgc3RhcnQgZW5kIGFuZCBtaWRkbGUgYml0c1xyXG52YXIgU0lERV9CSU4gPSBleHBvcnRzLlNJREVfQklOID0gJzEwMSc7XHJcbnZhciBNSURETEVfQklOID0gZXhwb3J0cy5NSURETEVfQklOID0gJzAxMDEwJztcclxuXHJcbnZhciBCSU5BUklFUyA9IGV4cG9ydHMuQklOQVJJRVMgPSB7XHJcblx0J0wnOiBbLy8gVGhlIEwgKGxlZnQpIHR5cGUgb2YgZW5jb2RpbmdcclxuXHQnMDAwMTEwMScsICcwMDExMDAxJywgJzAwMTAwMTEnLCAnMDExMTEwMScsICcwMTAwMDExJywgJzAxMTAwMDEnLCAnMDEwMTExMScsICcwMTExMDExJywgJzAxMTAxMTEnLCAnMDAwMTAxMSddLFxyXG5cdCdHJzogWy8vIFRoZSBHIHR5cGUgb2YgZW5jb2RpbmdcclxuXHQnMDEwMDExMScsICcwMTEwMDExJywgJzAwMTEwMTEnLCAnMDEwMDAwMScsICcwMDExMTAxJywgJzAxMTEwMDEnLCAnMDAwMDEwMScsICcwMDEwMDAxJywgJzAwMDEwMDEnLCAnMDAxMDExMSddLFxyXG5cdCdSJzogWy8vIFRoZSBSIChyaWdodCkgdHlwZSBvZiBlbmNvZGluZ1xyXG5cdCcxMTEwMDEwJywgJzExMDAxMTAnLCAnMTEwMTEwMCcsICcxMDAwMDEwJywgJzEwMTExMDAnLCAnMTAwMTExMCcsICcxMDEwMDAwJywgJzEwMDAxMDAnLCAnMTAwMTAwMCcsICcxMTEwMTAwJ10sXHJcblx0J08nOiBbLy8gVGhlIE8gKG9kZCkgZW5jb2RpbmcgZm9yIFVQQy1FXHJcblx0JzAwMDExMDEnLCAnMDAxMTAwMScsICcwMDEwMDExJywgJzAxMTExMDEnLCAnMDEwMDAxMScsICcwMTEwMDAxJywgJzAxMDExMTEnLCAnMDExMTAxMScsICcwMTEwMTExJywgJzAwMDEwMTEnXSxcclxuXHQnRSc6IFsvLyBUaGUgRSAoZXZlbikgZW5jb2RpbmcgZm9yIFVQQy1FXHJcblx0JzAxMDAxMTEnLCAnMDExMDAxMScsICcwMDExMDExJywgJzAxMDAwMDEnLCAnMDAxMTEwMScsICcwMTExMDAxJywgJzAwMDAxMDEnLCAnMDAxMDAwMScsICcwMDAxMDAxJywgJzAwMTAxMTEnXVxyXG59O1xyXG5cclxuLy8gRGVmaW5lIHRoZSBFQU4tMiBzdHJ1Y3R1cmVcclxudmFyIEVBTjJfU1RSVUNUVVJFID0gZXhwb3J0cy5FQU4yX1NUUlVDVFVSRSA9IFsnTEwnLCAnTEcnLCAnR0wnLCAnR0cnXTtcclxuXHJcbi8vIERlZmluZSB0aGUgRUFOLTUgc3RydWN0dXJlXHJcbnZhciBFQU41X1NUUlVDVFVSRSA9IGV4cG9ydHMuRUFONV9TVFJVQ1RVUkUgPSBbJ0dHTExMJywgJ0dMR0xMJywgJ0dMTEdMJywgJ0dMTExHJywgJ0xHR0xMJywgJ0xMR0dMJywgJ0xMTEdHJywgJ0xHTEdMJywgJ0xHTExHJywgJ0xMR0xHJ107XHJcblxyXG4vLyBEZWZpbmUgdGhlIEVBTi0xMyBzdHJ1Y3R1cmVcclxudmFyIEVBTjEzX1NUUlVDVFVSRSA9IGV4cG9ydHMuRUFOMTNfU1RSVUNUVVJFID0gWydMTExMTEwnLCAnTExHTEdHJywgJ0xMR0dMRycsICdMTEdHR0wnLCAnTEdMTEdHJywgJ0xHR0xMRycsICdMR0dHTEwnLCAnTEdMR0xHJywgJ0xHTEdHTCcsICdMR0dMR0wnXTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///499\n");

/***/ }),

/***/ 5:
/*!**************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/node_modules/vue-i18n/dist/vue-i18n.esm.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /*!\n                                                                                                      * vue-i18n v8.11.2 \n                                                                                                      * (c) 2019 kazuya kawaguchi\n                                                                                                      * Released under the MIT License.\n                                                                                                      */\n/*  */\n\n/**\n        * constants\n        */\n\nvar numberFormatKeys = [\n'style',\n'currency',\n'currencyDisplay',\n'useGrouping',\n'minimumIntegerDigits',\n'minimumFractionDigits',\n'maximumFractionDigits',\n'minimumSignificantDigits',\n'maximumSignificantDigits',\n'localeMatcher',\n'formatMatcher'];\n\n\n/**\n                   * utilities\n                   */\n\nfunction warn(msg, err) {\n  if (typeof console !== 'undefined') {\n    console.warn(__f__('[vue-i18n] ' + msg, \" at node_modules\\\\vue-i18n\\\\dist\\\\vue-i18n.esm.js:32\"));\n    /* istanbul ignore if */\n    if (err) {\n      console.warn(__f__(err.stack, \" at node_modules\\\\vue-i18n\\\\dist\\\\vue-i18n.esm.js:35\"));\n    }\n  }\n}\n\nfunction error(msg, err) {\n  if (typeof console !== 'undefined') {\n    console.error(__f__('[vue-i18n] ' + msg, \" at node_modules\\\\vue-i18n\\\\dist\\\\vue-i18n.esm.js:42\"));\n    /* istanbul ignore if */\n    if (err) {\n      console.error(__f__(err.stack, \" at node_modules\\\\vue-i18n\\\\dist\\\\vue-i18n.esm.js:45\"));\n    }\n  }\n}\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\nfunction isNull(val) {\n  return val === null || val === undefined;\n}\n\nfunction parseArgs() {\n  var args = [],len = arguments.length;\n  while (len--) {args[len] = arguments[len];}\n\n  var locale = null;\n  var params = null;\n  if (args.length === 1) {\n    if (isObject(args[0]) || Array.isArray(args[0])) {\n      params = args[0];\n    } else if (typeof args[0] === 'string') {\n      locale = args[0];\n    }\n  } else if (args.length === 2) {\n    if (typeof args[0] === 'string') {\n      locale = args[0];\n    }\n    /* istanbul ignore if */\n    if (isObject(args[1]) || Array.isArray(args[1])) {\n      params = args[1];\n    }\n  }\n\n  return { locale: locale, params: params };\n}\n\nfunction looseClone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction remove(arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1);\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\nfunction merge(target) {\n  var arguments$1 = arguments;\n\n  var output = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      var key = void 0;\n      for (key in source) {\n        if (hasOwn(source, key)) {\n          if (isObject(source[key])) {\n            output[key] = merge(output[key], source[key]);\n          } else {\n            output[key] = source[key];\n          }\n        }\n      }\n    }\n  }\n  return output;\n}\n\nfunction looseEqual(a, b) {\n  if (a === b) {return true;}\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i]);\n        });\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key]);\n        });\n      } else {\n        /* istanbul ignore next */\n        return false;\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false;\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b);\n  } else {\n    return false;\n  }\n}\n\n/*  */\n\nfunction extend(Vue) {\n  if (!Vue.prototype.hasOwnProperty('$i18n')) {\n    // $FlowFixMe\n    Object.defineProperty(Vue.prototype, '$i18n', {\n      get: function get() {return this._i18n;} });\n\n  }\n\n  Vue.prototype.$t = function (key) {\n    var values = [],len = arguments.length - 1;\n    while (len-- > 0) {values[len] = arguments[len + 1];}\n\n    var i18n = this.$i18n;\n    return i18n._t.apply(i18n, [key, i18n.locale, i18n._getMessages(), this].concat(values));\n  };\n\n  Vue.prototype.$tc = function (key, choice) {\n    var values = [],len = arguments.length - 2;\n    while (len-- > 0) {values[len] = arguments[len + 2];}\n\n    var i18n = this.$i18n;\n    return i18n._tc.apply(i18n, [key, i18n.locale, i18n._getMessages(), this, choice].concat(values));\n  };\n\n  Vue.prototype.$te = function (key, locale) {\n    var i18n = this.$i18n;\n    return i18n._te(key, i18n.locale, i18n._getMessages(), locale);\n  };\n\n  Vue.prototype.$d = function (value) {\n    var ref;\n\n    var args = [],len = arguments.length - 1;\n    while (len-- > 0) {args[len] = arguments[len + 1];}\n    return (ref = this.$i18n).d.apply(ref, [value].concat(args));\n  };\n\n  Vue.prototype.$n = function (value) {\n    var ref;\n\n    var args = [],len = arguments.length - 1;\n    while (len-- > 0) {args[len] = arguments[len + 1];}\n    return (ref = this.$i18n).n.apply(ref, [value].concat(args));\n  };\n}\n\n/*  */\n\nvar mixin = {\n  beforeCreate: function beforeCreate() {\n    var options = this.$options;\n    options.i18n = options.i18n || (options.__i18n ? {} : null);\n\n    if (options.i18n) {\n      if (options.i18n instanceof VueI18n) {\n        // init locale messages via custom blocks\n        if (options.__i18n) {\n          try {\n            var localeMessages = {};\n            options.__i18n.forEach(function (resource) {\n              localeMessages = merge(localeMessages, JSON.parse(resource));\n            });\n            Object.keys(localeMessages).forEach(function (locale) {\n              options.i18n.mergeLocaleMessage(locale, localeMessages[locale]);\n            });\n          } catch (e) {\n            if (true) {\n              warn(\"Cannot parse locale messages via custom blocks.\", e);\n            }\n          }\n        }\n        this._i18n = options.i18n;\n        this._i18nWatcher = this._i18n.watchI18nData();\n      } else if (isPlainObject(options.i18n)) {\n        // component local i18n\n        if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {\n          options.i18n.root = this.$root;\n          options.i18n.formatter = this.$root.$i18n.formatter;\n          options.i18n.fallbackLocale = this.$root.$i18n.fallbackLocale;\n          options.i18n.silentTranslationWarn = this.$root.$i18n.silentTranslationWarn;\n          options.i18n.silentFallbackWarn = this.$root.$i18n.silentFallbackWarn;\n          options.i18n.pluralizationRules = this.$root.$i18n.pluralizationRules;\n          options.i18n.preserveDirectiveContent = this.$root.$i18n.preserveDirectiveContent;\n        }\n\n        // init locale messages via custom blocks\n        if (options.__i18n) {\n          try {\n            var localeMessages$1 = {};\n            options.__i18n.forEach(function (resource) {\n              localeMessages$1 = merge(localeMessages$1, JSON.parse(resource));\n            });\n            options.i18n.messages = localeMessages$1;\n          } catch (e) {\n            if (true) {\n              warn(\"Cannot parse locale messages via custom blocks.\", e);\n            }\n          }\n        }\n\n        this._i18n = new VueI18n(options.i18n);\n        this._i18nWatcher = this._i18n.watchI18nData();\n\n        if (options.i18n.sync === undefined || !!options.i18n.sync) {\n          this._localeWatcher = this.$i18n.watchLocale();\n        }\n      } else {\n        if (true) {\n          warn(\"Cannot be interpreted 'i18n' option.\");\n        }\n      }\n    } else if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {\n      // root i18n\n      this._i18n = this.$root.$i18n;\n    } else if (options.parent && options.parent.$i18n && options.parent.$i18n instanceof VueI18n) {\n      // parent i18n\n      this._i18n = options.parent.$i18n;\n    }\n  },\n\n  beforeMount: function beforeMount() {\n    var options = this.$options;\n    options.i18n = options.i18n || (options.__i18n ? {} : null);\n\n    if (options.i18n) {\n      if (options.i18n instanceof VueI18n) {\n        // init locale messages via custom blocks\n        this._i18n.subscribeDataChanging(this);\n        this._subscribing = true;\n      } else if (isPlainObject(options.i18n)) {\n        this._i18n.subscribeDataChanging(this);\n        this._subscribing = true;\n      } else {\n        if (true) {\n          warn(\"Cannot be interpreted 'i18n' option.\");\n        }\n      }\n    } else if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {\n      this._i18n.subscribeDataChanging(this);\n      this._subscribing = true;\n    } else if (options.parent && options.parent.$i18n && options.parent.$i18n instanceof VueI18n) {\n      this._i18n.subscribeDataChanging(this);\n      this._subscribing = true;\n    }\n  },\n\n  beforeDestroy: function beforeDestroy() {\n    if (!this._i18n) {return;}\n\n    var self = this;\n    this.$nextTick(function () {\n      if (self._subscribing) {\n        self._i18n.unsubscribeDataChanging(self);\n        delete self._subscribing;\n      }\n\n      if (self._i18nWatcher) {\n        self._i18nWatcher();\n        self._i18n.destroyVM();\n        delete self._i18nWatcher;\n      }\n\n      if (self._localeWatcher) {\n        self._localeWatcher();\n        delete self._localeWatcher;\n      }\n\n      self._i18n = null;\n    });\n  } };\n\n\n/*  */\n\nvar interpolationComponent = {\n  name: 'i18n',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'span' },\n\n    path: {\n      type: String,\n      required: true },\n\n    locale: {\n      type: String },\n\n    places: {\n      type: [Array, Object] } },\n\n\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var parent = ref.parent;\n\n    var i18n = parent.$i18n;\n\n    children = (children || []).filter(function (child) {\n      return child.tag || (child.text = child.text.trim());\n    });\n\n    if (!i18n) {\n      if (true) {\n        warn('Cannot find VueI18n instance!');\n      }\n      return children;\n    }\n\n    var path = props.path;\n    var locale = props.locale;\n\n    var params = {};\n    var places = props.places || {};\n\n    var hasPlaces = Array.isArray(places) ?\n    places.length > 0 :\n    Object.keys(places).length > 0;\n\n    var everyPlace = children.every(function (child) {\n      if (child.data && child.data.attrs) {\n        var place = child.data.attrs.place;\n        return typeof place !== 'undefined' && place !== '';\n      }\n    });\n\n    if ( true && hasPlaces && children.length > 0 && !everyPlace) {\n      warn('If places prop is set, all child elements must have place prop set.');\n    }\n\n    if (Array.isArray(places)) {\n      places.forEach(function (el, i) {\n        params[i] = el;\n      });\n    } else {\n      Object.keys(places).forEach(function (key) {\n        params[key] = places[key];\n      });\n    }\n\n    children.forEach(function (child, i) {\n      var key = everyPlace ?\n      \"\" + child.data.attrs.place :\n      \"\" + i;\n      params[key] = child;\n    });\n\n    return h(props.tag, data, i18n.i(path, locale, params));\n  } };\n\n\n/*  */\n\nvar numberComponent = {\n  name: 'i18n-n',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'span' },\n\n    value: {\n      type: Number,\n      required: true },\n\n    format: {\n      type: [String, Object] },\n\n    locale: {\n      type: String } },\n\n\n  render: function render(h, ref) {\n    var props = ref.props;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    var i18n = parent.$i18n;\n\n    if (!i18n) {\n      if (true) {\n        warn('Cannot find VueI18n instance!');\n      }\n      return null;\n    }\n\n    var key = null;\n    var options = null;\n\n    if (typeof props.format === 'string') {\n      key = props.format;\n    } else if (isObject(props.format)) {\n      if (props.format.key) {\n        key = props.format.key;\n      }\n\n      // Filter out number format options only\n      options = Object.keys(props.format).reduce(function (acc, prop) {\n        var obj;\n\n        if (numberFormatKeys.includes(prop)) {\n          return Object.assign({}, acc, (obj = {}, obj[prop] = props.format[prop], obj));\n        }\n        return acc;\n      }, null);\n    }\n\n    var locale = props.locale || i18n.locale;\n    var parts = i18n._ntp(props.value, locale, key, options);\n\n    var values = parts.map(function (part, index) {\n      var obj;\n\n      var slot = data.scopedSlots && data.scopedSlots[part.type];\n      return slot ? slot((obj = {}, obj[part.type] = part.value, obj.index = index, obj.parts = parts, obj)) : part.value;\n    });\n\n    return h(props.tag, {\n      attrs: data.attrs,\n      'class': data['class'],\n      staticClass: data.staticClass },\n    values);\n  } };\n\n\n/*  */\n\nfunction bind(el, binding, vnode) {\n  if (!assert(el, vnode)) {return;}\n\n  t(el, binding, vnode);\n}\n\nfunction update(el, binding, vnode, oldVNode) {\n  if (!assert(el, vnode)) {return;}\n\n  var i18n = vnode.context.$i18n;\n  if (localeEqual(el, vnode) &&\n  looseEqual(binding.value, binding.oldValue) &&\n  looseEqual(el._localeMessage, i18n.getLocaleMessage(i18n.locale))) {return;}\n\n  t(el, binding, vnode);\n}\n\nfunction unbind(el, binding, vnode, oldVNode) {\n  var vm = vnode.context;\n  if (!vm) {\n    warn('Vue instance does not exists in VNode context');\n    return;\n  }\n\n  var i18n = vnode.context.$i18n || {};\n  if (!binding.modifiers.preserve && !i18n.preserveDirectiveContent) {\n    el.textContent = '';\n  }\n  el._vt = undefined;\n  delete el['_vt'];\n  el._locale = undefined;\n  delete el['_locale'];\n  el._localeMessage = undefined;\n  delete el['_localeMessage'];\n}\n\nfunction assert(el, vnode) {\n  var vm = vnode.context;\n  if (!vm) {\n    warn('Vue instance does not exists in VNode context');\n    return false;\n  }\n\n  if (!vm.$i18n) {\n    warn('VueI18n instance does not exists in Vue instance');\n    return false;\n  }\n\n  return true;\n}\n\nfunction localeEqual(el, vnode) {\n  var vm = vnode.context;\n  return el._locale === vm.$i18n.locale;\n}\n\nfunction t(el, binding, vnode) {\n  var ref$1, ref$2;\n\n  var value = binding.value;\n\n  var ref = parseValue(value);\n  var path = ref.path;\n  var locale = ref.locale;\n  var args = ref.args;\n  var choice = ref.choice;\n  if (!path && !locale && !args) {\n    warn('value type not supported');\n    return;\n  }\n\n  if (!path) {\n    warn('`path` is required in v-t directive');\n    return;\n  }\n\n  var vm = vnode.context;\n  if (choice) {\n    el._vt = el.textContent = (ref$1 = vm.$i18n).tc.apply(ref$1, [path, choice].concat(makeParams(locale, args)));\n  } else {\n    el._vt = el.textContent = (ref$2 = vm.$i18n).t.apply(ref$2, [path].concat(makeParams(locale, args)));\n  }\n  el._locale = vm.$i18n.locale;\n  el._localeMessage = vm.$i18n.getLocaleMessage(vm.$i18n.locale);\n}\n\nfunction parseValue(value) {\n  var path;\n  var locale;\n  var args;\n  var choice;\n\n  if (typeof value === 'string') {\n    path = value;\n  } else if (isPlainObject(value)) {\n    path = value.path;\n    locale = value.locale;\n    args = value.args;\n    choice = value.choice;\n  }\n\n  return { path: path, locale: locale, args: args, choice: choice };\n}\n\nfunction makeParams(locale, args) {\n  var params = [];\n\n  locale && params.push(locale);\n  if (args && (Array.isArray(args) || isPlainObject(args))) {\n    params.push(args);\n  }\n\n  return params;\n}\n\nvar Vue;\n\nfunction install(_Vue) {\n  /* istanbul ignore if */\n  if ( true && install.installed && _Vue === Vue) {\n    warn('already installed.');\n    return;\n  }\n  install.installed = true;\n\n  Vue = _Vue;\n\n  var version = Vue.version && Number(Vue.version.split('.')[0]) || -1;\n  /* istanbul ignore if */\n  if ( true && version < 2) {\n    warn(\"vue-i18n (\" + install.version + \") need to use Vue 2.0 or later (Vue: \" + Vue.version + \").\");\n    return;\n  }\n\n  extend(Vue);\n  Vue.mixin(mixin);\n  Vue.directive('t', { bind: bind, update: update, unbind: unbind });\n  Vue.component(interpolationComponent.name, interpolationComponent);\n  Vue.component(numberComponent.name, numberComponent);\n\n  // use simple mergeStrategies to prevent i18n instance lose '__proto__'\n  var strats = Vue.config.optionMergeStrategies;\n  strats.i18n = function (parentVal, childVal) {\n    return childVal === undefined ?\n    parentVal :\n    childVal;\n  };\n}\n\n/*  */\n\nvar BaseFormatter = function BaseFormatter() {\n  this._caches = Object.create(null);\n};\n\nBaseFormatter.prototype.interpolate = function interpolate(message, values) {\n  if (!values) {\n    return [message];\n  }\n  var tokens = this._caches[message];\n  if (!tokens) {\n    tokens = parse(message);\n    this._caches[message] = tokens;\n  }\n  return compile(tokens, values);\n};\n\n\n\nvar RE_TOKEN_LIST_VALUE = /^(?:\\d)+/;\nvar RE_TOKEN_NAMED_VALUE = /^(?:\\w)+/;\n\nfunction parse(format) {\n  var tokens = [];\n  var position = 0;\n\n  var text = '';\n  while (position < format.length) {\n    var char = format[position++];\n    if (char === '{') {\n      if (text) {\n        tokens.push({ type: 'text', value: text });\n      }\n\n      text = '';\n      var sub = '';\n      char = format[position++];\n      while (char !== undefined && char !== '}') {\n        sub += char;\n        char = format[position++];\n      }\n      var isClosed = char === '}';\n\n      var type = RE_TOKEN_LIST_VALUE.test(sub) ?\n      'list' :\n      isClosed && RE_TOKEN_NAMED_VALUE.test(sub) ?\n      'named' :\n      'unknown';\n      tokens.push({ value: sub, type: type });\n    } else if (char === '%') {\n      // when found rails i18n syntax, skip text capture\n      if (format[position] !== '{') {\n        text += char;\n      }\n    } else {\n      text += char;\n    }\n  }\n\n  text && tokens.push({ type: 'text', value: text });\n\n  return tokens;\n}\n\nfunction compile(tokens, values) {\n  var compiled = [];\n  var index = 0;\n\n  var mode = Array.isArray(values) ?\n  'list' :\n  isObject(values) ?\n  'named' :\n  'unknown';\n  if (mode === 'unknown') {return compiled;}\n\n  while (index < tokens.length) {\n    var token = tokens[index];\n    switch (token.type) {\n      case 'text':\n        compiled.push(token.value);\n        break;\n      case 'list':\n        compiled.push(values[parseInt(token.value, 10)]);\n        break;\n      case 'named':\n        if (mode === 'named') {\n          compiled.push(values[token.value]);\n        } else {\n          if (true) {\n            warn(\"Type of token '\" + token.type + \"' and format of value '\" + mode + \"' don't match!\");\n          }\n        }\n        break;\n      case 'unknown':\n        if (true) {\n          warn(\"Detect 'unknown' type of token!\");\n        }\n        break;}\n\n    index++;\n  }\n\n  return compiled;\n}\n\n/*  */\n\n/**\n        *  Path parser\n        *  - Inspired:\n        *    Vue.js Path parser\n        */\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH] };\n\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH] };\n\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND] };\n\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH] };\n\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND] };\n\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND] };\n\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND] };\n\n\n/**\n                                        * Check if an expression is a literal value.\n                                        */\n\nvar literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n   * Strip quotes from a string\n   */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ?\n  str.slice(1, -1) :\n  str;\n}\n\n/**\n   * Determine the type of a character in a keypath.\n   */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined || ch === null) {return 'eof';}\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n      return ch;\n\n    case 0x5F: // _\n    case 0x24: // $\n    case 0x2D: // -\n      return 'ident';\n\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029: // Paragraph Separator\n      return 'ws';}\n\n\n  return 'ident';\n}\n\n/**\n   * Format a subPath, return its plain form if it is\n   * a literal string or number. Otherwise prepend the\n   * dynamic indicator (*).\n   */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {return false;}\n\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n   * Parse a string path into an array of segments\n   */\n\nfunction parse$1(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c;\n  var key;\n  var newChar;\n  var type;\n  var transition;\n  var action;\n  var typeMap;\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" ||\n    mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode !== null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ?\n      c :\n      newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      return keys;\n    }\n  }\n}\n\n\n\n\n\nvar I18nPath = function I18nPath() {\n  this._cache = Object.create(null);\n};\n\n/**\n    * External parse that check for a cache hit first\n    */\nI18nPath.prototype.parsePath = function parsePath(path) {\n  var hit = this._cache[path];\n  if (!hit) {\n    hit = parse$1(path);\n    if (hit) {\n      this._cache[path] = hit;\n    }\n  }\n  return hit || [];\n};\n\n/**\n    * Get path value from path string\n    */\nI18nPath.prototype.getPathValue = function getPathValue(obj, path) {\n  if (!isObject(obj)) {return null;}\n\n  var paths = this.parsePath(path);\n  if (paths.length === 0) {\n    return null;\n  } else {\n    var length = paths.length;\n    var last = obj;\n    var i = 0;\n    while (i < length) {\n      var value = last[paths[i]];\n      if (value === undefined) {\n        return null;\n      }\n      last = value;\n      i++;\n    }\n\n    return last;\n  }\n};\n\n/*  */\n\n\n\nvar htmlTagMatcher = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\nvar linkKeyMatcher = /(?:@(?:\\.[a-z]+)?:(?:[\\w\\-_|.]+|\\([\\w\\-_|.]+\\)))/g;\nvar linkKeyPrefixMatcher = /^@(?:\\.([a-z]+))?:/;\nvar bracketsMatcher = /[()]/g;\nvar formatters = {\n  'upper': function upper(str) {return str.toLocaleUpperCase();},\n  'lower': function lower(str) {return str.toLocaleLowerCase();} };\n\n\nvar defaultFormatter = new BaseFormatter();\n\nvar VueI18n = function VueI18n(options) {\n  var this$1 = this;\n  if (options === void 0) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #290\n  /* istanbul ignore if */\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  var locale = options.locale || 'en-US';\n  var fallbackLocale = options.fallbackLocale || 'en-US';\n  var messages = options.messages || {};\n  var dateTimeFormats = options.dateTimeFormats || {};\n  var numberFormats = options.numberFormats || {};\n\n  this._vm = null;\n  this._formatter = options.formatter || defaultFormatter;\n  this._missing = options.missing || null;\n  this._root = options.root || null;\n  this._sync = options.sync === undefined ? true : !!options.sync;\n  this._fallbackRoot = options.fallbackRoot === undefined ?\n  true :\n  !!options.fallbackRoot;\n  this._silentTranslationWarn = options.silentTranslationWarn === undefined ?\n  false :\n  !!options.silentTranslationWarn;\n  this._silentFallbackWarn = options.silentFallbackWarn === undefined ?\n  false :\n  !!options.silentFallbackWarn;\n  this._dateTimeFormatters = {};\n  this._numberFormatters = {};\n  this._path = new I18nPath();\n  this._dataListeners = [];\n  this._preserveDirectiveContent = options.preserveDirectiveContent === undefined ?\n  false :\n  !!options.preserveDirectiveContent;\n  this.pluralizationRules = options.pluralizationRules || {};\n  this._warnHtmlInMessage = options.warnHtmlInMessage || 'off';\n\n  this._exist = function (message, key) {\n    if (!message || !key) {return false;}\n    if (!isNull(this$1._path.getPathValue(message, key))) {return true;}\n    // fallback for flat key\n    if (message[key]) {return true;}\n    return false;\n  };\n\n  if (this._warnHtmlInMessage === 'warn' || this._warnHtmlInMessage === 'error') {\n    Object.keys(messages).forEach(function (locale) {\n      this$1._checkLocaleMessage(locale, this$1._warnHtmlInMessage, messages[locale]);\n    });\n  }\n\n  this._initVM({\n    locale: locale,\n    fallbackLocale: fallbackLocale,\n    messages: messages,\n    dateTimeFormats: dateTimeFormats,\n    numberFormats: numberFormats });\n\n};\n\nvar prototypeAccessors = { vm: { configurable: true }, messages: { configurable: true }, dateTimeFormats: { configurable: true }, numberFormats: { configurable: true }, availableLocales: { configurable: true }, locale: { configurable: true }, fallbackLocale: { configurable: true }, missing: { configurable: true }, formatter: { configurable: true }, silentTranslationWarn: { configurable: true }, silentFallbackWarn: { configurable: true }, preserveDirectiveContent: { configurable: true }, warnHtmlInMessage: { configurable: true } };\n\nVueI18n.prototype._checkLocaleMessage = function _checkLocaleMessage(locale, level, message) {\n  var paths = [];\n\n  var fn = function fn(level, locale, message, paths) {\n    if (isPlainObject(message)) {\n      Object.keys(message).forEach(function (key) {\n        var val = message[key];\n        if (isPlainObject(val)) {\n          paths.push(key);\n          paths.push('.');\n          fn(level, locale, val, paths);\n          paths.pop();\n          paths.pop();\n        } else {\n          paths.push(key);\n          fn(level, locale, val, paths);\n          paths.pop();\n        }\n      });\n    } else if (Array.isArray(message)) {\n      message.forEach(function (item, index) {\n        if (isPlainObject(item)) {\n          paths.push(\"[\" + index + \"]\");\n          paths.push('.');\n          fn(level, locale, item, paths);\n          paths.pop();\n          paths.pop();\n        } else {\n          paths.push(\"[\" + index + \"]\");\n          fn(level, locale, item, paths);\n          paths.pop();\n        }\n      });\n    } else if (typeof message === 'string') {\n      var ret = htmlTagMatcher.test(message);\n      if (ret) {\n        var msg = \"Detected HTML in message '\" + message + \"' of keypath '\" + paths.join('') + \"' at '\" + locale + \"'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp\";\n        if (level === 'warn') {\n          warn(msg);\n        } else if (level === 'error') {\n          error(msg);\n        }\n      }\n    }\n  };\n\n  fn(level, locale, message, paths);\n};\n\nVueI18n.prototype._initVM = function _initVM(data) {\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  this._vm = new Vue({ data: data });\n  Vue.config.silent = silent;\n};\n\nVueI18n.prototype.destroyVM = function destroyVM() {\n  this._vm.$destroy();\n};\n\nVueI18n.prototype.subscribeDataChanging = function subscribeDataChanging(vm) {\n  this._dataListeners.push(vm);\n};\n\nVueI18n.prototype.unsubscribeDataChanging = function unsubscribeDataChanging(vm) {\n  remove(this._dataListeners, vm);\n};\n\nVueI18n.prototype.watchI18nData = function watchI18nData() {\n  var self = this;\n  return this._vm.$watch('$data', function () {\n    var i = self._dataListeners.length;\n    while (i--) {\n      Vue.nextTick(function () {\n        self._dataListeners[i] && self._dataListeners[i].$forceUpdate();\n      });\n    }\n  }, { deep: true });\n};\n\nVueI18n.prototype.watchLocale = function watchLocale() {\n  /* istanbul ignore if */\n  if (!this._sync || !this._root) {return null;}\n  var target = this._vm;\n  return this._root.$i18n.vm.$watch('locale', function (val) {\n    target.$set(target, 'locale', val);\n    target.$forceUpdate();\n  }, { immediate: true });\n};\n\nprototypeAccessors.vm.get = function () {return this._vm;};\n\nprototypeAccessors.messages.get = function () {return looseClone(this._getMessages());};\nprototypeAccessors.dateTimeFormats.get = function () {return looseClone(this._getDateTimeFormats());};\nprototypeAccessors.numberFormats.get = function () {return looseClone(this._getNumberFormats());};\nprototypeAccessors.availableLocales.get = function () {return Object.keys(this.messages).sort();};\n\nprototypeAccessors.locale.get = function () {return this._vm.locale;};\nprototypeAccessors.locale.set = function (locale) {\n  this._vm.$set(this._vm, 'locale', locale);\n};\n\nprototypeAccessors.fallbackLocale.get = function () {return this._vm.fallbackLocale;};\nprototypeAccessors.fallbackLocale.set = function (locale) {\n  this._vm.$set(this._vm, 'fallbackLocale', locale);\n};\n\nprototypeAccessors.missing.get = function () {return this._missing;};\nprototypeAccessors.missing.set = function (handler) {this._missing = handler;};\n\nprototypeAccessors.formatter.get = function () {return this._formatter;};\nprototypeAccessors.formatter.set = function (formatter) {this._formatter = formatter;};\n\nprototypeAccessors.silentTranslationWarn.get = function () {return this._silentTranslationWarn;};\nprototypeAccessors.silentTranslationWarn.set = function (silent) {this._silentTranslationWarn = silent;};\n\nprototypeAccessors.silentFallbackWarn.get = function () {return this._silentFallbackWarn;};\nprototypeAccessors.silentFallbackWarn.set = function (silent) {this._silentFallbackWarn = silent;};\n\nprototypeAccessors.preserveDirectiveContent.get = function () {return this._preserveDirectiveContent;};\nprototypeAccessors.preserveDirectiveContent.set = function (preserve) {this._preserveDirectiveContent = preserve;};\n\nprototypeAccessors.warnHtmlInMessage.get = function () {return this._warnHtmlInMessage;};\nprototypeAccessors.warnHtmlInMessage.set = function (level) {\n  var this$1 = this;\n\n  var orgLevel = this._warnHtmlInMessage;\n  this._warnHtmlInMessage = level;\n  if (orgLevel !== level && (level === 'warn' || level === 'error')) {\n    var messages = this._getMessages();\n    Object.keys(messages).forEach(function (locale) {\n      this$1._checkLocaleMessage(locale, this$1._warnHtmlInMessage, messages[locale]);\n    });\n  }\n};\n\nVueI18n.prototype._getMessages = function _getMessages() {return this._vm.messages;};\nVueI18n.prototype._getDateTimeFormats = function _getDateTimeFormats() {return this._vm.dateTimeFormats;};\nVueI18n.prototype._getNumberFormats = function _getNumberFormats() {return this._vm.numberFormats;};\n\nVueI18n.prototype._warnDefault = function _warnDefault(locale, key, result, vm, values) {\n  if (!isNull(result)) {return result;}\n  if (this._missing) {\n    var missingRet = this._missing.apply(null, [locale, key, vm, values]);\n    if (typeof missingRet === 'string') {\n      return missingRet;\n    }\n  } else {\n    if ( true && !this._silentTranslationWarn) {\n      warn(\n      \"Cannot translate the value of keypath '\" + key + \"'. \" +\n      'Use the value of keypath as default.');\n\n    }\n  }\n  return key;\n};\n\nVueI18n.prototype._isFallbackRoot = function _isFallbackRoot(val) {\n  return !val && !isNull(this._root) && this._fallbackRoot;\n};\n\nVueI18n.prototype._isSilentFallback = function _isSilentFallback(locale) {\n  return this._silentFallbackWarn && (this._isFallbackRoot() || locale !== this.fallbackLocale);\n};\n\nVueI18n.prototype._interpolate = function _interpolate(\nlocale,\nmessage,\nkey,\nhost,\ninterpolateMode,\nvalues,\nvisitedLinkStack)\n{\n  if (!message) {return null;}\n\n  var pathRet = this._path.getPathValue(message, key);\n  if (Array.isArray(pathRet) || isPlainObject(pathRet)) {return pathRet;}\n\n  var ret;\n  if (isNull(pathRet)) {\n    /* istanbul ignore else */\n    if (isPlainObject(message)) {\n      ret = message[key];\n      if (typeof ret !== 'string') {\n        if ( true && !this._silentTranslationWarn && !this._isSilentFallback(locale)) {\n          warn(\"Value of key '\" + key + \"' is not a string!\");\n        }\n        return null;\n      }\n    } else {\n      return null;\n    }\n  } else {\n    /* istanbul ignore else */\n    if (typeof pathRet === 'string') {\n      ret = pathRet;\n    } else {\n      if ( true && !this._silentTranslationWarn && !this._isSilentFallback(locale)) {\n        warn(\"Value of key '\" + key + \"' is not a string!\");\n      }\n      return null;\n    }\n  }\n\n  // Check for the existence of links within the translated string\n  if (ret.indexOf('@:') >= 0 || ret.indexOf('@.') >= 0) {\n    ret = this._link(locale, message, ret, host, 'raw', values, visitedLinkStack);\n  }\n\n  return this._render(ret, interpolateMode, values, key);\n};\n\nVueI18n.prototype._link = function _link(\nlocale,\nmessage,\nstr,\nhost,\ninterpolateMode,\nvalues,\nvisitedLinkStack)\n{\n  var ret = str;\n\n  // Match all the links within the local\n  // We are going to replace each of\n  // them with its translation\n  var matches = ret.match(linkKeyMatcher);\n  for (var idx in matches) {\n    // ie compatible: filter custom array\n    // prototype method\n    if (!matches.hasOwnProperty(idx)) {\n      continue;\n    }\n    var link = matches[idx];\n    var linkKeyPrefixMatches = link.match(linkKeyPrefixMatcher);\n    var linkPrefix = linkKeyPrefixMatches[0];\n    var formatterName = linkKeyPrefixMatches[1];\n\n    // Remove the leading @:, @.case: and the brackets\n    var linkPlaceholder = link.replace(linkPrefix, '').replace(bracketsMatcher, '');\n\n    if (visitedLinkStack.includes(linkPlaceholder)) {\n      if (true) {\n        warn(\"Circular reference found. \\\"\" + link + \"\\\" is already visited in the chain of \" + visitedLinkStack.reverse().join(' <- '));\n      }\n      return ret;\n    }\n    visitedLinkStack.push(linkPlaceholder);\n\n    // Translate the link\n    var translated = this._interpolate(\n    locale, message, linkPlaceholder, host,\n    interpolateMode === 'raw' ? 'string' : interpolateMode,\n    interpolateMode === 'raw' ? undefined : values,\n    visitedLinkStack);\n\n\n    if (this._isFallbackRoot(translated)) {\n      if ( true && !this._silentTranslationWarn) {\n        warn(\"Fall back to translate the link placeholder '\" + linkPlaceholder + \"' with root locale.\");\n      }\n      /* istanbul ignore if */\n      if (!this._root) {throw Error('unexpected error');}\n      var root = this._root.$i18n;\n      translated = root._translate(\n      root._getMessages(), root.locale, root.fallbackLocale,\n      linkPlaceholder, host, interpolateMode, values);\n\n    }\n    translated = this._warnDefault(\n    locale, linkPlaceholder, translated, host,\n    Array.isArray(values) ? values : [values]);\n\n    if (formatters.hasOwnProperty(formatterName)) {\n      translated = formatters[formatterName](translated);\n    }\n\n    visitedLinkStack.pop();\n\n    // Replace the link with the translated\n    ret = !translated ? ret : ret.replace(link, translated);\n  }\n\n  return ret;\n};\n\nVueI18n.prototype._render = function _render(message, interpolateMode, values, path) {\n  var ret = this._formatter.interpolate(message, values, path);\n\n  // If the custom formatter refuses to work - apply the default one\n  if (!ret) {\n    ret = defaultFormatter.interpolate(message, values, path);\n  }\n\n  // if interpolateMode is **not** 'string' ('row'),\n  // return the compiled data (e.g. ['foo', VNode, 'bar']) with formatter\n  return interpolateMode === 'string' ? ret.join('') : ret;\n};\n\nVueI18n.prototype._translate = function _translate(\nmessages,\nlocale,\nfallback,\nkey,\nhost,\ninterpolateMode,\nargs)\n{\n  var res =\n  this._interpolate(locale, messages[locale], key, host, interpolateMode, args, [key]);\n  if (!isNull(res)) {return res;}\n\n  res = this._interpolate(fallback, messages[fallback], key, host, interpolateMode, args, [key]);\n  if (!isNull(res)) {\n    if ( true && !this._silentTranslationWarn && !this._silentFallbackWarn) {\n      warn(\"Fall back to translate the keypath '\" + key + \"' with '\" + fallback + \"' locale.\");\n    }\n    return res;\n  } else {\n    return null;\n  }\n};\n\nVueI18n.prototype._t = function _t(key, _locale, messages, host) {\n  var ref;\n\n  var values = [],len = arguments.length - 4;\n  while (len-- > 0) {values[len] = arguments[len + 4];}\n  if (!key) {return '';}\n\n  var parsedArgs = parseArgs.apply(void 0, values);\n  var locale = parsedArgs.locale || _locale;\n\n  var ret = this._translate(\n  messages, locale, this.fallbackLocale, key,\n  host, 'string', parsedArgs.params);\n\n  if (this._isFallbackRoot(ret)) {\n    if ( true && !this._silentTranslationWarn && !this._silentFallbackWarn) {\n      warn(\"Fall back to translate the keypath '\" + key + \"' with root locale.\");\n    }\n    /* istanbul ignore if */\n    if (!this._root) {throw Error('unexpected error');}\n    return (ref = this._root).$t.apply(ref, [key].concat(values));\n  } else {\n    return this._warnDefault(locale, key, ret, host, values);\n  }\n};\n\nVueI18n.prototype.t = function t(key) {\n  var ref;\n\n  var values = [],len = arguments.length - 1;\n  while (len-- > 0) {values[len] = arguments[len + 1];}\n  return (ref = this)._t.apply(ref, [key, this.locale, this._getMessages(), null].concat(values));\n};\n\nVueI18n.prototype._i = function _i(key, locale, messages, host, values) {\n  var ret =\n  this._translate(messages, locale, this.fallbackLocale, key, host, 'raw', values);\n  if (this._isFallbackRoot(ret)) {\n    if ( true && !this._silentTranslationWarn) {\n      warn(\"Fall back to interpolate the keypath '\" + key + \"' with root locale.\");\n    }\n    if (!this._root) {throw Error('unexpected error');}\n    return this._root.$i18n.i(key, locale, values);\n  } else {\n    return this._warnDefault(locale, key, ret, host, [values]);\n  }\n};\n\nVueI18n.prototype.i = function i(key, locale, values) {\n  /* istanbul ignore if */\n  if (!key) {return '';}\n\n  if (typeof locale !== 'string') {\n    locale = this.locale;\n  }\n\n  return this._i(key, locale, this._getMessages(), null, values);\n};\n\nVueI18n.prototype._tc = function _tc(\nkey,\n_locale,\nmessages,\nhost,\nchoice)\n{\n  var ref;\n\n  var values = [],len = arguments.length - 5;\n  while (len-- > 0) {values[len] = arguments[len + 5];}\n  if (!key) {return '';}\n  if (choice === undefined) {\n    choice = 1;\n  }\n\n  var predefined = { 'count': choice, 'n': choice };\n  var parsedArgs = parseArgs.apply(void 0, values);\n  parsedArgs.params = Object.assign(predefined, parsedArgs.params);\n  values = parsedArgs.locale === null ? [parsedArgs.params] : [parsedArgs.locale, parsedArgs.params];\n  return this.fetchChoice((ref = this)._t.apply(ref, [key, _locale, messages, host].concat(values)), choice);\n};\n\nVueI18n.prototype.fetchChoice = function fetchChoice(message, choice) {\n  /* istanbul ignore if */\n  if (!message && typeof message !== 'string') {return null;}\n  var choices = message.split('|');\n\n  choice = this.getChoiceIndex(choice, choices.length);\n  if (!choices[choice]) {return message;}\n  return choices[choice].trim();\n};\n\n/**\n    * @param choice {number} a choice index given by the input to $tc: `$tc('path.to.rule', choiceIndex)`\n    * @param choicesLength {number} an overall amount of available choices\n    * @returns a final choice index\n   */\nVueI18n.prototype.getChoiceIndex = function getChoiceIndex(choice, choicesLength) {\n  // Default (old) getChoiceIndex implementation - english-compatible\n  var defaultImpl = function defaultImpl(_choice, _choicesLength) {\n    _choice = Math.abs(_choice);\n\n    if (_choicesLength === 2) {\n      return _choice ?\n      _choice > 1 ?\n      1 :\n      0 :\n      1;\n    }\n\n    return _choice ? Math.min(_choice, 2) : 0;\n  };\n\n  if (this.locale in this.pluralizationRules) {\n    return this.pluralizationRules[this.locale].apply(this, [choice, choicesLength]);\n  } else {\n    return defaultImpl(choice, choicesLength);\n  }\n};\n\nVueI18n.prototype.tc = function tc(key, choice) {\n  var ref;\n\n  var values = [],len = arguments.length - 2;\n  while (len-- > 0) {values[len] = arguments[len + 2];}\n  return (ref = this)._tc.apply(ref, [key, this.locale, this._getMessages(), null, choice].concat(values));\n};\n\nVueI18n.prototype._te = function _te(key, locale, messages) {\n  var args = [],len = arguments.length - 3;\n  while (len-- > 0) {args[len] = arguments[len + 3];}\n\n  var _locale = parseArgs.apply(void 0, args).locale || locale;\n  return this._exist(messages[_locale], key);\n};\n\nVueI18n.prototype.te = function te(key, locale) {\n  return this._te(key, this.locale, this._getMessages(), locale);\n};\n\nVueI18n.prototype.getLocaleMessage = function getLocaleMessage(locale) {\n  return looseClone(this._vm.messages[locale] || {});\n};\n\nVueI18n.prototype.setLocaleMessage = function setLocaleMessage(locale, message) {\n  if (this._warnHtmlInMessage === 'warn' || this._warnHtmlInMessage === 'error') {\n    this._checkLocaleMessage(locale, this._warnHtmlInMessage, message);\n    if (this._warnHtmlInMessage === 'error') {return;}\n  }\n  this._vm.$set(this._vm.messages, locale, message);\n};\n\nVueI18n.prototype.mergeLocaleMessage = function mergeLocaleMessage(locale, message) {\n  if (this._warnHtmlInMessage === 'warn' || this._warnHtmlInMessage === 'error') {\n    this._checkLocaleMessage(locale, this._warnHtmlInMessage, message);\n    if (this._warnHtmlInMessage === 'error') {return;}\n  }\n  this._vm.$set(this._vm.messages, locale, merge(this._vm.messages[locale] || {}, message));\n};\n\nVueI18n.prototype.getDateTimeFormat = function getDateTimeFormat(locale) {\n  return looseClone(this._vm.dateTimeFormats[locale] || {});\n};\n\nVueI18n.prototype.setDateTimeFormat = function setDateTimeFormat(locale, format) {\n  this._vm.$set(this._vm.dateTimeFormats, locale, format);\n};\n\nVueI18n.prototype.mergeDateTimeFormat = function mergeDateTimeFormat(locale, format) {\n  this._vm.$set(this._vm.dateTimeFormats, locale, merge(this._vm.dateTimeFormats[locale] || {}, format));\n};\n\nVueI18n.prototype._localizeDateTime = function _localizeDateTime(\nvalue,\nlocale,\nfallback,\ndateTimeFormats,\nkey)\n{\n  var _locale = locale;\n  var formats = dateTimeFormats[_locale];\n\n  // fallback locale\n  if (isNull(formats) || isNull(formats[key])) {\n    if ( true && !this._silentTranslationWarn) {\n      warn(\"Fall back to '\" + fallback + \"' datetime formats from '\" + locale + \" datetime formats.\");\n    }\n    _locale = fallback;\n    formats = dateTimeFormats[_locale];\n  }\n\n  if (isNull(formats) || isNull(formats[key])) {\n    return null;\n  } else {\n    var format = formats[key];\n    var id = _locale + \"__\" + key;\n    var formatter = this._dateTimeFormatters[id];\n    if (!formatter) {\n      formatter = this._dateTimeFormatters[id] = new Intl.DateTimeFormat(_locale, format);\n    }\n    return formatter.format(value);\n  }\n};\n\nVueI18n.prototype._d = function _d(value, locale, key) {\n  /* istanbul ignore if */\n  if ( true && !VueI18n.availabilities.dateTimeFormat) {\n    warn('Cannot format a Date value due to not supported Intl.DateTimeFormat.');\n    return '';\n  }\n\n  if (!key) {\n    return new Intl.DateTimeFormat(locale).format(value);\n  }\n\n  var ret =\n  this._localizeDateTime(value, locale, this.fallbackLocale, this._getDateTimeFormats(), key);\n  if (this._isFallbackRoot(ret)) {\n    if ( true && !this._silentTranslationWarn) {\n      warn(\"Fall back to datetime localization of root: key '\" + key + \"' .\");\n    }\n    /* istanbul ignore if */\n    if (!this._root) {throw Error('unexpected error');}\n    return this._root.$i18n.d(value, key, locale);\n  } else {\n    return ret || '';\n  }\n};\n\nVueI18n.prototype.d = function d(value) {\n  var args = [],len = arguments.length - 1;\n  while (len-- > 0) {args[len] = arguments[len + 1];}\n\n  var locale = this.locale;\n  var key = null;\n\n  if (args.length === 1) {\n    if (typeof args[0] === 'string') {\n      key = args[0];\n    } else if (isObject(args[0])) {\n      if (args[0].locale) {\n        locale = args[0].locale;\n      }\n      if (args[0].key) {\n        key = args[0].key;\n      }\n    }\n  } else if (args.length === 2) {\n    if (typeof args[0] === 'string') {\n      key = args[0];\n    }\n    if (typeof args[1] === 'string') {\n      locale = args[1];\n    }\n  }\n\n  return this._d(value, locale, key);\n};\n\nVueI18n.prototype.getNumberFormat = function getNumberFormat(locale) {\n  return looseClone(this._vm.numberFormats[locale] || {});\n};\n\nVueI18n.prototype.setNumberFormat = function setNumberFormat(locale, format) {\n  this._vm.$set(this._vm.numberFormats, locale, format);\n};\n\nVueI18n.prototype.mergeNumberFormat = function mergeNumberFormat(locale, format) {\n  this._vm.$set(this._vm.numberFormats, locale, merge(this._vm.numberFormats[locale] || {}, format));\n};\n\nVueI18n.prototype._getNumberFormatter = function _getNumberFormatter(\nvalue,\nlocale,\nfallback,\nnumberFormats,\nkey,\noptions)\n{\n  var _locale = locale;\n  var formats = numberFormats[_locale];\n\n  // fallback locale\n  if (isNull(formats) || isNull(formats[key])) {\n    if ( true && !this._silentTranslationWarn) {\n      warn(\"Fall back to '\" + fallback + \"' number formats from '\" + locale + \" number formats.\");\n    }\n    _locale = fallback;\n    formats = numberFormats[_locale];\n  }\n\n  if (isNull(formats) || isNull(formats[key])) {\n    return null;\n  } else {\n    var format = formats[key];\n\n    var formatter;\n    if (options) {\n      // If options specified - create one time number formatter\n      formatter = new Intl.NumberFormat(_locale, Object.assign({}, format, options));\n    } else {\n      var id = _locale + \"__\" + key;\n      formatter = this._numberFormatters[id];\n      if (!formatter) {\n        formatter = this._numberFormatters[id] = new Intl.NumberFormat(_locale, format);\n      }\n    }\n    return formatter;\n  }\n};\n\nVueI18n.prototype._n = function _n(value, locale, key, options) {\n  /* istanbul ignore if */\n  if (!VueI18n.availabilities.numberFormat) {\n    if (true) {\n      warn('Cannot format a Number value due to not supported Intl.NumberFormat.');\n    }\n    return '';\n  }\n\n  if (!key) {\n    var nf = !options ? new Intl.NumberFormat(locale) : new Intl.NumberFormat(locale, options);\n    return nf.format(value);\n  }\n\n  var formatter = this._getNumberFormatter(value, locale, this.fallbackLocale, this._getNumberFormats(), key, options);\n  var ret = formatter && formatter.format(value);\n  if (this._isFallbackRoot(ret)) {\n    if ( true && !this._silentTranslationWarn) {\n      warn(\"Fall back to number localization of root: key '\" + key + \"' .\");\n    }\n    /* istanbul ignore if */\n    if (!this._root) {throw Error('unexpected error');}\n    return this._root.$i18n.n(value, Object.assign({}, { key: key, locale: locale }, options));\n  } else {\n    return ret || '';\n  }\n};\n\nVueI18n.prototype.n = function n(value) {\n  var args = [],len = arguments.length - 1;\n  while (len-- > 0) {args[len] = arguments[len + 1];}\n\n  var locale = this.locale;\n  var key = null;\n  var options = null;\n\n  if (args.length === 1) {\n    if (typeof args[0] === 'string') {\n      key = args[0];\n    } else if (isObject(args[0])) {\n      if (args[0].locale) {\n        locale = args[0].locale;\n      }\n      if (args[0].key) {\n        key = args[0].key;\n      }\n\n      // Filter out number format options only\n      options = Object.keys(args[0]).reduce(function (acc, key) {\n        var obj;\n\n        if (numberFormatKeys.includes(key)) {\n          return Object.assign({}, acc, (obj = {}, obj[key] = args[0][key], obj));\n        }\n        return acc;\n      }, null);\n    }\n  } else if (args.length === 2) {\n    if (typeof args[0] === 'string') {\n      key = args[0];\n    }\n    if (typeof args[1] === 'string') {\n      locale = args[1];\n    }\n  }\n\n  return this._n(value, locale, key, options);\n};\n\nVueI18n.prototype._ntp = function _ntp(value, locale, key, options) {\n  /* istanbul ignore if */\n  if (!VueI18n.availabilities.numberFormat) {\n    if (true) {\n      warn('Cannot format to parts a Number value due to not supported Intl.NumberFormat.');\n    }\n    return [];\n  }\n\n  if (!key) {\n    var nf = !options ? new Intl.NumberFormat(locale) : new Intl.NumberFormat(locale, options);\n    return nf.formatToParts(value);\n  }\n\n  var formatter = this._getNumberFormatter(value, locale, this.fallbackLocale, this._getNumberFormats(), key, options);\n  var ret = formatter && formatter.formatToParts(value);\n  if (this._isFallbackRoot(ret)) {\n    if ( true && !this._silentTranslationWarn) {\n      warn(\"Fall back to format number to parts of root: key '\" + key + \"' .\");\n    }\n    /* istanbul ignore if */\n    if (!this._root) {throw Error('unexpected error');}\n    return this._root.$i18n._ntp(value, locale, key, options);\n  } else {\n    return ret || [];\n  }\n};\n\nObject.defineProperties(VueI18n.prototype, prototypeAccessors);\n\nvar availabilities;\n// $FlowFixMe\nObject.defineProperty(VueI18n, 'availabilities', {\n  get: function get() {\n    if (!availabilities) {\n      var intlDefined = typeof Intl !== 'undefined';\n      availabilities = {\n        dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n        numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined' };\n\n    }\n\n    return availabilities;\n  } });\n\n\nVueI18n.install = install;\nVueI18n.version = '8.11.2';var _default =\n\nVueI18n;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 6)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),

/***/ 500:
/*!******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/EAN_UPC/EAN.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _constants = __webpack_require__(/*! ./constants */ 499);\n\nvar _encoder = __webpack_require__(/*! ./encoder */ 501);\n\nvar _encoder2 = _interopRequireDefault(_encoder);\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\n// Base class for EAN8 & EAN13\nvar EAN = function (_Barcode) {\n  _inherits(EAN, _Barcode);\n\n  function EAN(data, options) {\n    _classCallCheck(this, EAN);\n\n    // Make sure the font is not bigger than the space between the guard bars\n    var _this = _possibleConstructorReturn(this, (EAN.__proto__ || Object.getPrototypeOf(EAN)).call(this, data, options));\n\n    _this.fontSize = !options.flat && options.fontSize > options.width * 10 ? options.width * 10 : options.fontSize;\n\n    // Make the guard bars go down half the way of the text\n    _this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n    return _this;\n  }\n\n  _createClass(EAN, [{\n    key: 'encode',\n    value: function encode() {\n      return this.options.flat ? this.encodeFlat() : this.encodeGuarded();\n    } },\n  {\n    key: 'leftText',\n    value: function leftText(from, to) {\n      return this.text.substr(from, to);\n    } },\n  {\n    key: 'leftEncode',\n    value: function leftEncode(data, structure) {\n      return (0, _encoder2.default)(data, structure);\n    } },\n  {\n    key: 'rightText',\n    value: function rightText(from, to) {\n      return this.text.substr(from, to);\n    } },\n  {\n    key: 'rightEncode',\n    value: function rightEncode(data, structure) {\n      return (0, _encoder2.default)(data, structure);\n    } },\n  {\n    key: 'encodeGuarded',\n    value: function encodeGuarded() {\n      var textOptions = { fontSize: this.fontSize };\n      var guardOptions = { height: this.guardHeight };\n\n      return [{ data: _constants.SIDE_BIN, options: guardOptions }, { data: this.leftEncode(), text: this.leftText(), options: textOptions }, { data: _constants.MIDDLE_BIN, options: guardOptions }, { data: this.rightEncode(), text: this.rightText(), options: textOptions }, { data: _constants.SIDE_BIN, options: guardOptions }];\n    } },\n  {\n    key: 'encodeFlat',\n    value: function encodeFlat() {\n      var data = [_constants.SIDE_BIN, this.leftEncode(), _constants.MIDDLE_BIN, this.rightEncode(), _constants.SIDE_BIN];\n\n      return {\n        data: data.join(''),\n        text: this.text };\n\n    } }]);\n\n\n  return EAN;\n}(_Barcode3.default);\n\nexports.default = EAN;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///500\n");

/***/ }),

/***/ 501:
/*!**********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/EAN_UPC/encoder.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _constants = __webpack_require__(/*! ./constants */ 499);\n\n// Encode data string\nvar encode = function encode(data, structure, separator) {\n  var encoded = data.split('').map(function (val, idx) {\n    return _constants.BINARIES[structure[idx]];\n  }).map(function (val, idx) {\n    return val ? val[data[idx]] : '';\n  });\n\n  if (separator) {\n    var last = data.length - 1;\n    encoded = encoded.map(function (val, idx) {\n      return idx < last ? val + separator : val;\n    });\n  }\n\n  return encoded.join('');\n};\n\nexports.default = encode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9FQU5fVVBDL2VuY29kZXIuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfY29uc3RhbnRzIiwicmVxdWlyZSIsImVuY29kZSIsImRhdGEiLCJzdHJ1Y3R1cmUiLCJzZXBhcmF0b3IiLCJlbmNvZGVkIiwic3BsaXQiLCJtYXAiLCJ2YWwiLCJpZHgiLCJCSU5BUklFUyIsImxhc3QiLCJsZW5ndGgiLCJqb2luIiwiZGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDNUNDLE9BQUssRUFBRSxJQURxQyxFQUE3Qzs7O0FBSUEsSUFBSUMsVUFBVSxHQUFHQyxtQkFBTyxDQUFDLHNCQUFELENBQXhCOztBQUVBO0FBQ0EsSUFBSUMsTUFBTSxHQUFHLFNBQVNBLE1BQVQsQ0FBZ0JDLElBQWhCLEVBQXNCQyxTQUF0QixFQUFpQ0MsU0FBakMsRUFBNEM7QUFDeEQsTUFBSUMsT0FBTyxHQUFHSCxJQUFJLENBQUNJLEtBQUwsQ0FBVyxFQUFYLEVBQWVDLEdBQWYsQ0FBbUIsVUFBVUMsR0FBVixFQUFlQyxHQUFmLEVBQW9CO0FBQ3BELFdBQU9WLFVBQVUsQ0FBQ1csUUFBWCxDQUFvQlAsU0FBUyxDQUFDTSxHQUFELENBQTdCLENBQVA7QUFDQSxHQUZhLEVBRVhGLEdBRlcsQ0FFUCxVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFDMUIsV0FBT0QsR0FBRyxHQUFHQSxHQUFHLENBQUNOLElBQUksQ0FBQ08sR0FBRCxDQUFMLENBQU4sR0FBb0IsRUFBOUI7QUFDQSxHQUphLENBQWQ7O0FBTUEsTUFBSUwsU0FBSixFQUFlO0FBQ2QsUUFBSU8sSUFBSSxHQUFHVCxJQUFJLENBQUNVLE1BQUwsR0FBYyxDQUF6QjtBQUNBUCxXQUFPLEdBQUdBLE9BQU8sQ0FBQ0UsR0FBUixDQUFZLFVBQVVDLEdBQVYsRUFBZUMsR0FBZixFQUFvQjtBQUN6QyxhQUFPQSxHQUFHLEdBQUdFLElBQU4sR0FBYUgsR0FBRyxHQUFHSixTQUFuQixHQUErQkksR0FBdEM7QUFDQSxLQUZTLENBQVY7QUFHQTs7QUFFRCxTQUFPSCxPQUFPLENBQUNRLElBQVIsQ0FBYSxFQUFiLENBQVA7QUFDQSxDQWZEOztBQWlCQWhCLE9BQU8sQ0FBQ2lCLE9BQVIsR0FBa0JiLE1BQWxCIiwiZmlsZSI6IjUwMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xyXG5cdHZhbHVlOiB0cnVlXHJcbn0pO1xyXG5cclxudmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCcuL2NvbnN0YW50cycpO1xyXG5cclxuLy8gRW5jb2RlIGRhdGEgc3RyaW5nXHJcbnZhciBlbmNvZGUgPSBmdW5jdGlvbiBlbmNvZGUoZGF0YSwgc3RydWN0dXJlLCBzZXBhcmF0b3IpIHtcclxuXHR2YXIgZW5jb2RlZCA9IGRhdGEuc3BsaXQoJycpLm1hcChmdW5jdGlvbiAodmFsLCBpZHgpIHtcclxuXHRcdHJldHVybiBfY29uc3RhbnRzLkJJTkFSSUVTW3N0cnVjdHVyZVtpZHhdXTtcclxuXHR9KS5tYXAoZnVuY3Rpb24gKHZhbCwgaWR4KSB7XHJcblx0XHRyZXR1cm4gdmFsID8gdmFsW2RhdGFbaWR4XV0gOiAnJztcclxuXHR9KTtcclxuXHJcblx0aWYgKHNlcGFyYXRvcikge1xyXG5cdFx0dmFyIGxhc3QgPSBkYXRhLmxlbmd0aCAtIDE7XHJcblx0XHRlbmNvZGVkID0gZW5jb2RlZC5tYXAoZnVuY3Rpb24gKHZhbCwgaWR4KSB7XHJcblx0XHRcdHJldHVybiBpZHggPCBsYXN0ID8gdmFsICsgc2VwYXJhdG9yIDogdmFsO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZW5jb2RlZC5qb2luKCcnKTtcclxufTtcclxuXHJcbmV4cG9ydHMuZGVmYXVsdCA9IGVuY29kZTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///501\n");

/***/ }),

/***/ 502:
/*!*******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/EAN_UPC/EAN8.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _get = function get(object, property, receiver) {if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {var parent = Object.getPrototypeOf(object);if (parent === null) {return undefined;} else {return get(parent, property, receiver);}} else if (\"value\" in desc) {return desc.value;} else {var getter = desc.get;if (getter === undefined) {return undefined;}return getter.call(receiver);}};\n\nvar _EAN2 = __webpack_require__(/*! ./EAN */ 500);\n\nvar _EAN3 = _interopRequireDefault(_EAN2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // Encoding documentation:\n// http://www.barcodeisland.com/ean8.phtml\n\n// Calculate the checksum digit\nvar checksum = function checksum(number) {\n  var res = number.substr(0, 7).split('').map(function (n) {\n    return +n;\n  }).reduce(function (sum, a, idx) {\n    return idx % 2 ? sum + a : sum + a * 3;\n  }, 0);\n\n  return (10 - res % 10) % 10;\n};\n\nvar EAN8 = function (_EAN) {\n  _inherits(EAN8, _EAN);\n\n  function EAN8(data, options) {\n    _classCallCheck(this, EAN8);\n\n    // Add checksum if it does not exist\n    if (data.search(/^[0-9]{7}$/) !== -1) {\n      data += checksum(data);\n    }\n\n    return _possibleConstructorReturn(this, (EAN8.__proto__ || Object.getPrototypeOf(EAN8)).call(this, data, options));\n  }\n\n  _createClass(EAN8, [{\n    key: 'valid',\n    value: function valid() {\n      return this.data.search(/^[0-9]{8}$/) !== -1 && +this.data[7] === checksum(this.data);\n    } },\n  {\n    key: 'leftText',\n    value: function leftText() {\n      return _get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'leftText', this).call(this, 0, 4);\n    } },\n  {\n    key: 'leftEncode',\n    value: function leftEncode() {\n      var data = this.data.substr(0, 4);\n      return _get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'leftEncode', this).call(this, data, 'LLLL');\n    } },\n  {\n    key: 'rightText',\n    value: function rightText() {\n      return _get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'rightText', this).call(this, 4, 4);\n    } },\n  {\n    key: 'rightEncode',\n    value: function rightEncode() {\n      var data = this.data.substr(4, 4);\n      return _get(EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype), 'rightEncode', this).call(this, data, 'RRRR');\n    } }]);\n\n\n  return EAN8;\n}(_EAN3.default);\n\nexports.default = EAN8;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///502\n");

/***/ }),

/***/ 503:
/*!*******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/EAN_UPC/EAN5.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _constants = __webpack_require__(/*! ./constants */ 499);\n\nvar _encoder = __webpack_require__(/*! ./encoder */ 501);\n\nvar _encoder2 = _interopRequireDefault(_encoder);\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // Encoding documentation:\n// https://en.wikipedia.org/wiki/EAN_5#Encoding\n\nvar checksum = function checksum(data) {\n  var result = data.split('').map(function (n) {\n    return +n;\n  }).reduce(function (sum, a, idx) {\n    return idx % 2 ? sum + a * 9 : sum + a * 3;\n  }, 0);\n  return result % 10;\n};\n\nvar EAN5 = function (_Barcode) {\n  _inherits(EAN5, _Barcode);\n\n  function EAN5(data, options) {\n    _classCallCheck(this, EAN5);\n\n    return _possibleConstructorReturn(this, (EAN5.__proto__ || Object.getPrototypeOf(EAN5)).call(this, data, options));\n  }\n\n  _createClass(EAN5, [{\n    key: 'valid',\n    value: function valid() {\n      return this.data.search(/^[0-9]{5}$/) !== -1;\n    } },\n  {\n    key: 'encode',\n    value: function encode() {\n      var structure = _constants.EAN5_STRUCTURE[checksum(this.data)];\n      return {\n        data: '1011' + (0, _encoder2.default)(this.data, structure, '01'),\n        text: this.text };\n\n    } }]);\n\n\n  return EAN5;\n}(_Barcode3.default);\n\nexports.default = EAN5;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///503\n");

/***/ }),

/***/ 504:
/*!*******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/EAN_UPC/EAN2.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _constants = __webpack_require__(/*! ./constants */ 499);\n\nvar _encoder = __webpack_require__(/*! ./encoder */ 501);\n\nvar _encoder2 = _interopRequireDefault(_encoder);\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // Encoding documentation:\n// https://en.wikipedia.org/wiki/EAN_2#Encoding\n\nvar EAN2 = function (_Barcode) {\n  _inherits(EAN2, _Barcode);\n\n  function EAN2(data, options) {\n    _classCallCheck(this, EAN2);\n\n    return _possibleConstructorReturn(this, (EAN2.__proto__ || Object.getPrototypeOf(EAN2)).call(this, data, options));\n  }\n\n  _createClass(EAN2, [{\n    key: 'valid',\n    value: function valid() {\n      return this.data.search(/^[0-9]{2}$/) !== -1;\n    } },\n  {\n    key: 'encode',\n    value: function encode() {\n      // Choose the structure based on the number mod 4\n      var structure = _constants.EAN2_STRUCTURE[parseInt(this.data) % 4];\n      return {\n        // Start bits + Encode the two digits with 01 in between\n        data: '1011' + (0, _encoder2.default)(this.data, structure, '01'),\n        text: this.text };\n\n    } }]);\n\n\n  return EAN2;\n}(_Barcode3.default);\n\nexports.default = EAN2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///504\n");

/***/ }),

/***/ 505:
/*!******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/EAN_UPC/UPC.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nexports.checksum = checksum;\n\nvar _encoder = __webpack_require__(/*! ./encoder */ 501);\n\nvar _encoder2 = _interopRequireDefault(_encoder);\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode.js */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // Encoding documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#Encoding\n\nvar UPC = function (_Barcode) {\n  _inherits(UPC, _Barcode);\n\n  function UPC(data, options) {\n    _classCallCheck(this, UPC);\n\n    // Add checksum if it does not exist\n    if (data.search(/^[0-9]{11}$/) !== -1) {\n      data += checksum(data);\n    }\n\n    var _this = _possibleConstructorReturn(this, (UPC.__proto__ || Object.getPrototypeOf(UPC)).call(this, data, options));\n\n    _this.displayValue = options.displayValue;\n\n    // Make sure the font is not bigger than the space between the guard bars\n    if (options.fontSize > options.width * 10) {\n      _this.fontSize = options.width * 10;\n    } else {\n      _this.fontSize = options.fontSize;\n    }\n\n    // Make the guard bars go down half the way of the text\n    _this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n    return _this;\n  }\n\n  _createClass(UPC, [{\n    key: \"valid\",\n    value: function valid() {\n      return this.data.search(/^[0-9]{12}$/) !== -1 && this.data[11] == checksum(this.data);\n    } },\n  {\n    key: \"encode\",\n    value: function encode() {\n      if (this.options.flat) {\n        return this.flatEncoding();\n      } else {\n        return this.guardedEncoding();\n      }\n    } },\n  {\n    key: \"flatEncoding\",\n    value: function flatEncoding() {\n      var result = \"\";\n\n      result += \"101\";\n      result += (0, _encoder2.default)(this.data.substr(0, 6), \"LLLLLL\");\n      result += \"01010\";\n      result += (0, _encoder2.default)(this.data.substr(6, 6), \"RRRRRR\");\n      result += \"101\";\n\n      return {\n        data: result,\n        text: this.text };\n\n    } },\n  {\n    key: \"guardedEncoding\",\n    value: function guardedEncoding() {\n      var result = [];\n\n      // Add the first digit\n      if (this.displayValue) {\n        result.push({\n          data: \"00000000\",\n          text: this.text.substr(0, 1),\n          options: { textAlign: \"left\", fontSize: this.fontSize } });\n\n      }\n\n      // Add the guard bars\n      result.push({\n        data: \"101\" + (0, _encoder2.default)(this.data[0], \"L\"),\n        options: { height: this.guardHeight } });\n\n\n      // Add the left side\n      result.push({\n        data: (0, _encoder2.default)(this.data.substr(1, 5), \"LLLLL\"),\n        text: this.text.substr(1, 5),\n        options: { fontSize: this.fontSize } });\n\n\n      // Add the middle bits\n      result.push({\n        data: \"01010\",\n        options: { height: this.guardHeight } });\n\n\n      // Add the right side\n      result.push({\n        data: (0, _encoder2.default)(this.data.substr(6, 5), \"RRRRR\"),\n        text: this.text.substr(6, 5),\n        options: { fontSize: this.fontSize } });\n\n\n      // Add the end bits\n      result.push({\n        data: (0, _encoder2.default)(this.data[11], \"R\") + \"101\",\n        options: { height: this.guardHeight } });\n\n\n      // Add the last digit\n      if (this.displayValue) {\n        result.push({\n          data: \"00000000\",\n          text: this.text.substr(11, 1),\n          options: { textAlign: \"right\", fontSize: this.fontSize } });\n\n      }\n\n      return result;\n    } }]);\n\n\n  return UPC;\n}(_Barcode3.default);\n\n// Calulate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\n\n\nfunction checksum(number) {\n  var result = 0;\n\n  var i;\n  for (i = 1; i < 11; i += 2) {\n    result += parseInt(number[i]);\n  }\n  for (i = 0; i < 11; i += 2) {\n    result += parseInt(number[i]) * 3;\n  }\n\n  return (10 - result % 10) % 10;\n}\n\nexports.default = UPC;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///505\n");

/***/ }),

/***/ 506:
/*!*******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/EAN_UPC/UPCE.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _encoder = __webpack_require__(/*! ./encoder */ 501);\n\nvar _encoder2 = _interopRequireDefault(_encoder);\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode.js */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nvar _UPC = __webpack_require__(/*! ./UPC.js */ 505);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // Encoding documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#Encoding\n//\n// UPC-E documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#UPC-E\n\nvar EXPANSIONS = [\"XX00000XXX\", \"XX10000XXX\", \"XX20000XXX\", \"XXX00000XX\", \"XXXX00000X\", \"XXXXX00005\", \"XXXXX00006\", \"XXXXX00007\", \"XXXXX00008\", \"XXXXX00009\"];\n\nvar PARITIES = [[\"EEEOOO\", \"OOOEEE\"], [\"EEOEOO\", \"OOEOEE\"], [\"EEOOEO\", \"OOEEOE\"], [\"EEOOOE\", \"OOEEEO\"], [\"EOEEOO\", \"OEOOEE\"], [\"EOOEEO\", \"OEEOOE\"], [\"EOOOEE\", \"OEEEOO\"], [\"EOEOEO\", \"OEOEOE\"], [\"EOEOOE\", \"OEOEEO\"], [\"EOOEOE\", \"OEEOEO\"]];\n\nvar UPCE = function (_Barcode) {\n  _inherits(UPCE, _Barcode);\n\n  function UPCE(data, options) {\n    _classCallCheck(this, UPCE);\n\n    var _this = _possibleConstructorReturn(this, (UPCE.__proto__ || Object.getPrototypeOf(UPCE)).call(this, data, options));\n    // Code may be 6 or 8 digits;\n    // A 7 digit code is ambiguous as to whether the extra digit\n    // is a UPC-A check or number system digit.\n\n\n    _this.isValid = false;\n    if (data.search(/^[0-9]{6}$/) !== -1) {\n      _this.middleDigits = data;\n      _this.upcA = expandToUPCA(data, \"0\");\n      _this.text = options.text || '' + _this.upcA[0] + data + _this.upcA[_this.upcA.length - 1];\n      _this.isValid = true;\n    } else if (data.search(/^[01][0-9]{7}$/) !== -1) {\n      _this.middleDigits = data.substring(1, data.length - 1);\n      _this.upcA = expandToUPCA(_this.middleDigits, data[0]);\n\n      if (_this.upcA[_this.upcA.length - 1] === data[data.length - 1]) {\n        _this.isValid = true;\n      } else {\n        // checksum mismatch\n        return _possibleConstructorReturn(_this);\n      }\n    } else {\n      return _possibleConstructorReturn(_this);\n    }\n\n    _this.displayValue = options.displayValue;\n\n    // Make sure the font is not bigger than the space between the guard bars\n    if (options.fontSize > options.width * 10) {\n      _this.fontSize = options.width * 10;\n    } else {\n      _this.fontSize = options.fontSize;\n    }\n\n    // Make the guard bars go down half the way of the text\n    _this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n    return _this;\n  }\n\n  _createClass(UPCE, [{\n    key: 'valid',\n    value: function valid() {\n      return this.isValid;\n    } },\n  {\n    key: 'encode',\n    value: function encode() {\n      if (this.options.flat) {\n        return this.flatEncoding();\n      } else {\n        return this.guardedEncoding();\n      }\n    } },\n  {\n    key: 'flatEncoding',\n    value: function flatEncoding() {\n      var result = \"\";\n\n      result += \"101\";\n      result += this.encodeMiddleDigits();\n      result += \"010101\";\n\n      return {\n        data: result,\n        text: this.text };\n\n    } },\n  {\n    key: 'guardedEncoding',\n    value: function guardedEncoding() {\n      var result = [];\n\n      // Add the UPC-A number system digit beneath the quiet zone\n      if (this.displayValue) {\n        result.push({\n          data: \"00000000\",\n          text: this.text[0],\n          options: { textAlign: \"left\", fontSize: this.fontSize } });\n\n      }\n\n      // Add the guard bars\n      result.push({\n        data: \"101\",\n        options: { height: this.guardHeight } });\n\n\n      // Add the 6 UPC-E digits\n      result.push({\n        data: this.encodeMiddleDigits(),\n        text: this.text.substring(1, 7),\n        options: { fontSize: this.fontSize } });\n\n\n      // Add the end bits\n      result.push({\n        data: \"010101\",\n        options: { height: this.guardHeight } });\n\n\n      // Add the UPC-A check digit beneath the quiet zone\n      if (this.displayValue) {\n        result.push({\n          data: \"00000000\",\n          text: this.text[7],\n          options: { textAlign: \"right\", fontSize: this.fontSize } });\n\n      }\n\n      return result;\n    } },\n  {\n    key: 'encodeMiddleDigits',\n    value: function encodeMiddleDigits() {\n      var numberSystem = this.upcA[0];\n      var checkDigit = this.upcA[this.upcA.length - 1];\n      var parity = PARITIES[parseInt(checkDigit)][parseInt(numberSystem)];\n      return (0, _encoder2.default)(this.middleDigits, parity);\n    } }]);\n\n\n  return UPCE;\n}(_Barcode3.default);\n\nfunction expandToUPCA(middleDigits, numberSystem) {\n  var lastUpcE = parseInt(middleDigits[middleDigits.length - 1]);\n  var expansion = EXPANSIONS[lastUpcE];\n\n  var result = \"\";\n  var digitIndex = 0;\n  for (var i = 0; i < expansion.length; i++) {\n    var c = expansion[i];\n    if (c === 'X') {\n      result += middleDigits[digitIndex++];\n    } else {\n      result += c;\n    }\n  }\n\n  result = '' + numberSystem + result;\n  return '' + result + (0, _UPC.checksum)(result);\n}\n\nexports.default = UPCE;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///506\n");

/***/ }),

/***/ 507:
/*!****************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/ITF/index.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nexports.ITF14 = exports.ITF = undefined;\n\nvar _ITF = __webpack_require__(/*! ./ITF */ 508);\n\nvar _ITF2 = _interopRequireDefault(_ITF);\n\nvar _ITF3 = __webpack_require__(/*! ./ITF14 */ 510);\n\nvar _ITF4 = _interopRequireDefault(_ITF3);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nexports.ITF = _ITF2.default;\nexports.ITF14 = _ITF4.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9JVEYvaW5kZXguanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJJVEYxNCIsIklURiIsInVuZGVmaW5lZCIsIl9JVEYiLCJyZXF1aXJlIiwiX0lURjIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX0lURjMiLCJfSVRGNCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsT0FBSyxFQUFFLElBRG9DLEVBQTdDOztBQUdBRCxPQUFPLENBQUNFLEtBQVIsR0FBZ0JGLE9BQU8sQ0FBQ0csR0FBUixHQUFjQyxTQUE5Qjs7QUFFQSxJQUFJQyxJQUFJLEdBQUdDLG1CQUFPLENBQUMsZ0JBQUQsQ0FBbEI7O0FBRUEsSUFBSUMsS0FBSyxHQUFHQyxzQkFBc0IsQ0FBQ0gsSUFBRCxDQUFsQzs7QUFFQSxJQUFJSSxLQUFLLEdBQUdILG1CQUFPLENBQUMsa0JBQUQsQ0FBbkI7O0FBRUEsSUFBSUksS0FBSyxHQUFHRixzQkFBc0IsQ0FBQ0MsS0FBRCxDQUFsQzs7QUFFQSxTQUFTRCxzQkFBVCxDQUFnQ0csR0FBaEMsRUFBcUMsQ0FBRSxPQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEIsRUFBRUUsT0FBTyxFQUFFRixHQUFYLEVBQXJDLENBQXdEOztBQUUvRlgsT0FBTyxDQUFDRyxHQUFSLEdBQWNJLEtBQUssQ0FBQ00sT0FBcEI7QUFDQWIsT0FBTyxDQUFDRSxLQUFSLEdBQWdCUSxLQUFLLENBQUNHLE9BQXRCIiwiZmlsZSI6IjUwNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xyXG4gIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG5leHBvcnRzLklURjE0ID0gZXhwb3J0cy5JVEYgPSB1bmRlZmluZWQ7XHJcblxyXG52YXIgX0lURiA9IHJlcXVpcmUoJy4vSVRGJyk7XHJcblxyXG52YXIgX0lURjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9JVEYpO1xyXG5cclxudmFyIF9JVEYzID0gcmVxdWlyZSgnLi9JVEYxNCcpO1xyXG5cclxudmFyIF9JVEY0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfSVRGMyk7XHJcblxyXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxyXG5cclxuZXhwb3J0cy5JVEYgPSBfSVRGMi5kZWZhdWx0O1xyXG5leHBvcnRzLklURjE0ID0gX0lURjQuZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///507\n");

/***/ }),

/***/ 508:
/*!**************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/ITF/ITF.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _constants = __webpack_require__(/*! ./constants */ 509);\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\nvar ITF = function (_Barcode) {\n  _inherits(ITF, _Barcode);\n\n  function ITF() {\n    _classCallCheck(this, ITF);\n\n    return _possibleConstructorReturn(this, (ITF.__proto__ || Object.getPrototypeOf(ITF)).apply(this, arguments));\n  }\n\n  _createClass(ITF, [{\n    key: 'valid',\n    value: function valid() {\n      return this.data.search(/^([0-9]{2})+$/) !== -1;\n    } },\n  {\n    key: 'encode',\n    value: function encode() {\n      var _this2 = this;\n\n      // Calculate all the digit pairs\n      var encoded = this.data.match(/.{2}/g).map(function (pair) {\n        return _this2.encodePair(pair);\n      }).join('');\n\n      return {\n        data: _constants.START_BIN + encoded + _constants.END_BIN,\n        text: this.text };\n\n    }\n\n    // Calculate the data of a number pair\n  },\n  {\n    key: 'encodePair',\n    value: function encodePair(pair) {\n      var second = _constants.BINARIES[pair[1]];\n\n      return _constants.BINARIES[pair[0]].split('').map(function (first, idx) {\n        return (first === '1' ? '111' : '1') + (second[idx] === '1' ? '000' : '0');\n      }).join('');\n    } }]);\n\n\n  return ITF;\n}(_Barcode3.default);\n\nexports.default = ITF;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///508\n");

/***/ }),

/***/ 509:
/*!********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/ITF/constants.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nvar START_BIN = exports.START_BIN = '1010';\nvar END_BIN = exports.END_BIN = '11101';\n\nvar BINARIES = exports.BINARIES = ['00110', '10001', '01001', '11000', '00101', '10100', '01100', '00011', '10010', '01010'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9JVEYvY29uc3RhbnRzLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiU1RBUlRfQklOIiwiRU5EX0JJTiIsIkJJTkFSSUVTIl0sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUM1Q0MsT0FBSyxFQUFFLElBRHFDLEVBQTdDOztBQUdBLElBQUlDLFNBQVMsR0FBR0YsT0FBTyxDQUFDRSxTQUFSLEdBQW9CLE1BQXBDO0FBQ0EsSUFBSUMsT0FBTyxHQUFHSCxPQUFPLENBQUNHLE9BQVIsR0FBa0IsT0FBaEM7O0FBRUEsSUFBSUMsUUFBUSxHQUFHSixPQUFPLENBQUNJLFFBQVIsR0FBbUIsQ0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixPQUFuQixFQUE0QixPQUE1QixFQUFxQyxPQUFyQyxFQUE4QyxPQUE5QyxFQUF1RCxPQUF2RCxFQUFnRSxPQUFoRSxFQUF5RSxPQUF6RSxFQUFrRixPQUFsRixDQUFsQyIsImZpbGUiOiI1MDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuXHR2YWx1ZTogdHJ1ZVxyXG59KTtcclxudmFyIFNUQVJUX0JJTiA9IGV4cG9ydHMuU1RBUlRfQklOID0gJzEwMTAnO1xyXG52YXIgRU5EX0JJTiA9IGV4cG9ydHMuRU5EX0JJTiA9ICcxMTEwMSc7XHJcblxyXG52YXIgQklOQVJJRVMgPSBleHBvcnRzLkJJTkFSSUVTID0gWycwMDExMCcsICcxMDAwMScsICcwMTAwMScsICcxMTAwMCcsICcwMDEwMScsICcxMDEwMCcsICcwMTEwMCcsICcwMDAxMScsICcxMDAxMCcsICcwMTAxMCddOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///509\n");

/***/ }),

/***/ 510:
/*!****************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/ITF/ITF14.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _ITF2 = __webpack_require__(/*! ./ITF */ 508);\n\nvar _ITF3 = _interopRequireDefault(_ITF2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\n// Calculate the checksum digit\nvar checksum = function checksum(data) {\n  var res = data.substr(0, 13).split('').map(function (num) {\n    return parseInt(num, 10);\n  }).reduce(function (sum, n, idx) {\n    return sum + n * (3 - idx % 2 * 2);\n  }, 0);\n\n  return Math.ceil(res / 10) * 10 - res;\n};\n\nvar ITF14 = function (_ITF) {\n  _inherits(ITF14, _ITF);\n\n  function ITF14(data, options) {\n    _classCallCheck(this, ITF14);\n\n    // Add checksum if it does not exist\n    if (data.search(/^[0-9]{13}$/) !== -1) {\n      data += checksum(data);\n    }\n    return _possibleConstructorReturn(this, (ITF14.__proto__ || Object.getPrototypeOf(ITF14)).call(this, data, options));\n  }\n\n  _createClass(ITF14, [{\n    key: 'valid',\n    value: function valid() {\n      return this.data.search(/^[0-9]{14}$/) !== -1 && +this.data[13] === checksum(this.data);\n    } }]);\n\n\n  return ITF14;\n}(_ITF3.default);\n\nexports.default = ITF14;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///510\n");

/***/ }),

/***/ 511:
/*!****************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/MSI/index.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nexports.MSI1110 = exports.MSI1010 = exports.MSI11 = exports.MSI10 = exports.MSI = undefined;\n\nvar _MSI = __webpack_require__(/*! ./MSI.js */ 512);\n\nvar _MSI2 = _interopRequireDefault(_MSI);\n\nvar _MSI3 = __webpack_require__(/*! ./MSI10.js */ 513);\n\nvar _MSI4 = _interopRequireDefault(_MSI3);\n\nvar _MSI5 = __webpack_require__(/*! ./MSI11.js */ 515);\n\nvar _MSI6 = _interopRequireDefault(_MSI5);\n\nvar _MSI7 = __webpack_require__(/*! ./MSI1010.js */ 516);\n\nvar _MSI8 = _interopRequireDefault(_MSI7);\n\nvar _MSI9 = __webpack_require__(/*! ./MSI1110.js */ 517);\n\nvar _MSI10 = _interopRequireDefault(_MSI9);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nexports.MSI = _MSI2.default;\nexports.MSI10 = _MSI4.default;\nexports.MSI11 = _MSI6.default;\nexports.MSI1010 = _MSI8.default;\nexports.MSI1110 = _MSI10.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9NU0kvaW5kZXguanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJNU0kxMTEwIiwiTVNJMTAxMCIsIk1TSTExIiwiTVNJMTAiLCJNU0kiLCJ1bmRlZmluZWQiLCJfTVNJIiwicmVxdWlyZSIsIl9NU0kyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9NU0kzIiwiX01TSTQiLCJfTVNJNSIsIl9NU0k2IiwiX01TSTciLCJfTVNJOCIsIl9NU0k5IiwiX01TSTEwIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiXSwibWFwcGluZ3MiOiJBQUFhOztBQUViQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxPQUFLLEVBQUUsSUFEb0MsRUFBN0M7O0FBR0FELE9BQU8sQ0FBQ0UsT0FBUixHQUFrQkYsT0FBTyxDQUFDRyxPQUFSLEdBQWtCSCxPQUFPLENBQUNJLEtBQVIsR0FBZ0JKLE9BQU8sQ0FBQ0ssS0FBUixHQUFnQkwsT0FBTyxDQUFDTSxHQUFSLEdBQWNDLFNBQWxGOztBQUVBLElBQUlDLElBQUksR0FBR0MsbUJBQU8sQ0FBQyxtQkFBRCxDQUFsQjs7QUFFQSxJQUFJQyxLQUFLLEdBQUdDLHNCQUFzQixDQUFDSCxJQUFELENBQWxDOztBQUVBLElBQUlJLEtBQUssR0FBR0gsbUJBQU8sQ0FBQyxxQkFBRCxDQUFuQjs7QUFFQSxJQUFJSSxLQUFLLEdBQUdGLHNCQUFzQixDQUFDQyxLQUFELENBQWxDOztBQUVBLElBQUlFLEtBQUssR0FBR0wsbUJBQU8sQ0FBQyxxQkFBRCxDQUFuQjs7QUFFQSxJQUFJTSxLQUFLLEdBQUdKLHNCQUFzQixDQUFDRyxLQUFELENBQWxDOztBQUVBLElBQUlFLEtBQUssR0FBR1AsbUJBQU8sQ0FBQyx1QkFBRCxDQUFuQjs7QUFFQSxJQUFJUSxLQUFLLEdBQUdOLHNCQUFzQixDQUFDSyxLQUFELENBQWxDOztBQUVBLElBQUlFLEtBQUssR0FBR1QsbUJBQU8sQ0FBQyx1QkFBRCxDQUFuQjs7QUFFQSxJQUFJVSxNQUFNLEdBQUdSLHNCQUFzQixDQUFDTyxLQUFELENBQW5DOztBQUVBLFNBQVNQLHNCQUFULENBQWdDUyxHQUFoQyxFQUFxQyxDQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFRSxPQUFPLEVBQUVGLEdBQVgsRUFBckMsQ0FBd0Q7O0FBRS9GcEIsT0FBTyxDQUFDTSxHQUFSLEdBQWNJLEtBQUssQ0FBQ1ksT0FBcEI7QUFDQXRCLE9BQU8sQ0FBQ0ssS0FBUixHQUFnQlEsS0FBSyxDQUFDUyxPQUF0QjtBQUNBdEIsT0FBTyxDQUFDSSxLQUFSLEdBQWdCVyxLQUFLLENBQUNPLE9BQXRCO0FBQ0F0QixPQUFPLENBQUNHLE9BQVIsR0FBa0JjLEtBQUssQ0FBQ0ssT0FBeEI7QUFDQXRCLE9BQU8sQ0FBQ0UsT0FBUixHQUFrQmlCLE1BQU0sQ0FBQ0csT0FBekIiLCJmaWxlIjoiNTExLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgdmFsdWU6IHRydWVcclxufSk7XHJcbmV4cG9ydHMuTVNJMTExMCA9IGV4cG9ydHMuTVNJMTAxMCA9IGV4cG9ydHMuTVNJMTEgPSBleHBvcnRzLk1TSTEwID0gZXhwb3J0cy5NU0kgPSB1bmRlZmluZWQ7XHJcblxyXG52YXIgX01TSSA9IHJlcXVpcmUoJy4vTVNJLmpzJyk7XHJcblxyXG52YXIgX01TSTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9NU0kpO1xyXG5cclxudmFyIF9NU0kzID0gcmVxdWlyZSgnLi9NU0kxMC5qcycpO1xyXG5cclxudmFyIF9NU0k0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTVNJMyk7XHJcblxyXG52YXIgX01TSTUgPSByZXF1aXJlKCcuL01TSTExLmpzJyk7XHJcblxyXG52YXIgX01TSTYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9NU0k1KTtcclxuXHJcbnZhciBfTVNJNyA9IHJlcXVpcmUoJy4vTVNJMTAxMC5qcycpO1xyXG5cclxudmFyIF9NU0k4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTVNJNyk7XHJcblxyXG52YXIgX01TSTkgPSByZXF1aXJlKCcuL01TSTExMTAuanMnKTtcclxuXHJcbnZhciBfTVNJMTAgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9NU0k5KTtcclxuXHJcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XHJcblxyXG5leHBvcnRzLk1TSSA9IF9NU0kyLmRlZmF1bHQ7XHJcbmV4cG9ydHMuTVNJMTAgPSBfTVNJNC5kZWZhdWx0O1xyXG5leHBvcnRzLk1TSTExID0gX01TSTYuZGVmYXVsdDtcclxuZXhwb3J0cy5NU0kxMDEwID0gX01TSTguZGVmYXVsdDtcclxuZXhwb3J0cy5NU0kxMTEwID0gX01TSTEwLmRlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///511\n");

/***/ }),

/***/ 512:
/*!**************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/MSI/MSI.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode.js */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // Encoding documentation\n// https://en.wikipedia.org/wiki/MSI_Barcode#Character_set_and_binary_lookup\n\nvar MSI = function (_Barcode) {\n  _inherits(MSI, _Barcode);\n\n  function MSI(data, options) {\n    _classCallCheck(this, MSI);\n\n    return _possibleConstructorReturn(this, (MSI.__proto__ || Object.getPrototypeOf(MSI)).call(this, data, options));\n  }\n\n  _createClass(MSI, [{\n    key: \"encode\",\n    value: function encode() {\n      // Start bits\n      var ret = \"110\";\n\n      for (var i = 0; i < this.data.length; i++) {\n        // Convert the character to binary (always 4 binary digits)\n        var digit = parseInt(this.data[i]);\n        var bin = digit.toString(2);\n        bin = addZeroes(bin, 4 - bin.length);\n\n        // Add 100 for every zero and 110 for every 1\n        for (var b = 0; b < bin.length; b++) {\n          ret += bin[b] == \"0\" ? \"100\" : \"110\";\n        }\n      }\n\n      // End bits\n      ret += \"1001\";\n\n      return {\n        data: ret,\n        text: this.text };\n\n    } },\n  {\n    key: \"valid\",\n    value: function valid() {\n      return this.data.search(/^[0-9]+$/) !== -1;\n    } }]);\n\n\n  return MSI;\n}(_Barcode3.default);\n\nfunction addZeroes(number, n) {\n  for (var i = 0; i < n; i++) {\n    number = \"0\" + number;\n  }\n  return number;\n}\n\nexports.default = MSI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///512\n");

/***/ }),

/***/ 513:
/*!****************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/MSI/MSI10.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _MSI2 = __webpack_require__(/*! ./MSI.js */ 512);\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = __webpack_require__(/*! ./checksums.js */ 514);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\nvar MSI10 = function (_MSI) {\n  _inherits(MSI10, _MSI);\n\n  function MSI10(data, options) {\n    _classCallCheck(this, MSI10);\n\n    return _possibleConstructorReturn(this, (MSI10.__proto__ || Object.getPrototypeOf(MSI10)).call(this, data + (0, _checksums.mod10)(data), options));\n  }\n\n  return MSI10;\n}(_MSI3.default);\n\nexports.default = MSI10;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9NU0kvTVNJMTAuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfTVNJMiIsInJlcXVpcmUiLCJfTVNJMyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfY2hlY2tzdW1zIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiY2FsbCIsIlJlZmVyZW5jZUVycm9yIiwiX2luaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwicHJvdG90eXBlIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJlbnVtZXJhYmxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIk1TSTEwIiwiX01TSSIsImRhdGEiLCJvcHRpb25zIiwiZ2V0UHJvdG90eXBlT2YiLCJtb2QxMCJdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDNUNDLE9BQUssRUFBRSxJQURxQyxFQUE3Qzs7O0FBSUEsSUFBSUMsS0FBSyxHQUFHQyxtQkFBTyxDQUFDLG1CQUFELENBQW5COztBQUVBLElBQUlDLEtBQUssR0FBR0Msc0JBQXNCLENBQUNILEtBQUQsQ0FBbEM7O0FBRUEsSUFBSUksVUFBVSxHQUFHSCxtQkFBTyxDQUFDLHlCQUFELENBQXhCOztBQUVBLFNBQVNFLHNCQUFULENBQWdDRSxHQUFoQyxFQUFxQyxDQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFRSxPQUFPLEVBQUVGLEdBQVgsRUFBckMsQ0FBd0Q7O0FBRS9GLFNBQVNHLGVBQVQsQ0FBeUJDLFFBQXpCLEVBQW1DQyxXQUFuQyxFQUFnRCxDQUFFLElBQUksRUFBRUQsUUFBUSxZQUFZQyxXQUF0QixDQUFKLEVBQXdDLENBQUUsTUFBTSxJQUFJQyxTQUFKLENBQWMsbUNBQWQsQ0FBTixDQUEyRCxDQUFFOztBQUV6SixTQUFTQywwQkFBVCxDQUFvQ0MsSUFBcEMsRUFBMENDLElBQTFDLEVBQWdELENBQUUsSUFBSSxDQUFDRCxJQUFMLEVBQVcsQ0FBRSxNQUFNLElBQUlFLGNBQUosQ0FBbUIsMkRBQW5CLENBQU4sQ0FBd0YsQ0FBQyxPQUFPRCxJQUFJLEtBQUssT0FBT0EsSUFBUCxLQUFnQixRQUFoQixJQUE0QixPQUFPQSxJQUFQLEtBQWdCLFVBQWpELENBQUosR0FBbUVBLElBQW5FLEdBQTBFRCxJQUFqRixDQUF3Rjs7QUFFaFAsU0FBU0csU0FBVCxDQUFtQkMsUUFBbkIsRUFBNkJDLFVBQTdCLEVBQXlDLENBQUUsSUFBSSxPQUFPQSxVQUFQLEtBQXNCLFVBQXRCLElBQW9DQSxVQUFVLEtBQUssSUFBdkQsRUFBNkQsQ0FBRSxNQUFNLElBQUlQLFNBQUosQ0FBYyw2REFBNkQsT0FBT08sVUFBbEYsQ0FBTixDQUFzRyxDQUFDRCxRQUFRLENBQUNFLFNBQVQsR0FBcUJ2QixNQUFNLENBQUN3QixNQUFQLENBQWNGLFVBQVUsSUFBSUEsVUFBVSxDQUFDQyxTQUF2QyxFQUFrRCxFQUFFRSxXQUFXLEVBQUUsRUFBRXRCLEtBQUssRUFBRWtCLFFBQVQsRUFBbUJLLFVBQVUsRUFBRSxLQUEvQixFQUFzQ0MsUUFBUSxFQUFFLElBQWhELEVBQXNEQyxZQUFZLEVBQUUsSUFBcEUsRUFBZixFQUFsRCxDQUFyQixDQUFxSyxJQUFJTixVQUFKLEVBQWdCdEIsTUFBTSxDQUFDNkIsY0FBUCxHQUF3QjdCLE1BQU0sQ0FBQzZCLGNBQVAsQ0FBc0JSLFFBQXRCLEVBQWdDQyxVQUFoQyxDQUF4QixHQUFzRUQsUUFBUSxDQUFDUyxTQUFULEdBQXFCUixVQUEzRixDQUF3Rzs7QUFFOWUsSUFBSVMsS0FBSyxHQUFHLFVBQVVDLElBQVYsRUFBZ0I7QUFDM0JaLFdBQVMsQ0FBQ1csS0FBRCxFQUFRQyxJQUFSLENBQVQ7O0FBRUEsV0FBU0QsS0FBVCxDQUFlRSxJQUFmLEVBQXFCQyxPQUFyQixFQUE4QjtBQUM3QnRCLG1CQUFlLENBQUMsSUFBRCxFQUFPbUIsS0FBUCxDQUFmOztBQUVBLFdBQU9mLDBCQUEwQixDQUFDLElBQUQsRUFBTyxDQUFDZSxLQUFLLENBQUNELFNBQU4sSUFBbUI5QixNQUFNLENBQUNtQyxjQUFQLENBQXNCSixLQUF0QixDQUFwQixFQUFrRGIsSUFBbEQsQ0FBdUQsSUFBdkQsRUFBNkRlLElBQUksR0FBRyxDQUFDLEdBQUd6QixVQUFVLENBQUM0QixLQUFmLEVBQXNCSCxJQUF0QixDQUFwRSxFQUFpR0MsT0FBakcsQ0FBUCxDQUFqQztBQUNBOztBQUVELFNBQU9ILEtBQVA7QUFDQSxDQVZXLENBVVZ6QixLQUFLLENBQUNLLE9BVkksQ0FBWjs7QUFZQVQsT0FBTyxDQUFDUyxPQUFSLEdBQWtCb0IsS0FBbEIiLCJmaWxlIjoiNTEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcblx0dmFsdWU6IHRydWVcclxufSk7XHJcblxyXG52YXIgX01TSTIgPSByZXF1aXJlKCcuL01TSS5qcycpO1xyXG5cclxudmFyIF9NU0kzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTVNJMik7XHJcblxyXG52YXIgX2NoZWNrc3VtcyA9IHJlcXVpcmUoJy4vY2hlY2tzdW1zLmpzJyk7XHJcblxyXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxyXG5cclxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cclxuXHJcbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxyXG5cclxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XHJcblxyXG52YXIgTVNJMTAgPSBmdW5jdGlvbiAoX01TSSkge1xyXG5cdF9pbmhlcml0cyhNU0kxMCwgX01TSSk7XHJcblxyXG5cdGZ1bmN0aW9uIE1TSTEwKGRhdGEsIG9wdGlvbnMpIHtcclxuXHRcdF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNU0kxMCk7XHJcblxyXG5cdFx0cmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChNU0kxMC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKE1TSTEwKSkuY2FsbCh0aGlzLCBkYXRhICsgKDAsIF9jaGVja3N1bXMubW9kMTApKGRhdGEpLCBvcHRpb25zKSk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gTVNJMTA7XHJcbn0oX01TSTMuZGVmYXVsdCk7XHJcblxyXG5leHBvcnRzLmRlZmF1bHQgPSBNU0kxMDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///513\n");

/***/ }),

/***/ 514:
/*!********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/MSI/checksums.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nexports.mod10 = mod10;\nexports.mod11 = mod11;\nfunction mod10(number) {\n  var sum = 0;\n  for (var i = 0; i < number.length; i++) {\n    var n = parseInt(number[i]);\n    if ((i + number.length) % 2 === 0) {\n      sum += n;\n    } else {\n      sum += n * 2 % 10 + Math.floor(n * 2 / 10);\n    }\n  }\n  return (10 - sum % 10) % 10;\n}\n\nfunction mod11(number) {\n  var sum = 0;\n  var weights = [2, 3, 4, 5, 6, 7];\n  for (var i = 0; i < number.length; i++) {\n    var n = parseInt(number[number.length - 1 - i]);\n    sum += weights[i % weights.length] * n;\n  }\n  return (11 - sum % 11) % 11;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9NU0kvY2hlY2tzdW1zLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kMTAiLCJtb2QxMSIsIm51bWJlciIsInN1bSIsImkiLCJsZW5ndGgiLCJuIiwicGFyc2VJbnQiLCJNYXRoIiwiZmxvb3IiLCJ3ZWlnaHRzIl0sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUM1Q0MsT0FBSyxFQUFFLElBRHFDLEVBQTdDOztBQUdBRCxPQUFPLENBQUNFLEtBQVIsR0FBZ0JBLEtBQWhCO0FBQ0FGLE9BQU8sQ0FBQ0csS0FBUixHQUFnQkEsS0FBaEI7QUFDQSxTQUFTRCxLQUFULENBQWVFLE1BQWYsRUFBdUI7QUFDdEIsTUFBSUMsR0FBRyxHQUFHLENBQVY7QUFDQSxPQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdGLE1BQU0sQ0FBQ0csTUFBM0IsRUFBbUNELENBQUMsRUFBcEMsRUFBd0M7QUFDdkMsUUFBSUUsQ0FBQyxHQUFHQyxRQUFRLENBQUNMLE1BQU0sQ0FBQ0UsQ0FBRCxDQUFQLENBQWhCO0FBQ0EsUUFBSSxDQUFDQSxDQUFDLEdBQUdGLE1BQU0sQ0FBQ0csTUFBWixJQUFzQixDQUF0QixLQUE0QixDQUFoQyxFQUFtQztBQUNsQ0YsU0FBRyxJQUFJRyxDQUFQO0FBQ0EsS0FGRCxNQUVPO0FBQ05ILFNBQUcsSUFBSUcsQ0FBQyxHQUFHLENBQUosR0FBUSxFQUFSLEdBQWFFLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxDQUFDLEdBQUcsQ0FBSixHQUFRLEVBQW5CLENBQXBCO0FBQ0E7QUFDRDtBQUNELFNBQU8sQ0FBQyxLQUFLSCxHQUFHLEdBQUcsRUFBWixJQUFrQixFQUF6QjtBQUNBOztBQUVELFNBQVNGLEtBQVQsQ0FBZUMsTUFBZixFQUF1QjtBQUN0QixNQUFJQyxHQUFHLEdBQUcsQ0FBVjtBQUNBLE1BQUlPLE9BQU8sR0FBRyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLENBQWQ7QUFDQSxPQUFLLElBQUlOLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdGLE1BQU0sQ0FBQ0csTUFBM0IsRUFBbUNELENBQUMsRUFBcEMsRUFBd0M7QUFDdkMsUUFBSUUsQ0FBQyxHQUFHQyxRQUFRLENBQUNMLE1BQU0sQ0FBQ0EsTUFBTSxDQUFDRyxNQUFQLEdBQWdCLENBQWhCLEdBQW9CRCxDQUFyQixDQUFQLENBQWhCO0FBQ0FELE9BQUcsSUFBSU8sT0FBTyxDQUFDTixDQUFDLEdBQUdNLE9BQU8sQ0FBQ0wsTUFBYixDQUFQLEdBQThCQyxDQUFyQztBQUNBO0FBQ0QsU0FBTyxDQUFDLEtBQUtILEdBQUcsR0FBRyxFQUFaLElBQWtCLEVBQXpCO0FBQ0EiLCJmaWxlIjoiNTE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuXHR2YWx1ZTogdHJ1ZVxyXG59KTtcclxuZXhwb3J0cy5tb2QxMCA9IG1vZDEwO1xyXG5leHBvcnRzLm1vZDExID0gbW9kMTE7XHJcbmZ1bmN0aW9uIG1vZDEwKG51bWJlcikge1xyXG5cdHZhciBzdW0gPSAwO1xyXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbnVtYmVyLmxlbmd0aDsgaSsrKSB7XHJcblx0XHR2YXIgbiA9IHBhcnNlSW50KG51bWJlcltpXSk7XHJcblx0XHRpZiAoKGkgKyBudW1iZXIubGVuZ3RoKSAlIDIgPT09IDApIHtcclxuXHRcdFx0c3VtICs9IG47XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRzdW0gKz0gbiAqIDIgJSAxMCArIE1hdGguZmxvb3IobiAqIDIgLyAxMCk7XHJcblx0XHR9XHJcblx0fVxyXG5cdHJldHVybiAoMTAgLSBzdW0gJSAxMCkgJSAxMDtcclxufVxyXG5cclxuZnVuY3Rpb24gbW9kMTEobnVtYmVyKSB7XHJcblx0dmFyIHN1bSA9IDA7XHJcblx0dmFyIHdlaWdodHMgPSBbMiwgMywgNCwgNSwgNiwgN107XHJcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBudW1iZXIubGVuZ3RoOyBpKyspIHtcclxuXHRcdHZhciBuID0gcGFyc2VJbnQobnVtYmVyW251bWJlci5sZW5ndGggLSAxIC0gaV0pO1xyXG5cdFx0c3VtICs9IHdlaWdodHNbaSAlIHdlaWdodHMubGVuZ3RoXSAqIG47XHJcblx0fVxyXG5cdHJldHVybiAoMTEgLSBzdW0gJSAxMSkgJSAxMTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///514\n");

/***/ }),

/***/ 515:
/*!****************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/MSI/MSI11.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _MSI2 = __webpack_require__(/*! ./MSI.js */ 512);\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = __webpack_require__(/*! ./checksums.js */ 514);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\nvar MSI11 = function (_MSI) {\n  _inherits(MSI11, _MSI);\n\n  function MSI11(data, options) {\n    _classCallCheck(this, MSI11);\n\n    return _possibleConstructorReturn(this, (MSI11.__proto__ || Object.getPrototypeOf(MSI11)).call(this, data + (0, _checksums.mod11)(data), options));\n  }\n\n  return MSI11;\n}(_MSI3.default);\n\nexports.default = MSI11;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9NU0kvTVNJMTEuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfTVNJMiIsInJlcXVpcmUiLCJfTVNJMyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfY2hlY2tzdW1zIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiY2FsbCIsIlJlZmVyZW5jZUVycm9yIiwiX2luaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwicHJvdG90eXBlIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJlbnVtZXJhYmxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIk1TSTExIiwiX01TSSIsImRhdGEiLCJvcHRpb25zIiwiZ2V0UHJvdG90eXBlT2YiLCJtb2QxMSJdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDNUNDLE9BQUssRUFBRSxJQURxQyxFQUE3Qzs7O0FBSUEsSUFBSUMsS0FBSyxHQUFHQyxtQkFBTyxDQUFDLG1CQUFELENBQW5COztBQUVBLElBQUlDLEtBQUssR0FBR0Msc0JBQXNCLENBQUNILEtBQUQsQ0FBbEM7O0FBRUEsSUFBSUksVUFBVSxHQUFHSCxtQkFBTyxDQUFDLHlCQUFELENBQXhCOztBQUVBLFNBQVNFLHNCQUFULENBQWdDRSxHQUFoQyxFQUFxQyxDQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFRSxPQUFPLEVBQUVGLEdBQVgsRUFBckMsQ0FBd0Q7O0FBRS9GLFNBQVNHLGVBQVQsQ0FBeUJDLFFBQXpCLEVBQW1DQyxXQUFuQyxFQUFnRCxDQUFFLElBQUksRUFBRUQsUUFBUSxZQUFZQyxXQUF0QixDQUFKLEVBQXdDLENBQUUsTUFBTSxJQUFJQyxTQUFKLENBQWMsbUNBQWQsQ0FBTixDQUEyRCxDQUFFOztBQUV6SixTQUFTQywwQkFBVCxDQUFvQ0MsSUFBcEMsRUFBMENDLElBQTFDLEVBQWdELENBQUUsSUFBSSxDQUFDRCxJQUFMLEVBQVcsQ0FBRSxNQUFNLElBQUlFLGNBQUosQ0FBbUIsMkRBQW5CLENBQU4sQ0FBd0YsQ0FBQyxPQUFPRCxJQUFJLEtBQUssT0FBT0EsSUFBUCxLQUFnQixRQUFoQixJQUE0QixPQUFPQSxJQUFQLEtBQWdCLFVBQWpELENBQUosR0FBbUVBLElBQW5FLEdBQTBFRCxJQUFqRixDQUF3Rjs7QUFFaFAsU0FBU0csU0FBVCxDQUFtQkMsUUFBbkIsRUFBNkJDLFVBQTdCLEVBQXlDLENBQUUsSUFBSSxPQUFPQSxVQUFQLEtBQXNCLFVBQXRCLElBQW9DQSxVQUFVLEtBQUssSUFBdkQsRUFBNkQsQ0FBRSxNQUFNLElBQUlQLFNBQUosQ0FBYyw2REFBNkQsT0FBT08sVUFBbEYsQ0FBTixDQUFzRyxDQUFDRCxRQUFRLENBQUNFLFNBQVQsR0FBcUJ2QixNQUFNLENBQUN3QixNQUFQLENBQWNGLFVBQVUsSUFBSUEsVUFBVSxDQUFDQyxTQUF2QyxFQUFrRCxFQUFFRSxXQUFXLEVBQUUsRUFBRXRCLEtBQUssRUFBRWtCLFFBQVQsRUFBbUJLLFVBQVUsRUFBRSxLQUEvQixFQUFzQ0MsUUFBUSxFQUFFLElBQWhELEVBQXNEQyxZQUFZLEVBQUUsSUFBcEUsRUFBZixFQUFsRCxDQUFyQixDQUFxSyxJQUFJTixVQUFKLEVBQWdCdEIsTUFBTSxDQUFDNkIsY0FBUCxHQUF3QjdCLE1BQU0sQ0FBQzZCLGNBQVAsQ0FBc0JSLFFBQXRCLEVBQWdDQyxVQUFoQyxDQUF4QixHQUFzRUQsUUFBUSxDQUFDUyxTQUFULEdBQXFCUixVQUEzRixDQUF3Rzs7QUFFOWUsSUFBSVMsS0FBSyxHQUFHLFVBQVVDLElBQVYsRUFBZ0I7QUFDM0JaLFdBQVMsQ0FBQ1csS0FBRCxFQUFRQyxJQUFSLENBQVQ7O0FBRUEsV0FBU0QsS0FBVCxDQUFlRSxJQUFmLEVBQXFCQyxPQUFyQixFQUE4QjtBQUM3QnRCLG1CQUFlLENBQUMsSUFBRCxFQUFPbUIsS0FBUCxDQUFmOztBQUVBLFdBQU9mLDBCQUEwQixDQUFDLElBQUQsRUFBTyxDQUFDZSxLQUFLLENBQUNELFNBQU4sSUFBbUI5QixNQUFNLENBQUNtQyxjQUFQLENBQXNCSixLQUF0QixDQUFwQixFQUFrRGIsSUFBbEQsQ0FBdUQsSUFBdkQsRUFBNkRlLElBQUksR0FBRyxDQUFDLEdBQUd6QixVQUFVLENBQUM0QixLQUFmLEVBQXNCSCxJQUF0QixDQUFwRSxFQUFpR0MsT0FBakcsQ0FBUCxDQUFqQztBQUNBOztBQUVELFNBQU9ILEtBQVA7QUFDQSxDQVZXLENBVVZ6QixLQUFLLENBQUNLLE9BVkksQ0FBWjs7QUFZQVQsT0FBTyxDQUFDUyxPQUFSLEdBQWtCb0IsS0FBbEIiLCJmaWxlIjoiNTE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcblx0dmFsdWU6IHRydWVcclxufSk7XHJcblxyXG52YXIgX01TSTIgPSByZXF1aXJlKCcuL01TSS5qcycpO1xyXG5cclxudmFyIF9NU0kzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTVNJMik7XHJcblxyXG52YXIgX2NoZWNrc3VtcyA9IHJlcXVpcmUoJy4vY2hlY2tzdW1zLmpzJyk7XHJcblxyXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxyXG5cclxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cclxuXHJcbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxyXG5cclxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XHJcblxyXG52YXIgTVNJMTEgPSBmdW5jdGlvbiAoX01TSSkge1xyXG5cdF9pbmhlcml0cyhNU0kxMSwgX01TSSk7XHJcblxyXG5cdGZ1bmN0aW9uIE1TSTExKGRhdGEsIG9wdGlvbnMpIHtcclxuXHRcdF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNU0kxMSk7XHJcblxyXG5cdFx0cmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChNU0kxMS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKE1TSTExKSkuY2FsbCh0aGlzLCBkYXRhICsgKDAsIF9jaGVja3N1bXMubW9kMTEpKGRhdGEpLCBvcHRpb25zKSk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gTVNJMTE7XHJcbn0oX01TSTMuZGVmYXVsdCk7XHJcblxyXG5leHBvcnRzLmRlZmF1bHQgPSBNU0kxMTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///515\n");

/***/ }),

/***/ 516:
/*!******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/MSI/MSI1010.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _MSI2 = __webpack_require__(/*! ./MSI.js */ 512);\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = __webpack_require__(/*! ./checksums.js */ 514);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\nvar MSI1010 = function (_MSI) {\n  _inherits(MSI1010, _MSI);\n\n  function MSI1010(data, options) {\n    _classCallCheck(this, MSI1010);\n\n    data += (0, _checksums.mod10)(data);\n    data += (0, _checksums.mod10)(data);\n    return _possibleConstructorReturn(this, (MSI1010.__proto__ || Object.getPrototypeOf(MSI1010)).call(this, data, options));\n  }\n\n  return MSI1010;\n}(_MSI3.default);\n\nexports.default = MSI1010;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9NU0kvTVNJMTAxMC5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9NU0kyIiwicmVxdWlyZSIsIl9NU0kzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9jaGVja3N1bXMiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJjYWxsIiwiUmVmZXJlbmNlRXJyb3IiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJwcm90b3R5cGUiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsImVudW1lcmFibGUiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiTVNJMTAxMCIsIl9NU0kiLCJkYXRhIiwib3B0aW9ucyIsIm1vZDEwIiwiZ2V0UHJvdG90eXBlT2YiXSwibWFwcGluZ3MiOiJBQUFhOztBQUViQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzVDQyxPQUFLLEVBQUUsSUFEcUMsRUFBN0M7OztBQUlBLElBQUlDLEtBQUssR0FBR0MsbUJBQU8sQ0FBQyxtQkFBRCxDQUFuQjs7QUFFQSxJQUFJQyxLQUFLLEdBQUdDLHNCQUFzQixDQUFDSCxLQUFELENBQWxDOztBQUVBLElBQUlJLFVBQVUsR0FBR0gsbUJBQU8sQ0FBQyx5QkFBRCxDQUF4Qjs7QUFFQSxTQUFTRSxzQkFBVCxDQUFnQ0UsR0FBaEMsRUFBcUMsQ0FBRSxPQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEIsRUFBRUUsT0FBTyxFQUFFRixHQUFYLEVBQXJDLENBQXdEOztBQUUvRixTQUFTRyxlQUFULENBQXlCQyxRQUF6QixFQUFtQ0MsV0FBbkMsRUFBZ0QsQ0FBRSxJQUFJLEVBQUVELFFBQVEsWUFBWUMsV0FBdEIsQ0FBSixFQUF3QyxDQUFFLE1BQU0sSUFBSUMsU0FBSixDQUFjLG1DQUFkLENBQU4sQ0FBMkQsQ0FBRTs7QUFFekosU0FBU0MsMEJBQVQsQ0FBb0NDLElBQXBDLEVBQTBDQyxJQUExQyxFQUFnRCxDQUFFLElBQUksQ0FBQ0QsSUFBTCxFQUFXLENBQUUsTUFBTSxJQUFJRSxjQUFKLENBQW1CLDJEQUFuQixDQUFOLENBQXdGLENBQUMsT0FBT0QsSUFBSSxLQUFLLE9BQU9BLElBQVAsS0FBZ0IsUUFBaEIsSUFBNEIsT0FBT0EsSUFBUCxLQUFnQixVQUFqRCxDQUFKLEdBQW1FQSxJQUFuRSxHQUEwRUQsSUFBakYsQ0FBd0Y7O0FBRWhQLFNBQVNHLFNBQVQsQ0FBbUJDLFFBQW5CLEVBQTZCQyxVQUE3QixFQUF5QyxDQUFFLElBQUksT0FBT0EsVUFBUCxLQUFzQixVQUF0QixJQUFvQ0EsVUFBVSxLQUFLLElBQXZELEVBQTZELENBQUUsTUFBTSxJQUFJUCxTQUFKLENBQWMsNkRBQTZELE9BQU9PLFVBQWxGLENBQU4sQ0FBc0csQ0FBQ0QsUUFBUSxDQUFDRSxTQUFULEdBQXFCdkIsTUFBTSxDQUFDd0IsTUFBUCxDQUFjRixVQUFVLElBQUlBLFVBQVUsQ0FBQ0MsU0FBdkMsRUFBa0QsRUFBRUUsV0FBVyxFQUFFLEVBQUV0QixLQUFLLEVBQUVrQixRQUFULEVBQW1CSyxVQUFVLEVBQUUsS0FBL0IsRUFBc0NDLFFBQVEsRUFBRSxJQUFoRCxFQUFzREMsWUFBWSxFQUFFLElBQXBFLEVBQWYsRUFBbEQsQ0FBckIsQ0FBcUssSUFBSU4sVUFBSixFQUFnQnRCLE1BQU0sQ0FBQzZCLGNBQVAsR0FBd0I3QixNQUFNLENBQUM2QixjQUFQLENBQXNCUixRQUF0QixFQUFnQ0MsVUFBaEMsQ0FBeEIsR0FBc0VELFFBQVEsQ0FBQ1MsU0FBVCxHQUFxQlIsVUFBM0YsQ0FBd0c7O0FBRTllLElBQUlTLE9BQU8sR0FBRyxVQUFVQyxJQUFWLEVBQWdCO0FBQzdCWixXQUFTLENBQUNXLE9BQUQsRUFBVUMsSUFBVixDQUFUOztBQUVBLFdBQVNELE9BQVQsQ0FBaUJFLElBQWpCLEVBQXVCQyxPQUF2QixFQUFnQztBQUMvQnRCLG1CQUFlLENBQUMsSUFBRCxFQUFPbUIsT0FBUCxDQUFmOztBQUVBRSxRQUFJLElBQUksQ0FBQyxHQUFHekIsVUFBVSxDQUFDMkIsS0FBZixFQUFzQkYsSUFBdEIsQ0FBUjtBQUNBQSxRQUFJLElBQUksQ0FBQyxHQUFHekIsVUFBVSxDQUFDMkIsS0FBZixFQUFzQkYsSUFBdEIsQ0FBUjtBQUNBLFdBQU9qQiwwQkFBMEIsQ0FBQyxJQUFELEVBQU8sQ0FBQ2UsT0FBTyxDQUFDRCxTQUFSLElBQXFCOUIsTUFBTSxDQUFDb0MsY0FBUCxDQUFzQkwsT0FBdEIsQ0FBdEIsRUFBc0RiLElBQXRELENBQTJELElBQTNELEVBQWlFZSxJQUFqRSxFQUF1RUMsT0FBdkUsQ0FBUCxDQUFqQztBQUNBOztBQUVELFNBQU9ILE9BQVA7QUFDQSxDQVphLENBWVp6QixLQUFLLENBQUNLLE9BWk0sQ0FBZDs7QUFjQVQsT0FBTyxDQUFDUyxPQUFSLEdBQWtCb0IsT0FBbEIiLCJmaWxlIjoiNTE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcblx0dmFsdWU6IHRydWVcclxufSk7XHJcblxyXG52YXIgX01TSTIgPSByZXF1aXJlKCcuL01TSS5qcycpO1xyXG5cclxudmFyIF9NU0kzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTVNJMik7XHJcblxyXG52YXIgX2NoZWNrc3VtcyA9IHJlcXVpcmUoJy4vY2hlY2tzdW1zLmpzJyk7XHJcblxyXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxyXG5cclxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cclxuXHJcbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxyXG5cclxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XHJcblxyXG52YXIgTVNJMTAxMCA9IGZ1bmN0aW9uIChfTVNJKSB7XHJcblx0X2luaGVyaXRzKE1TSTEwMTAsIF9NU0kpO1xyXG5cclxuXHRmdW5jdGlvbiBNU0kxMDEwKGRhdGEsIG9wdGlvbnMpIHtcclxuXHRcdF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNU0kxMDEwKTtcclxuXHJcblx0XHRkYXRhICs9ICgwLCBfY2hlY2tzdW1zLm1vZDEwKShkYXRhKTtcclxuXHRcdGRhdGEgKz0gKDAsIF9jaGVja3N1bXMubW9kMTApKGRhdGEpO1xyXG5cdFx0cmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChNU0kxMDEwLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTVNJMTAxMCkpLmNhbGwodGhpcywgZGF0YSwgb3B0aW9ucykpO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIE1TSTEwMTA7XHJcbn0oX01TSTMuZGVmYXVsdCk7XHJcblxyXG5leHBvcnRzLmRlZmF1bHQgPSBNU0kxMDEwOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///516\n");

/***/ }),

/***/ 517:
/*!******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/MSI/MSI1110.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\n\nvar _MSI2 = __webpack_require__(/*! ./MSI.js */ 512);\n\nvar _MSI3 = _interopRequireDefault(_MSI2);\n\nvar _checksums = __webpack_require__(/*! ./checksums.js */ 514);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\nvar MSI1110 = function (_MSI) {\n  _inherits(MSI1110, _MSI);\n\n  function MSI1110(data, options) {\n    _classCallCheck(this, MSI1110);\n\n    data += (0, _checksums.mod11)(data);\n    data += (0, _checksums.mod10)(data);\n    return _possibleConstructorReturn(this, (MSI1110.__proto__ || Object.getPrototypeOf(MSI1110)).call(this, data, options));\n  }\n\n  return MSI1110;\n}(_MSI3.default);\n\nexports.default = MSI1110;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy90a2ktYmFyY29kZS9iYXJjb2Rlcy9NU0kvTVNJMTExMC5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9NU0kyIiwicmVxdWlyZSIsIl9NU0kzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9jaGVja3N1bXMiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJjYWxsIiwiUmVmZXJlbmNlRXJyb3IiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJwcm90b3R5cGUiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsImVudW1lcmFibGUiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiTVNJMTExMCIsIl9NU0kiLCJkYXRhIiwib3B0aW9ucyIsIm1vZDExIiwibW9kMTAiLCJnZXRQcm90b3R5cGVPZiJdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDNUNDLE9BQUssRUFBRSxJQURxQyxFQUE3Qzs7O0FBSUEsSUFBSUMsS0FBSyxHQUFHQyxtQkFBTyxDQUFDLG1CQUFELENBQW5COztBQUVBLElBQUlDLEtBQUssR0FBR0Msc0JBQXNCLENBQUNILEtBQUQsQ0FBbEM7O0FBRUEsSUFBSUksVUFBVSxHQUFHSCxtQkFBTyxDQUFDLHlCQUFELENBQXhCOztBQUVBLFNBQVNFLHNCQUFULENBQWdDRSxHQUFoQyxFQUFxQyxDQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFRSxPQUFPLEVBQUVGLEdBQVgsRUFBckMsQ0FBd0Q7O0FBRS9GLFNBQVNHLGVBQVQsQ0FBeUJDLFFBQXpCLEVBQW1DQyxXQUFuQyxFQUFnRCxDQUFFLElBQUksRUFBRUQsUUFBUSxZQUFZQyxXQUF0QixDQUFKLEVBQXdDLENBQUUsTUFBTSxJQUFJQyxTQUFKLENBQWMsbUNBQWQsQ0FBTixDQUEyRCxDQUFFOztBQUV6SixTQUFTQywwQkFBVCxDQUFvQ0MsSUFBcEMsRUFBMENDLElBQTFDLEVBQWdELENBQUUsSUFBSSxDQUFDRCxJQUFMLEVBQVcsQ0FBRSxNQUFNLElBQUlFLGNBQUosQ0FBbUIsMkRBQW5CLENBQU4sQ0FBd0YsQ0FBQyxPQUFPRCxJQUFJLEtBQUssT0FBT0EsSUFBUCxLQUFnQixRQUFoQixJQUE0QixPQUFPQSxJQUFQLEtBQWdCLFVBQWpELENBQUosR0FBbUVBLElBQW5FLEdBQTBFRCxJQUFqRixDQUF3Rjs7QUFFaFAsU0FBU0csU0FBVCxDQUFtQkMsUUFBbkIsRUFBNkJDLFVBQTdCLEVBQXlDLENBQUUsSUFBSSxPQUFPQSxVQUFQLEtBQXNCLFVBQXRCLElBQW9DQSxVQUFVLEtBQUssSUFBdkQsRUFBNkQsQ0FBRSxNQUFNLElBQUlQLFNBQUosQ0FBYyw2REFBNkQsT0FBT08sVUFBbEYsQ0FBTixDQUFzRyxDQUFDRCxRQUFRLENBQUNFLFNBQVQsR0FBcUJ2QixNQUFNLENBQUN3QixNQUFQLENBQWNGLFVBQVUsSUFBSUEsVUFBVSxDQUFDQyxTQUF2QyxFQUFrRCxFQUFFRSxXQUFXLEVBQUUsRUFBRXRCLEtBQUssRUFBRWtCLFFBQVQsRUFBbUJLLFVBQVUsRUFBRSxLQUEvQixFQUFzQ0MsUUFBUSxFQUFFLElBQWhELEVBQXNEQyxZQUFZLEVBQUUsSUFBcEUsRUFBZixFQUFsRCxDQUFyQixDQUFxSyxJQUFJTixVQUFKLEVBQWdCdEIsTUFBTSxDQUFDNkIsY0FBUCxHQUF3QjdCLE1BQU0sQ0FBQzZCLGNBQVAsQ0FBc0JSLFFBQXRCLEVBQWdDQyxVQUFoQyxDQUF4QixHQUFzRUQsUUFBUSxDQUFDUyxTQUFULEdBQXFCUixVQUEzRixDQUF3Rzs7QUFFOWUsSUFBSVMsT0FBTyxHQUFHLFVBQVVDLElBQVYsRUFBZ0I7QUFDN0JaLFdBQVMsQ0FBQ1csT0FBRCxFQUFVQyxJQUFWLENBQVQ7O0FBRUEsV0FBU0QsT0FBVCxDQUFpQkUsSUFBakIsRUFBdUJDLE9BQXZCLEVBQWdDO0FBQy9CdEIsbUJBQWUsQ0FBQyxJQUFELEVBQU9tQixPQUFQLENBQWY7O0FBRUFFLFFBQUksSUFBSSxDQUFDLEdBQUd6QixVQUFVLENBQUMyQixLQUFmLEVBQXNCRixJQUF0QixDQUFSO0FBQ0FBLFFBQUksSUFBSSxDQUFDLEdBQUd6QixVQUFVLENBQUM0QixLQUFmLEVBQXNCSCxJQUF0QixDQUFSO0FBQ0EsV0FBT2pCLDBCQUEwQixDQUFDLElBQUQsRUFBTyxDQUFDZSxPQUFPLENBQUNELFNBQVIsSUFBcUI5QixNQUFNLENBQUNxQyxjQUFQLENBQXNCTixPQUF0QixDQUF0QixFQUFzRGIsSUFBdEQsQ0FBMkQsSUFBM0QsRUFBaUVlLElBQWpFLEVBQXVFQyxPQUF2RSxDQUFQLENBQWpDO0FBQ0E7O0FBRUQsU0FBT0gsT0FBUDtBQUNBLENBWmEsQ0FZWnpCLEtBQUssQ0FBQ0ssT0FaTSxDQUFkOztBQWNBVCxPQUFPLENBQUNTLE9BQVIsR0FBa0JvQixPQUFsQiIsImZpbGUiOiI1MTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuXHR2YWx1ZTogdHJ1ZVxyXG59KTtcclxuXHJcbnZhciBfTVNJMiA9IHJlcXVpcmUoJy4vTVNJLmpzJyk7XHJcblxyXG52YXIgX01TSTMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9NU0kyKTtcclxuXHJcbnZhciBfY2hlY2tzdW1zID0gcmVxdWlyZSgnLi9jaGVja3N1bXMuanMnKTtcclxuXHJcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XHJcblxyXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XHJcblxyXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cclxuXHJcbnZhciBNU0kxMTEwID0gZnVuY3Rpb24gKF9NU0kpIHtcclxuXHRfaW5oZXJpdHMoTVNJMTExMCwgX01TSSk7XHJcblxyXG5cdGZ1bmN0aW9uIE1TSTExMTAoZGF0YSwgb3B0aW9ucykge1xyXG5cdFx0X2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1TSTExMTApO1xyXG5cclxuXHRcdGRhdGEgKz0gKDAsIF9jaGVja3N1bXMubW9kMTEpKGRhdGEpO1xyXG5cdFx0ZGF0YSArPSAoMCwgX2NoZWNrc3Vtcy5tb2QxMCkoZGF0YSk7XHJcblx0XHRyZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKE1TSTExMTAuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihNU0kxMTEwKSkuY2FsbCh0aGlzLCBkYXRhLCBvcHRpb25zKSk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gTVNJMTExMDtcclxufShfTVNJMy5kZWZhdWx0KTtcclxuXHJcbmV4cG9ydHMuZGVmYXVsdCA9IE1TSTExMTA7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///517\n");

/***/ }),

/***/ 518:
/*!***********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/pharmacode/index.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nexports.pharmacode = undefined;\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode.js */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // Encoding documentation\n// http://www.gomaro.ch/ftproot/Laetus_PHARMA-CODE.pdf\n\nvar pharmacode = function (_Barcode) {\n  _inherits(pharmacode, _Barcode);\n\n  function pharmacode(data, options) {\n    _classCallCheck(this, pharmacode);\n\n    var _this = _possibleConstructorReturn(this, (pharmacode.__proto__ || Object.getPrototypeOf(pharmacode)).call(this, data, options));\n\n    _this.number = parseInt(data, 10);\n    return _this;\n  }\n\n  _createClass(pharmacode, [{\n    key: \"encode\",\n    value: function encode() {\n      var z = this.number;\n      var result = \"\";\n\n      // http://i.imgur.com/RMm4UDJ.png\n      // (source: http://www.gomaro.ch/ftproot/Laetus_PHARMA-CODE.pdf, page: 34)\n      while (!isNaN(z) && z != 0) {\n        if (z % 2 === 0) {\n          // Even\n          result = \"11100\" + result;\n          z = (z - 2) / 2;\n        } else {\n          // Odd\n          result = \"100\" + result;\n          z = (z - 1) / 2;\n        }\n      }\n\n      // Remove the two last zeroes\n      result = result.slice(0, -2);\n\n      return {\n        data: result,\n        text: this.text };\n\n    } },\n  {\n    key: \"valid\",\n    value: function valid() {\n      return this.number >= 3 && this.number <= 131070;\n    } }]);\n\n\n  return pharmacode;\n}(_Barcode3.default);\n\nexports.pharmacode = pharmacode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///518\n");

/***/ }),

/***/ 519:
/*!********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/codabar/index.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nexports.codabar = undefined;\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode.js */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // Encoding specification:\n// http://www.barcodeisland.com/codabar.phtml\n\nvar codabar = function (_Barcode) {\n  _inherits(codabar, _Barcode);\n\n  function codabar(data, options) {\n    _classCallCheck(this, codabar);\n\n    if (data.search(/^[0-9\\-\\$\\:\\.\\+\\/]+$/) === 0) {\n      data = \"A\" + data + \"A\";\n    }\n\n    var _this = _possibleConstructorReturn(this, (codabar.__proto__ || Object.getPrototypeOf(codabar)).call(this, data.toUpperCase(), options));\n\n    _this.text = _this.options.text || _this.text.replace(/[A-D]/g, '');\n    return _this;\n  }\n\n  _createClass(codabar, [{\n    key: \"valid\",\n    value: function valid() {\n      return this.data.search(/^[A-D][0-9\\-\\$\\:\\.\\+\\/]+[A-D]$/) !== -1;\n    } },\n  {\n    key: \"encode\",\n    value: function encode() {\n      var result = [];\n      var encodings = this.getEncodings();\n      for (var i = 0; i < this.data.length; i++) {\n        result.push(encodings[this.data.charAt(i)]);\n        // for all characters except the last, append a narrow-space (\"0\")\n        if (i !== this.data.length - 1) {\n          result.push(\"0\");\n        }\n      }\n      return {\n        text: this.text,\n        data: result.join('') };\n\n    } },\n  {\n    key: \"getEncodings\",\n    value: function getEncodings() {\n      return {\n        \"0\": \"101010011\",\n        \"1\": \"101011001\",\n        \"2\": \"101001011\",\n        \"3\": \"110010101\",\n        \"4\": \"101101001\",\n        \"5\": \"110101001\",\n        \"6\": \"100101011\",\n        \"7\": \"100101101\",\n        \"8\": \"100110101\",\n        \"9\": \"110100101\",\n        \"-\": \"101001101\",\n        \"$\": \"101100101\",\n        \":\": \"1101011011\",\n        \"/\": \"1101101011\",\n        \".\": \"1101101101\",\n        \"+\": \"101100110011\",\n        \"A\": \"1011001001\",\n        \"B\": \"1001001011\",\n        \"C\": \"1010010011\",\n        \"D\": \"1010011001\" };\n\n    } }]);\n\n\n  return codabar;\n}(_Barcode3.default);\n\nexports.codabar = codabar;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///519\n");

/***/ }),

/***/ 520:
/*!***************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/components/tki-barcode/barcodes/GenericBarcode/index.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true });\n\nexports.GenericBarcode = undefined;\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\nvar _Barcode2 = __webpack_require__(/*! ../Barcode.js */ 488);\n\nvar _Barcode3 = _interopRequireDefault(_Barcode2);\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}\n\nfunction _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\nvar GenericBarcode = function (_Barcode) {\n  _inherits(GenericBarcode, _Barcode);\n\n  function GenericBarcode(data, options) {\n    _classCallCheck(this, GenericBarcode);\n\n    return _possibleConstructorReturn(this, (GenericBarcode.__proto__ || Object.getPrototypeOf(GenericBarcode)).call(this, data, options)); // Sets this.data and this.text\n  }\n\n  // Return the corresponding binary numbers for the data provided\n\n\n  _createClass(GenericBarcode, [{\n    key: \"encode\",\n    value: function encode() {\n      return {\n        data: \"10101010101010101010101010101010101010101\",\n        text: this.text };\n\n    }\n\n    // Resturn true/false if the string provided is valid for this encoder\n  },\n  {\n    key: \"valid\",\n    value: function valid() {\n      return true;\n    } }]);\n\n\n  return GenericBarcode;\n}(_Barcode3.default);\n\nexports.GenericBarcode = GenericBarcode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///520\n");

/***/ }),

/***/ 53:
/*!************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/utils/customs.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni, __f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _bmob = _interopRequireDefault(__webpack_require__(/*! @/utils/bmob.js */ 10));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var _default =\n\n{\n  //得到客户列表\n  get_customList: function get_customList(disabled, search_text) {\n    return new Promise(function (resolve, reject) {\n      var userid = uni.getStorageSync(\"uid\");\n      var query = _bmob.default.Query(\"customs\");\n      query.order(\"num\");\n      query.equalTo(\"parent\", \"==\", userid);\n      query.equalTo(\"disabled\", \"==\", disabled);\n      if (search_text) {\n        query.equalTo(\"name\", \"==\", {\n          \"$regex\": \"\" + search_text + \".*\" });\n\n\n      }\n      query.find().then(function (res) {\n        resolve(res);\n      });\n    });\n\n  },\n\n  //产品详情里面得到客户统计\n  get_customCount: function get_customCount() {\n    return new Promise(function (resolve, reject) {\n      var userid = uni.getStorageSync(\"uid\");\n      var query = _bmob.default.Query(\"customs\");\n      query.equalTo(\"parent\", \"==\", userid);\n      query.find().then(function (res) {\n\n        var custom = res;var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {var _loop = function _loop() {var\n            item = _step.value;\n            var query = _bmob.default.Query(\"Bills\");\n            query.equalTo(\"type\", '==', -1);\n            query.equalTo(\"custom\", '==', item.objectId);\n            query.find().then(function (res) {\n              //console.log(res)\n              item.relations = res;\n            });};for (var _iterator = custom[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {_loop();\n          }} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return != null) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}\n\n        resolve(custom);\n\n      });\n    });\n  },\n\n\n  //增加数据操作\n  add_custom: function add_custom(params) {\n\n    console.log(__f__(params, \" at utils\\\\customs.js:54\"));\n    var userid = JSON.parse(localStorage.getItem('bmob')).objectId;\n\n    return new Promise(function (resolve, reject) {\n      var pointer = _bmob.default.Pointer('_User');\n      var poiID = pointer.set(userid);\n\n      if (params.objectId) {//修改操作\n        var query = _bmob.default.Query('customs');\n        query.set(\"custom_name\", params.custom_name);\n        query.set(\"debt\", Number(params.debt));\n        query.set(\"custom_address\", params.custom_address);\n        query.set(\"custom_phone\", params.custom_phone);\n        query.set(\"parent\", poiID);\n        query.set(\"disabled\", !params.disabled);\n        query.set(\"id\", params.objectId);\n        query.save().then(function (res) {\n          resolve(res);\n        }).catch(function (err) {\n          console.log(__f__(err, \" at utils\\\\customs.js:73\"));\n\n        });\n      } else {\n\n        var _query = _bmob.default.Query(\"customs\");\n        _query.equalTo(\"parent\", \"==\", userid);\n        _query.equalTo(\"name\", \"==\", params.custom_name);\n        _query.find().then(function (res) {\n          console.log(__f__(res, \" at utils\\\\customs.js:82\"));\n          if (res.length == 0) {\n            var _query2 = _bmob.default.Query('customs');\n            _query2.set(\"custom_name\", params.custom_name);\n            _query2.set(\"debt\", Number(params.debt));\n            _query2.set(\"custom_address\", params.custom_address);\n            _query2.set(\"custom_phone\", params.custom_phone);\n            _query2.set(\"have_out\", 0);\n            _query2.set(\"disabled\", !params.disabled);\n            _query2.set(\"parent\", poiID);\n            _query2.save().then(function (res) {\n              resolve(res);\n            }).catch(function (err) {\n              console.log(__f__(err, \" at utils\\\\customs.js:95\"));\n            });\n          } else {\n            resolve(false);\n          }\n\n        });\n\n      }\n\n    });\n  },\n\n  //删除门店\n  delete_custom: function delete_custom(id) {\n    return new Promise(function (resolve, reject) {\n      var query = _bmob.default.Query(\"customs\");\n      query.destroy(id).then(function (res) {\n        resolve(res);\n      }).catch(function (err) {\n        console.log(__f__(err, \" at utils\\\\customs.js:115\"));\n      });\n    });\n\n  },\n\n  //得到客户详情\n  custom_detail: function custom_detail(id) {\n    return new Promise(function (resolve, reject) {\n      var query = _bmob.default.Query('customs');\n      query.get(id).then(function (res) {\n        //console.log(res)\n        resolve(res);\n      }).catch(function (err) {\n        console.log(__f__(err, \" at utils\\\\customs.js:129\"));\n      });\n\n    });\n  },\n\n  //得到收款列表\n  get_moneyList: function get_moneyList(id) {\n    return new Promise(function (resolve, reject) {\n      var query = _bmob.default.Query(\"debt_history\");\n      query.equalTo(\"custom\", \"==\", id);\n      query.include(\"operater\");\n      query.find().then(function (res) {\n        console.log(__f__(res, \" at utils\\\\customs.js:142\"));\n        resolve(res);\n      });\n\n    });\n  } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 6)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///53\n");

/***/ }),

/***/ 56:
/*!************************************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fcustom%2Fcustom_detail%2Fdebt_history%2Fdebt_history"} ***!
  \************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _debt_history = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/custom/custom_detail/debt_history/debt_history.vue */ 57));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_debt_history.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw2STtBQUNBQSxVQUFVLENBQUNDLHFCQUFELENBQVYsQyIsImZpbGUiOiI1Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9jdXN0b20vY3VzdG9tX2RldGFpbC9kZWJ0X2hpc3RvcnkvZGVidF9oaXN0b3J5LnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///56\n");

/***/ }),

/***/ 6:
/*!*********************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = formatLog;function typof(v) {\n  var s = Object.prototype.toString.call(v);\n  return s.substring(8, s.length - 1);\n}\n\nfunction formatLog() {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}\n  var msgs = args.map(function (v) {\n    var type = Object.prototype.toString.call(v);\n    if (type.toLowerCase() === '[object object]') {\n      try {\n        v = '---BEGIN:JSON---' + JSON.stringify(v) + '---END:JSON---';\n      } catch (e) {\n        v = '[object object]';\n      }\n    } else {\n      if (v === null) {\n        v = '---NULL---';\n      } else if (v === undefined) {\n        v = '---UNDEFINED---';\n      } else {\n        var vType = typof(v).toUpperCase();\n        if (vType === 'NUMBER' || vType === 'BOOLEAN') {\n          v = '---BEGIN:' + vType + '---' + v + '---END:' + vType + '---';\n        } else {\n          v = String(v);\n        }\n      }\n    }\n    return v;\n  });\n  var msg = '';\n  if (msgs.length > 1) {\n    var lastMsg = msgs.pop();\n    msg = msgs.join('---COMMA---');\n    if (lastMsg.indexOf(' at ') === 0) {\n      msg += lastMsg;\n    } else {\n      msg += '---COMMA---' + lastMsg;\n    }\n  } else {\n    msg = msgs[0];\n  }\n  return msg;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbInR5cG9mIiwidiIsInMiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJmb3JtYXRMb2ciLCJhcmdzIiwibXNncyIsIm1hcCIsInR5cGUiLCJ0b0xvd2VyQ2FzZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlIiwidW5kZWZpbmVkIiwidlR5cGUiLCJ0b1VwcGVyQ2FzZSIsIlN0cmluZyIsIm1zZyIsImxhc3RNc2ciLCJwb3AiLCJqb2luIiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6IjBGQUFBLFNBQVNBLEtBQVQsQ0FBZ0JDLENBQWhCLEVBQW1CO0FBQ2pCLE1BQU1DLENBQUMsR0FBR0MsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxRQUFqQixDQUEwQkMsSUFBMUIsQ0FBK0JMLENBQS9CLENBQVY7QUFDQSxTQUFPQyxDQUFDLENBQUNLLFNBQUYsQ0FBWSxDQUFaLEVBQWVMLENBQUMsQ0FBQ00sTUFBRixHQUFXLENBQTFCLENBQVA7QUFDRDs7QUFFYyxTQUFTQyxTQUFULEdBQTZCLG1DQUFOQyxJQUFNLG9EQUFOQSxJQUFNO0FBQzFDLE1BQU1DLElBQUksR0FBR0QsSUFBSSxDQUFDRSxHQUFMLENBQVMsVUFBQ1gsQ0FBRCxFQUFPO0FBQzNCLFFBQU1ZLElBQUksR0FBR1YsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxRQUFqQixDQUEwQkMsSUFBMUIsQ0FBK0JMLENBQS9CLENBQWI7QUFDQSxRQUFJWSxJQUFJLENBQUNDLFdBQUwsT0FBdUIsaUJBQTNCLEVBQThDO0FBQzVDLFVBQUk7QUFDRmIsU0FBQyxHQUFHLHFCQUFxQmMsSUFBSSxDQUFDQyxTQUFMLENBQWVmLENBQWYsQ0FBckIsR0FBeUMsZ0JBQTdDO0FBQ0QsT0FGRCxDQUVFLE9BQU9nQixDQUFQLEVBQVU7QUFDVmhCLFNBQUMsR0FBRyxpQkFBSjtBQUNEO0FBQ0YsS0FORCxNQU1PO0FBQ0wsVUFBSUEsQ0FBQyxLQUFLLElBQVYsRUFBZ0I7QUFDZEEsU0FBQyxHQUFHLFlBQUo7QUFDRCxPQUZELE1BRU8sSUFBSUEsQ0FBQyxLQUFLaUIsU0FBVixFQUFxQjtBQUMxQmpCLFNBQUMsR0FBRyxpQkFBSjtBQUNELE9BRk0sTUFFQTtBQUNMLFlBQU1rQixLQUFLLEdBQUduQixLQUFLLENBQUNDLENBQUQsQ0FBTCxDQUFTbUIsV0FBVCxFQUFkO0FBQ0EsWUFBSUQsS0FBSyxLQUFLLFFBQVYsSUFBc0JBLEtBQUssS0FBSyxTQUFwQyxFQUErQztBQUM3Q2xCLFdBQUMsR0FBRyxjQUFja0IsS0FBZCxHQUFzQixLQUF0QixHQUE4QmxCLENBQTlCLEdBQWtDLFNBQWxDLEdBQThDa0IsS0FBOUMsR0FBc0QsS0FBMUQ7QUFDRCxTQUZELE1BRU87QUFDTGxCLFdBQUMsR0FBR29CLE1BQU0sQ0FBQ3BCLENBQUQsQ0FBVjtBQUNEO0FBQ0Y7QUFDRjtBQUNELFdBQU9BLENBQVA7QUFDRCxHQXZCWSxDQUFiO0FBd0JBLE1BQUlxQixHQUFHLEdBQUcsRUFBVjtBQUNBLE1BQUlYLElBQUksQ0FBQ0gsTUFBTCxHQUFjLENBQWxCLEVBQXFCO0FBQ25CLFFBQU1lLE9BQU8sR0FBR1osSUFBSSxDQUFDYSxHQUFMLEVBQWhCO0FBQ0FGLE9BQUcsR0FBR1gsSUFBSSxDQUFDYyxJQUFMLENBQVUsYUFBVixDQUFOO0FBQ0EsUUFBSUYsT0FBTyxDQUFDRyxPQUFSLENBQWdCLE1BQWhCLE1BQTRCLENBQWhDLEVBQW1DO0FBQ2pDSixTQUFHLElBQUlDLE9BQVA7QUFDRCxLQUZELE1BRU87QUFDTEQsU0FBRyxJQUFJLGdCQUFnQkMsT0FBdkI7QUFDRDtBQUNGLEdBUkQsTUFRTztBQUNMRCxPQUFHLEdBQUdYLElBQUksQ0FBQyxDQUFELENBQVY7QUFDRDtBQUNELFNBQU9XLEdBQVA7QUFDRCIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gdHlwb2YgKHYpIHtcclxuICBjb25zdCBzID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHYpXHJcbiAgcmV0dXJuIHMuc3Vic3RyaW5nKDgsIHMubGVuZ3RoIC0gMSlcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0TG9nICguLi5hcmdzKSB7XHJcbiAgY29uc3QgbXNncyA9IGFyZ3MubWFwKCh2KSA9PiB7XHJcbiAgICBjb25zdCB0eXBlID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHYpXHJcbiAgICBpZiAodHlwZS50b0xvd2VyQ2FzZSgpID09PSAnW29iamVjdCBvYmplY3RdJykge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHYgPSAnLS0tQkVHSU46SlNPTi0tLScgKyBKU09OLnN0cmluZ2lmeSh2KSArICctLS1FTkQ6SlNPTi0tLSdcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHYgPSAnW29iamVjdCBvYmplY3RdJ1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodiA9PT0gbnVsbCkge1xyXG4gICAgICAgIHYgPSAnLS0tTlVMTC0tLSdcclxuICAgICAgfSBlbHNlIGlmICh2ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICB2ID0gJy0tLVVOREVGSU5FRC0tLSdcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zdCB2VHlwZSA9IHR5cG9mKHYpLnRvVXBwZXJDYXNlKClcclxuICAgICAgICBpZiAodlR5cGUgPT09ICdOVU1CRVInIHx8IHZUeXBlID09PSAnQk9PTEVBTicpIHtcclxuICAgICAgICAgIHYgPSAnLS0tQkVHSU46JyArIHZUeXBlICsgJy0tLScgKyB2ICsgJy0tLUVORDonICsgdlR5cGUgKyAnLS0tJ1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB2ID0gU3RyaW5nKHYpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdlxyXG4gIH0pXHJcbiAgbGV0IG1zZyA9ICcnXHJcbiAgaWYgKG1zZ3MubGVuZ3RoID4gMSkge1xyXG4gICAgY29uc3QgbGFzdE1zZyA9IG1zZ3MucG9wKClcclxuICAgIG1zZyA9IG1zZ3Muam9pbignLS0tQ09NTUEtLS0nKVxyXG4gICAgaWYgKGxhc3RNc2cuaW5kZXhPZignIGF0ICcpID09PSAwKSB7XHJcbiAgICAgIG1zZyArPSBsYXN0TXNnXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBtc2cgKz0gJy0tLUNPTU1BLS0tJyArIGxhc3RNc2dcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgbXNnID0gbXNnc1swXVxyXG4gIH1cclxuICByZXR1cm4gbXNnXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n");

/***/ }),

/***/ 64:
/*!**************************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fcustom%2Fproducer_detail%2Fproducer_detail"} ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _producer_detail = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/custom/producer_detail/producer_detail.vue */ 65));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_producer_detail.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSx3STtBQUNBQSxVQUFVLENBQUNDLHdCQUFELENBQVYsQyIsImZpbGUiOiI2NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9jdXN0b20vcHJvZHVjZXJfZGV0YWlsL3Byb2R1Y2VyX2RldGFpbC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///64\n");

/***/ }),

/***/ 70:
/*!**************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/utils/producers.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _bmob = _interopRequireDefault(__webpack_require__(/*! @/utils/bmob.js */ 10));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var _default =\n{\n  //得到门店列表\n\n  get_producerList: function get_producerList(disabled, search_text) {\n    return new Promise(function (resolve, reject) {\n      var userid = JSON.parse(localStorage.getItem('bmob')).objectId;\n      var query = _bmob.default.Query(\"producers\");\n      query.order(\"num\");\n      query.equalTo(\"parent\", \"==\", userid);\n      query.equalTo(\"disabled\", \"==\", disabled);\n      if (search_text) {\n        query.equalTo(\"name\", \"==\", {\n          \"$regex\": \"\" + search_text + \".*\" });\n\n\n      }\n      query.find().then(function (res) {\n        localStorage.setItem(\"shops\", JSON.stringify(res));\n        resolve(res);\n      });\n    });\n\n  },\n\n\n  //增加数据操作\n  add_producer: function add_producer(params) {\n\n    console.log(__f__(params, \" at utils\\\\producers.js:30\"));\n    var userid = JSON.parse(localStorage.getItem('bmob')).objectId;\n\n    return new Promise(function (resolve, reject) {\n      var pointer = _bmob.default.Pointer('_User');\n      var poiID = pointer.set(userid);\n\n      if (params.objectId) {//修改操作\n        var query = _bmob.default.Query('producers');\n        query.set(\"producer_name\", params.producer_name);\n        query.set(\"debt\", Number(params.debt));\n        query.set(\"producer_address\", params.producer_address);\n        query.set(\"producer_phone\", params.producer_phone);\n        query.set(\"parent\", poiID);\n        query.set(\"disabled\", !params.disabled);\n        query.set(\"id\", params.objectId);\n        query.save().then(function (res) {\n          resolve(res);\n        }).catch(function (err) {\n          console.log(__f__(err, \" at utils\\\\producers.js:49\"));\n\n        });\n      } else {\n\n        var _query = _bmob.default.Query(\"producers\");\n        _query.equalTo(\"parent\", \"==\", userid);\n        _query.equalTo(\"name\", \"==\", params.producer_name);\n        _query.find().then(function (res) {\n          console.log(__f__(res, \" at utils\\\\producers.js:58\"));\n          if (res.length == 0) {\n            var _query2 = _bmob.default.Query('producers');\n            _query2.set(\"producer_name\", params.producer_name);\n            _query2.set(\"debt\", Number(params.debt));\n            _query2.set(\"producer_address\", params.producer_address);\n            _query2.set(\"producer_phone\", params.producer_phone);\n            _query2.set(\"have_out\", 0);\n            _query2.set(\"disabled\", !params.disabled);\n            _query2.set(\"parent\", poiID);\n            _query2.save().then(function (res) {\n              resolve(res);\n            }).catch(function (err) {\n              console.log(__f__(err, \" at utils\\\\producers.js:71\"));\n            });\n          } else {\n            resolve(false);\n          }\n\n        });\n\n      }\n\n    });\n  },\n\n  //删除门店\n  delete_producer: function delete_producer(id) {\n    return new Promise(function (resolve, reject) {\n      var query = _bmob.default.Query(\"producers\");\n      query.destroy(id).then(function (res) {\n        resolve(res);\n      }).catch(function (err) {\n        console.log(__f__(err, \" at utils\\\\producers.js:91\"));\n      });\n    });\n\n  },\n\n  //得到供货商详情\n  producer_detail: function producer_detail(id) {\n    return new Promise(function (resolve, reject) {\n      var query = _bmob.default.Query('producers');\n      query.get(id).then(function (res) {\n        //console.log(res)\n        resolve(res);\n      }).catch(function (err) {\n        console.log(__f__(err, \" at utils\\\\producers.js:105\"));\n      });\n\n    });\n  },\n\n  //得到还款列表\n  get_moneyList: function get_moneyList(id) {\n    return new Promise(function (resolve, reject) {\n      var query = _bmob.default.Query(\"debt_history\");\n      query.equalTo(\"producer\", \"==\", id);\n      query.include(\"operater\");\n      query.find().then(function (res) {\n        console.log(__f__(res, \" at utils\\\\producers.js:118\"));\n        resolve(res);\n      });\n\n    });\n  } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 6)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vdXRpbHMvcHJvZHVjZXJzLmpzIl0sIm5hbWVzIjpbImdldF9wcm9kdWNlckxpc3QiLCJkaXNhYmxlZCIsInNlYXJjaF90ZXh0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ1c2VyaWQiLCJKU09OIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwib2JqZWN0SWQiLCJxdWVyeSIsIkJtb2IiLCJRdWVyeSIsIm9yZGVyIiwiZXF1YWxUbyIsImZpbmQiLCJ0aGVuIiwicmVzIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsImFkZF9wcm9kdWNlciIsInBhcmFtcyIsImNvbnNvbGUiLCJsb2ciLCJwb2ludGVyIiwiUG9pbnRlciIsInBvaUlEIiwic2V0IiwicHJvZHVjZXJfbmFtZSIsIk51bWJlciIsImRlYnQiLCJwcm9kdWNlcl9hZGRyZXNzIiwicHJvZHVjZXJfcGhvbmUiLCJzYXZlIiwiY2F0Y2giLCJlcnIiLCJsZW5ndGgiLCJkZWxldGVfcHJvZHVjZXIiLCJpZCIsImRlc3Ryb3kiLCJwcm9kdWNlcl9kZXRhaWwiLCJnZXQiLCJnZXRfbW9uZXlMaXN0IiwiaW5jbHVkZSJdLCJtYXBwaW5ncyI6Im9JQUFBLG1GO0FBQ2U7QUFDZDs7QUFFQUEsa0JBSGMsNEJBR0dDLFFBSEgsRUFHWUMsV0FIWixFQUd5QjtBQUN0QyxXQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDdkMsVUFBSUMsTUFBTSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0MsWUFBWSxDQUFDQyxPQUFiLENBQXFCLE1BQXJCLENBQVgsRUFBeUNDLFFBQXREO0FBQ0EsVUFBTUMsS0FBSyxHQUFHQyxjQUFLQyxLQUFMLENBQVcsV0FBWCxDQUFkO0FBQ0FGLFdBQUssQ0FBQ0csS0FBTixDQUFZLEtBQVo7QUFDQUgsV0FBSyxDQUFDSSxPQUFOLENBQWMsUUFBZCxFQUF3QixJQUF4QixFQUE4QlYsTUFBOUI7QUFDQU0sV0FBSyxDQUFDSSxPQUFOLENBQWMsVUFBZCxFQUEwQixJQUExQixFQUErQmYsUUFBL0I7QUFDQSxVQUFJQyxXQUFKLEVBQWlCO0FBQ2hCVSxhQUFLLENBQUNJLE9BQU4sQ0FBYyxNQUFkLEVBQXNCLElBQXRCLEVBQTRCO0FBQzNCLG9CQUFVLEtBQUtkLFdBQUwsR0FBbUIsSUFERixFQUE1Qjs7O0FBSUE7QUFDRFUsV0FBSyxDQUFDSyxJQUFOLEdBQWFDLElBQWIsQ0FBa0IsVUFBQUMsR0FBRyxFQUFJO0FBQ3hCVixvQkFBWSxDQUFDVyxPQUFiLENBQXFCLE9BQXJCLEVBQTZCYixJQUFJLENBQUNjLFNBQUwsQ0FBZUYsR0FBZixDQUE3QjtBQUNBZixlQUFPLENBQUNlLEdBQUQsQ0FBUDtBQUNBLE9BSEQ7QUFJQSxLQWhCTSxDQUFQOztBQWtCQSxHQXRCYTs7O0FBeUJkO0FBQ0FHLGNBMUJjLHdCQTBCREMsTUExQkMsRUEwQk87O0FBRXBCQyxXQUFPLENBQUNDLEdBQVIsT0FBWUYsTUFBWjtBQUNBLFFBQUlqQixNQUFNLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXQyxZQUFZLENBQUNDLE9BQWIsQ0FBcUIsTUFBckIsQ0FBWCxFQUF5Q0MsUUFBdEQ7O0FBRUEsV0FBTyxJQUFJUixPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3ZDLFVBQU1xQixPQUFPLEdBQUdiLGNBQUtjLE9BQUwsQ0FBYSxPQUFiLENBQWhCO0FBQ0EsVUFBSUMsS0FBSyxHQUFHRixPQUFPLENBQUNHLEdBQVIsQ0FBWXZCLE1BQVosQ0FBWjs7QUFFQSxVQUFJaUIsTUFBTSxDQUFDWixRQUFYLEVBQXFCLENBQUM7QUFDckIsWUFBTUMsS0FBSyxHQUFHQyxjQUFLQyxLQUFMLENBQVcsV0FBWCxDQUFkO0FBQ0FGLGFBQUssQ0FBQ2lCLEdBQU4sQ0FBVSxlQUFWLEVBQTJCTixNQUFNLENBQUNPLGFBQWxDO0FBQ0FsQixhQUFLLENBQUNpQixHQUFOLENBQVUsTUFBVixFQUFrQkUsTUFBTSxDQUFDUixNQUFNLENBQUNTLElBQVIsQ0FBeEI7QUFDQXBCLGFBQUssQ0FBQ2lCLEdBQU4sQ0FBVSxrQkFBVixFQUE4Qk4sTUFBTSxDQUFDVSxnQkFBckM7QUFDQXJCLGFBQUssQ0FBQ2lCLEdBQU4sQ0FBVSxnQkFBVixFQUE0Qk4sTUFBTSxDQUFDVyxjQUFuQztBQUNBdEIsYUFBSyxDQUFDaUIsR0FBTixDQUFVLFFBQVYsRUFBb0JELEtBQXBCO0FBQ0FoQixhQUFLLENBQUNpQixHQUFOLENBQVUsVUFBVixFQUFzQixDQUFDTixNQUFNLENBQUN0QixRQUE5QjtBQUNBVyxhQUFLLENBQUNpQixHQUFOLENBQVUsSUFBVixFQUFnQk4sTUFBTSxDQUFDWixRQUF2QjtBQUNBQyxhQUFLLENBQUN1QixJQUFOLEdBQWFqQixJQUFiLENBQWtCLFVBQUFDLEdBQUcsRUFBSTtBQUN4QmYsaUJBQU8sQ0FBQ2UsR0FBRCxDQUFQO0FBQ0EsU0FGRCxFQUVHaUIsS0FGSCxDQUVTLFVBQUFDLEdBQUcsRUFBSTtBQUNmYixpQkFBTyxDQUFDQyxHQUFSLE9BQVlZLEdBQVo7O0FBRUEsU0FMRDtBQU1BLE9BZkQsTUFlTzs7QUFFTixZQUFNekIsTUFBSyxHQUFHQyxjQUFLQyxLQUFMLENBQVcsV0FBWCxDQUFkO0FBQ0FGLGNBQUssQ0FBQ0ksT0FBTixDQUFjLFFBQWQsRUFBd0IsSUFBeEIsRUFBOEJWLE1BQTlCO0FBQ0FNLGNBQUssQ0FBQ0ksT0FBTixDQUFjLE1BQWQsRUFBc0IsSUFBdEIsRUFBMkJPLE1BQU0sQ0FBQ08sYUFBbEM7QUFDQWxCLGNBQUssQ0FBQ0ssSUFBTixHQUFhQyxJQUFiLENBQWtCLFVBQUFDLEdBQUcsRUFBSTtBQUN4QkssaUJBQU8sQ0FBQ0MsR0FBUixPQUFZTixHQUFaO0FBQ0EsY0FBSUEsR0FBRyxDQUFDbUIsTUFBSixJQUFjLENBQWxCLEVBQXFCO0FBQ3BCLGdCQUFNMUIsT0FBSyxHQUFHQyxjQUFLQyxLQUFMLENBQVcsV0FBWCxDQUFkO0FBQ0FGLG1CQUFLLENBQUNpQixHQUFOLENBQVUsZUFBVixFQUEyQk4sTUFBTSxDQUFDTyxhQUFsQztBQUNBbEIsbUJBQUssQ0FBQ2lCLEdBQU4sQ0FBVSxNQUFWLEVBQWtCRSxNQUFNLENBQUNSLE1BQU0sQ0FBQ1MsSUFBUixDQUF4QjtBQUNBcEIsbUJBQUssQ0FBQ2lCLEdBQU4sQ0FBVSxrQkFBVixFQUE2Qk4sTUFBTSxDQUFDVSxnQkFBcEM7QUFDQXJCLG1CQUFLLENBQUNpQixHQUFOLENBQVUsZ0JBQVYsRUFBMkJOLE1BQU0sQ0FBQ1csY0FBbEM7QUFDQXRCLG1CQUFLLENBQUNpQixHQUFOLENBQVUsVUFBVixFQUFzQixDQUF0QjtBQUNBakIsbUJBQUssQ0FBQ2lCLEdBQU4sQ0FBVSxVQUFWLEVBQXNCLENBQUNOLE1BQU0sQ0FBQ3RCLFFBQTlCO0FBQ0FXLG1CQUFLLENBQUNpQixHQUFOLENBQVUsUUFBVixFQUFvQkQsS0FBcEI7QUFDQWhCLG1CQUFLLENBQUN1QixJQUFOLEdBQWFqQixJQUFiLENBQWtCLFVBQUFDLEdBQUcsRUFBSTtBQUN4QmYscUJBQU8sQ0FBQ2UsR0FBRCxDQUFQO0FBQ0EsYUFGRCxFQUVHaUIsS0FGSCxDQUVTLFVBQUFDLEdBQUcsRUFBSTtBQUNmYixxQkFBTyxDQUFDQyxHQUFSLE9BQVlZLEdBQVo7QUFDQSxhQUpEO0FBS0EsV0FkRCxNQWNPO0FBQ05qQyxtQkFBTyxDQUFDLEtBQUQsQ0FBUDtBQUNBOztBQUVELFNBcEJEOztBQXNCQTs7QUFFRCxLQWhETSxDQUFQO0FBaURBLEdBaEZhOztBQWtGZDtBQUNBbUMsaUJBbkZjLDJCQW1GRUMsRUFuRkYsRUFtRk07QUFDbkIsV0FBTyxJQUFJckMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUN2QyxVQUFNTyxLQUFLLEdBQUdDLGNBQUtDLEtBQUwsQ0FBVyxXQUFYLENBQWQ7QUFDQUYsV0FBSyxDQUFDNkIsT0FBTixDQUFjRCxFQUFkLEVBQWtCdEIsSUFBbEIsQ0FBdUIsVUFBQUMsR0FBRyxFQUFJO0FBQzdCZixlQUFPLENBQUNlLEdBQUQsQ0FBUDtBQUNBLE9BRkQsRUFFR2lCLEtBRkgsQ0FFUyxVQUFBQyxHQUFHLEVBQUk7QUFDZmIsZUFBTyxDQUFDQyxHQUFSLE9BQVlZLEdBQVo7QUFDQSxPQUpEO0FBS0EsS0FQTSxDQUFQOztBQVNBLEdBN0ZhOztBQStGZDtBQUNBSyxpQkFoR2MsMkJBZ0dFRixFQWhHRixFQWdHTTtBQUNuQixXQUFPLElBQUlyQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3ZDLFVBQU1PLEtBQUssR0FBR0MsY0FBS0MsS0FBTCxDQUFXLFdBQVgsQ0FBZDtBQUNBRixXQUFLLENBQUMrQixHQUFOLENBQVVILEVBQVYsRUFBY3RCLElBQWQsQ0FBbUIsVUFBQUMsR0FBRyxFQUFJO0FBQ3pCO0FBQ0FmLGVBQU8sQ0FBQ2UsR0FBRCxDQUFQO0FBQ0EsT0FIRCxFQUdHaUIsS0FISCxDQUdTLFVBQUFDLEdBQUcsRUFBSTtBQUNmYixlQUFPLENBQUNDLEdBQVIsT0FBWVksR0FBWjtBQUNBLE9BTEQ7O0FBT0EsS0FUTSxDQUFQO0FBVUEsR0EzR2E7O0FBNkdkO0FBQ0FPLGVBOUdjLHlCQThHQUosRUE5R0EsRUE4R0c7QUFDaEIsV0FBTyxJQUFJckMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUN2QyxVQUFNTyxLQUFLLEdBQUdDLGNBQUtDLEtBQUwsQ0FBVyxjQUFYLENBQWQ7QUFDQUYsV0FBSyxDQUFDSSxPQUFOLENBQWMsVUFBZCxFQUF5QixJQUF6QixFQUErQndCLEVBQS9CO0FBQ0E1QixXQUFLLENBQUNpQyxPQUFOLENBQWMsVUFBZDtBQUNBakMsV0FBSyxDQUFDSyxJQUFOLEdBQWFDLElBQWIsQ0FBa0IsVUFBQUMsR0FBRyxFQUFJO0FBQ3JCSyxlQUFPLENBQUNDLEdBQVIsT0FBWU4sR0FBWjtBQUNGZixlQUFPLENBQUNlLEdBQUQsQ0FBUDtBQUNELE9BSEQ7O0FBS0EsS0FUTSxDQUFQO0FBVUEsR0F6SGEsRSIsImZpbGUiOiI3MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCbW9iIGZyb20gJ0AvdXRpbHMvYm1vYi5qcyc7XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHQvL+W+l+WIsOmXqOW6l+WIl+ihqFxyXG5cclxuXHRnZXRfcHJvZHVjZXJMaXN0KGRpc2FibGVkLHNlYXJjaF90ZXh0KSB7XHJcblx0XHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG5cdFx0XHRsZXQgdXNlcmlkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYm1vYicpKS5vYmplY3RJZDtcclxuXHRcdFx0Y29uc3QgcXVlcnkgPSBCbW9iLlF1ZXJ5KFwicHJvZHVjZXJzXCIpO1xyXG5cdFx0XHRxdWVyeS5vcmRlcihcIm51bVwiKTtcclxuXHRcdFx0cXVlcnkuZXF1YWxUbyhcInBhcmVudFwiLCBcIj09XCIsIHVzZXJpZCk7XHJcblx0XHRcdHF1ZXJ5LmVxdWFsVG8oXCJkaXNhYmxlZFwiLCBcIj09XCIsZGlzYWJsZWQpO1xyXG5cdFx0XHRpZiAoc2VhcmNoX3RleHQpIHtcclxuXHRcdFx0XHRxdWVyeS5lcXVhbFRvKFwibmFtZVwiLCBcIj09XCIsIHtcclxuXHRcdFx0XHRcdFwiJHJlZ2V4XCI6IFwiXCIgKyBzZWFyY2hfdGV4dCArIFwiLipcIlxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcclxuXHRcdFx0fVxyXG5cdFx0XHRxdWVyeS5maW5kKCkudGhlbihyZXMgPT4ge1xyXG5cdFx0XHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwic2hvcHNcIixKU09OLnN0cmluZ2lmeShyZXMpKVxyXG5cdFx0XHRcdHJlc29sdmUocmVzKVxyXG5cdFx0XHR9KTtcclxuXHRcdH0pXHJcblx0XHRcclxuXHR9LFxyXG5cdFxyXG5cdFxyXG5cdC8v5aKe5Yqg5pWw5o2u5pON5L2cXHJcblx0YWRkX3Byb2R1Y2VyKHBhcmFtcykge1xyXG5cdFx0XHJcblx0XHRjb25zb2xlLmxvZyhwYXJhbXMpXHJcblx0XHRsZXQgdXNlcmlkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYm1vYicpKS5vYmplY3RJZDtcclxuXHRcdFxyXG5cdFx0cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuXHRcdFx0Y29uc3QgcG9pbnRlciA9IEJtb2IuUG9pbnRlcignX1VzZXInKTtcclxuXHRcdFx0bGV0IHBvaUlEID0gcG9pbnRlci5zZXQodXNlcmlkKTtcclxuXHRcdFx0XHJcblx0XHRcdGlmIChwYXJhbXMub2JqZWN0SWQpIHsvL+S/ruaUueaTjeS9nFxyXG5cdFx0XHRcdGNvbnN0IHF1ZXJ5ID0gQm1vYi5RdWVyeSgncHJvZHVjZXJzJyk7XHJcblx0XHRcdFx0cXVlcnkuc2V0KFwicHJvZHVjZXJfbmFtZVwiLCBwYXJhbXMucHJvZHVjZXJfbmFtZSk7XHJcblx0XHRcdFx0cXVlcnkuc2V0KFwiZGVidFwiLCBOdW1iZXIocGFyYW1zLmRlYnQpKTtcclxuXHRcdFx0XHRxdWVyeS5zZXQoXCJwcm9kdWNlcl9hZGRyZXNzXCIsIHBhcmFtcy5wcm9kdWNlcl9hZGRyZXNzKTtcclxuXHRcdFx0XHRxdWVyeS5zZXQoXCJwcm9kdWNlcl9waG9uZVwiLCBwYXJhbXMucHJvZHVjZXJfcGhvbmUpO1xyXG5cdFx0XHRcdHF1ZXJ5LnNldChcInBhcmVudFwiLCBwb2lJRCk7XHJcblx0XHRcdFx0cXVlcnkuc2V0KFwiZGlzYWJsZWRcIiwgIXBhcmFtcy5kaXNhYmxlZCk7XHJcblx0XHRcdFx0cXVlcnkuc2V0KFwiaWRcIiwgcGFyYW1zLm9iamVjdElkKTtcclxuXHRcdFx0XHRxdWVyeS5zYXZlKCkudGhlbihyZXMgPT4ge1xyXG5cdFx0XHRcdFx0cmVzb2x2ZShyZXMpXHJcblx0XHRcdFx0fSkuY2F0Y2goZXJyID0+IHtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKGVycilcclxuXHRcdFx0XHRcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGNvbnN0IHF1ZXJ5ID0gQm1vYi5RdWVyeShcInByb2R1Y2Vyc1wiKTtcclxuXHRcdFx0XHRxdWVyeS5lcXVhbFRvKFwicGFyZW50XCIsIFwiPT1cIiwgdXNlcmlkKTtcclxuXHRcdFx0XHRxdWVyeS5lcXVhbFRvKFwibmFtZVwiLCBcIj09XCIscGFyYW1zLnByb2R1Y2VyX25hbWUpO1xyXG5cdFx0XHRcdHF1ZXJ5LmZpbmQoKS50aGVuKHJlcyA9PiB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhyZXMpXHJcblx0XHRcdFx0XHRpZiAocmVzLmxlbmd0aCA9PSAwKSB7XHJcblx0XHRcdFx0XHRcdGNvbnN0IHF1ZXJ5ID0gQm1vYi5RdWVyeSgncHJvZHVjZXJzJyk7XHJcblx0XHRcdFx0XHRcdHF1ZXJ5LnNldChcInByb2R1Y2VyX25hbWVcIiwgcGFyYW1zLnByb2R1Y2VyX25hbWUpO1xyXG5cdFx0XHRcdFx0XHRxdWVyeS5zZXQoXCJkZWJ0XCIsIE51bWJlcihwYXJhbXMuZGVidCkpO1xyXG5cdFx0XHRcdFx0XHRxdWVyeS5zZXQoXCJwcm9kdWNlcl9hZGRyZXNzXCIscGFyYW1zLnByb2R1Y2VyX2FkZHJlc3MpO1xyXG5cdFx0XHRcdFx0XHRxdWVyeS5zZXQoXCJwcm9kdWNlcl9waG9uZVwiLHBhcmFtcy5wcm9kdWNlcl9waG9uZSk7XHJcblx0XHRcdFx0XHRcdHF1ZXJ5LnNldChcImhhdmVfb3V0XCIsIDApO1xyXG5cdFx0XHRcdFx0XHRxdWVyeS5zZXQoXCJkaXNhYmxlZFwiLCAhcGFyYW1zLmRpc2FibGVkKTtcclxuXHRcdFx0XHRcdFx0cXVlcnkuc2V0KFwicGFyZW50XCIsIHBvaUlEKTtcclxuXHRcdFx0XHRcdFx0cXVlcnkuc2F2ZSgpLnRoZW4ocmVzID0+IHtcclxuXHRcdFx0XHRcdFx0XHRyZXNvbHZlKHJlcylcclxuXHRcdFx0XHRcdFx0fSkuY2F0Y2goZXJyID0+IHtcclxuXHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpXHJcblx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRyZXNvbHZlKGZhbHNlKVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHR9XHJcblx0XHRcdFx0XHJcblx0XHR9KVxyXG5cdH0sXHJcblx0XHJcblx0Ly/liKDpmaTpl6jlupdcclxuXHRkZWxldGVfcHJvZHVjZXIoaWQpIHtcclxuXHRcdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcblx0XHRcdGNvbnN0IHF1ZXJ5ID0gQm1vYi5RdWVyeShcInByb2R1Y2Vyc1wiKTtcclxuXHRcdFx0cXVlcnkuZGVzdHJveShpZCkudGhlbihyZXMgPT4ge1xyXG5cdFx0XHRcdHJlc29sdmUocmVzKVxyXG5cdFx0XHR9KS5jYXRjaChlcnIgPT4ge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycilcclxuXHRcdFx0fSlcclxuXHRcdH0pXHJcblx0XHRcclxuXHR9LFxyXG5cdFxyXG5cdC8v5b6X5Yiw5L6b6LSn5ZWG6K+m5oOFXHJcblx0cHJvZHVjZXJfZGV0YWlsKGlkKSB7XHJcblx0XHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG5cdFx0XHRjb25zdCBxdWVyeSA9IEJtb2IuUXVlcnkoJ3Byb2R1Y2VycycpO1xyXG5cdFx0XHRxdWVyeS5nZXQoaWQpLnRoZW4ocmVzID0+IHtcclxuXHRcdFx0XHQvL2NvbnNvbGUubG9nKHJlcylcclxuXHRcdFx0XHRyZXNvbHZlKHJlcylcclxuXHRcdFx0fSkuY2F0Y2goZXJyID0+IHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpXHJcblx0XHRcdH0pXHJcblx0XHJcblx0XHR9KVxyXG5cdH0sXHJcblx0XHJcblx0Ly/lvpfliLDov5jmrL7liJfooahcclxuXHRnZXRfbW9uZXlMaXN0KGlkKXtcclxuXHRcdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcblx0XHRcdGNvbnN0IHF1ZXJ5ID0gQm1vYi5RdWVyeShcImRlYnRfaGlzdG9yeVwiKTtcclxuXHRcdFx0cXVlcnkuZXF1YWxUbyhcInByb2R1Y2VyXCIsXCI9PVwiLCBpZCk7XHJcblx0XHRcdHF1ZXJ5LmluY2x1ZGUoXCJvcGVyYXRlclwiKTtcclxuXHRcdFx0cXVlcnkuZmluZCgpLnRoZW4ocmVzID0+IHtcclxuXHRcdFx0ICAgIGNvbnNvbGUubG9nKHJlcylcclxuXHRcdFx0XHRcdHJlc29sdmUocmVzKVxyXG5cdFx0XHR9KTtcclxuXHRcdFx0XHJcblx0XHR9KVxyXG5cdH0sXHJcblx0XHJcblxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///70\n");

/***/ }),

/***/ 73:
/*!**********************************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fcustom%2Fcustom_detail%2Fcustom_detail"} ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _custom_detail = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/custom/custom_detail/custom_detail.vue */ 74));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_custom_detail.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxrSTtBQUNBQSxVQUFVLENBQUNDLHNCQUFELENBQVYsQyIsImZpbGUiOiI3My5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9jdXN0b20vY3VzdG9tX2RldGFpbC9jdXN0b21fZGV0YWlsLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///73\n");

/***/ }),

/***/ 81:
/*!***************************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fmanage%2Fgood_det%2Fgood_det"} ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _good_det = _interopRequireDefault(__webpack_require__(/*! ./pages/manage/good_det/good_det.vue */ 82));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_good_det.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSw0RztBQUNBQSxVQUFVLENBQUNDLGlCQUFELENBQVYsQyIsImZpbGUiOiI4MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL21hbmFnZS9nb29kX2RldC9nb29kX2RldC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///81\n");

/***/ }),

/***/ 89:
/*!****************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Flanding%2Flanding"} ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _landing = _interopRequireDefault(__webpack_require__(/*! ./pages/landing/landing.vue */ 90));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_landing.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxrRztBQUNBQSxVQUFVLENBQUNDLGdCQUFELENBQVYsQyIsImZpbGUiOiI4OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL2xhbmRpbmcvbGFuZGluZy52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///89\n");

/***/ }),

/***/ 97:
/*!******************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/新建文件夹 (8)/wechat/main.js?{"page":"pages%2Fregister%2Fregister"} ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _register = _interopRequireDefault(__webpack_require__(/*! ./pages/register/register.vue */ 98));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_register.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUE7O0FBRUE7QUFDQSxxRztBQUNBQSxVQUFVLENBQUNDLGlCQUFELENBQVYsQyIsImZpbGUiOiI5Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///97\n");

/***/ })

}]);